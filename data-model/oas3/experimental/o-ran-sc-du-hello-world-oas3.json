{
	 "openapi": "3.0.3",
	 "info": {
		 "version": "1.0.0",
		 "title": "O-RAN-DU-01 modules of RestConf version RFC8040"
	},
	 "servers": [
		{
			 "url": "http://[2001:db8:1:1::21]:8181/"
		}
	],
	 "paths": {
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount": {
			 "get": {
				 "description": "Queries the operational (running) datastore on the mounted hosted.",
				 "summary": "GET - O-RAN-DU-01 - data",
				 "tags": [
					"mounted O-RAN-DU-01 GET root"
				],
				 "responses": {
					 "200": {
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount": {
			 "get": {
				 "description": "Queries the available operations (RPC calls) on the mounted hosted.",
				 "summary": "GET - O-RAN-DU-01 - operations",
				 "tags": [
					"mounted O-RAN-DU-01 GET root"
				],
				 "responses": {
					 "200": {
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:keystore": {
			 "post": {
				 "description": "The keystore contains a list of keys.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - keystore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_config_keystore_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_config_keystore_post_xml"
							}
						}
					},
					 "description": "keystore_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "The keystore contains a list of keys.",
				 "summary": "GET - O-RAN-DU-01 - ietf-keystore - keystore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-keystore - keystore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "description": "The keystore contains a list of keys.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "The keystore contains a list of keys.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-keystore - keystore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_config_keystore_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_config_keystore"
							}
						}
					},
					 "description": "keystore_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:keystore/asymmetric-keys": {
			 "post": {
				 "description": "A list of asymmetric keys.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - asymmetric-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_config_asymmetric-keys_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_config_asymmetric-keys_post_xml"
							}
						}
					},
					 "description": "asymmetric-keys_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A list of asymmetric keys.",
				 "summary": "GET - O-RAN-DU-01 - ietf-keystore - asymmetric-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-keystore - asymmetric-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "description": "A list of asymmetric keys.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A list of asymmetric keys.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-keystore - asymmetric-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_config_asymmetric-keys_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_config_asymmetric-keys"
							}
						}
					},
					 "description": "asymmetric-keys_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:keystore/asymmetric-keys/asymmetric-key={name}": {
			 "post": {
				 "description": "An asymmetric key.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - asymmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key_post_xml"
							}
						}
					},
					 "description": "asymmetric-key_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "An asymmetric key.",
				 "summary": "GET - O-RAN-DU-01 - ietf-keystore - asymmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-keystore - asymmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "description": "An asymmetric key.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "An asymmetric key.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-keystore - asymmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key"
							}
						}
					},
					 "description": "asymmetric-key_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:keystore/asymmetric-keys/asymmetric-key={name}/generate-certificate-signing-request": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_input"
							}
						}
					},
					 "description": "generate-certificate-signing-request_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_output_TOP"
								}
							}
						},
						 "description": "RPC generate-certificate-signing-request success"
					}
				},
				 "description": "Generates a certificate signing request structure for\nthe associated asymmetric key using the passed subject\nand attribute values.  The specified assertions need\nto be appropriate for the certificate's use.  For\nexample, an entity certificate for a TLS server\nSHOULD have values that enable clients to satisfy\nRFC 6125 processing.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - generate-certificate-signing-request",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				]
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:keystore/asymmetric-keys/asymmetric-key={name}/certificates": {
			 "post": {
				 "description": "Certificates associated with this asymmetric key.\nMore than one certificate supports, for instance,\na TPM-protected asymmetric key that has both IDevID\nand LDevID certificates associated.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - certificates",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates_post_xml"
							}
						}
					},
					 "description": "certificates_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Certificates associated with this asymmetric key.\nMore than one certificate supports, for instance,\na TPM-protected asymmetric key that has both IDevID\nand LDevID certificates associated.",
				 "summary": "GET - O-RAN-DU-01 - ietf-keystore - certificates",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-keystore - certificates",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "description": "Certificates associated with this asymmetric key.\nMore than one certificate supports, for instance,\na TPM-protected asymmetric key that has both IDevID\nand LDevID certificates associated.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Certificates associated with this asymmetric key.\nMore than one certificate supports, for instance,\na TPM-protected asymmetric key that has both IDevID\nand LDevID certificates associated.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-keystore - certificates",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates"
							}
						}
					},
					 "description": "certificates_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:keystore/asymmetric-keys/asymmetric-key={name}/certificates/certificate={name1}": {
			 "post": {
				 "description": "A certificate for this asymmetric key.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - certificate",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate_post_xml"
							}
						}
					},
					 "description": "certificate_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for the certificate.  If the name\nmatches the name of a certificate that exists\nindependently in <operational> (i.e., an IDevID),\nthen the 'cert' node MUST NOT be configured.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A certificate for this asymmetric key.",
				 "summary": "GET - O-RAN-DU-01 - ietf-keystore - certificate",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for the certificate.  If the name\nmatches the name of a certificate that exists\nindependently in <operational> (i.e., an IDevID),\nthen the 'cert' node MUST NOT be configured.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_certificate_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_certificate_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-keystore - certificate",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "description": "A certificate for this asymmetric key.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for the certificate.  If the name\nmatches the name of a certificate that exists\nindependently in <operational> (i.e., an IDevID),\nthen the 'cert' node MUST NOT be configured.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A certificate for this asymmetric key.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-keystore - certificate",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate"
							}
						}
					},
					 "description": "certificate_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the asymmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for the certificate.  If the name\nmatches the name of a certificate that exists\nindependently in <operational> (i.e., an IDevID),\nthen the 'cert' node MUST NOT be configured.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:keystore/symmetric-keys": {
			 "post": {
				 "description": "A list of symmetric keys.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - symmetric-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_config_symmetric-keys_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_config_symmetric-keys_post_xml"
							}
						}
					},
					 "description": "symmetric-keys_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A list of symmetric keys.",
				 "summary": "GET - O-RAN-DU-01 - ietf-keystore - symmetric-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-keystore - symmetric-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "description": "A list of symmetric keys.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A list of symmetric keys.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-keystore - symmetric-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_config_symmetric-keys_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_config_symmetric-keys"
							}
						}
					},
					 "description": "symmetric-keys_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:keystore/symmetric-keys/symmetric-key={name}": {
			 "post": {
				 "description": "A symmetric key.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - symmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_config_symmetric-key_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_config_symmetric-key_post_xml"
							}
						}
					},
					 "description": "symmetric-key_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the symmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A symmetric key.",
				 "summary": "GET - O-RAN-DU-01 - ietf-keystore - symmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the symmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-keystore - symmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "description": "A symmetric key.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the symmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A symmetric key.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-keystore - symmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_config_symmetric-key_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_config_symmetric-key"
							}
						}
					},
					 "description": "symmetric-key_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the symmetric key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:generate-symmetric-key": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_generate-symmetric-key_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_generate-symmetric-key_input"
							}
						}
					},
					 "description": "generate-symmetric-key_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_generate-symmetric-key_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_generate-symmetric-key_output_TOP"
								}
							}
						},
						 "description": "RPC generate-symmetric-key success"
					}
				},
				 "description": "Requests the device to generate an symmetric key using\nthe specified key algorithm, optionally encrypted using\na key in the keystore.  The output is this RPC can be\nused as input to a subsequent configuration request.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - generate-symmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-keystore:generate-asymmetric-key": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_generate-asymmetric-key_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-keystore_generate-asymmetric-key_input"
							}
						}
					},
					 "description": "generate-asymmetric-key_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_generate-asymmetric-key_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-keystore_generate-asymmetric-key_output_TOP"
								}
							}
						},
						 "description": "RPC generate-asymmetric-key success"
					}
				},
				 "description": "Requests the device to generate an asymmetric key using\nthe specified key algorithm, optionally encrypted using\na key in the keystore.  The output is this RPC can be\nused as input to a subsequent configuration request.",
				 "summary": "POST - O-RAN-DU-01 - ietf-keystore - generate-asymmetric-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-keystore"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:get-config": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_get-config_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_get-config_input"
							}
						}
					},
					 "description": "get-config_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf_get-config_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf_get-config_output_TOP"
								}
							}
						},
						 "description": "RPC get-config success"
					}
				},
				 "description": "Retrieve all or part of a specified configuration.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - get-config",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:edit-config": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_edit-config_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_edit-config_input"
							}
						}
					},
					 "description": "edit-config_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC edit-config success"
					}
				},
				 "description": "The <edit-config> operation loads all or part of a specified\nconfiguration to the specified target configuration.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - edit-config",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:copy-config": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_copy-config_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_copy-config_input"
							}
						}
					},
					 "description": "copy-config_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC copy-config success"
					}
				},
				 "description": "Create or replace an entire configuration datastore with the\ncontents of another complete configuration datastore.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - copy-config",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:delete-config": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_delete-config_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_delete-config_input"
							}
						}
					},
					 "description": "delete-config_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC delete-config success"
					}
				},
				 "description": "Delete a configuration datastore.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - delete-config",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:lock": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_lock_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_lock_input"
							}
						}
					},
					 "description": "lock_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC lock success"
					}
				},
				 "description": "The lock operation allows the client to lock the configuration\nsystem of a device.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - lock",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:unlock": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_unlock_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_unlock_input"
							}
						}
					},
					 "description": "unlock_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC unlock success"
					}
				},
				 "description": "The unlock operation is used to release a configuration lock,\npreviously obtained with the 'lock' operation.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - unlock",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:get": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_get_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_get_input"
							}
						}
					},
					 "description": "get_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf_get_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf_get_output_TOP"
								}
							}
						},
						 "description": "RPC get success"
					}
				},
				 "description": "Retrieve running configuration and device state information.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - get",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:close-session": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "type": "object",
								 "properties": {
									 "input": {
										 "type": "object"
									}
								}
							}
						},
						 "application/xml": {
							 "schema": {
								 "type": "object",
								 "xml": {
									 "name": "input"
								}
							}
						}
					},
					 "description": "close-session_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC close-session success"
					}
				},
				 "description": "Request graceful termination of a NETCONF session.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - close-session",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:kill-session": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_kill-session_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_kill-session_input"
							}
						}
					},
					 "description": "kill-session_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC kill-session success"
					}
				},
				 "description": "Force the termination of a NETCONF session.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - kill-session",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:commit": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_commit_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_commit_input"
							}
						}
					},
					 "description": "commit_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC commit success"
					}
				},
				 "description": "Commit the candidate configuration as the device's new\ncurrent configuration.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - commit",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:discard-changes": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "type": "object",
								 "properties": {
									 "input": {
										 "type": "object"
									}
								}
							}
						},
						 "application/xml": {
							 "schema": {
								 "type": "object",
								 "xml": {
									 "name": "input"
								}
							}
						}
					},
					 "description": "discard-changes_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC discard-changes success"
					}
				},
				 "description": "Revert the candidate configuration to the current\nrunning configuration.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - discard-changes",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:cancel-commit": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_cancel-commit_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_cancel-commit_input"
							}
						}
					},
					 "description": "cancel-commit_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC cancel-commit success"
					}
				},
				 "description": "This operation is used to cancel an ongoing confirmed commit.\nIf the confirmed commit is persistent, the parameter\n'persist-id' must be given, and it must match the value of the\n'persist' parameter.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - cancel-commit",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf:validate": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_validate_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf_validate_input"
							}
						}
					},
					 "description": "validate_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC validate success"
					}
				},
				 "description": "Validates the contents of the specified configuration.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf - validate",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf"
				]
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-acm:nacm": {
			 "post": {
				 "description": "Parameters for NETCONF access control model.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-acm - nacm",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_config_nacm_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_config_nacm_post_xml"
							}
						}
					},
					 "description": "nacm_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Parameters for NETCONF access control model.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-acm - nacm",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-acm - nacm",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "description": "Parameters for NETCONF access control model.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Parameters for NETCONF access control model.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-acm - nacm",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_config_nacm_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_config_nacm"
							}
						}
					},
					 "description": "nacm_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-acm:nacm/groups": {
			 "post": {
				 "description": "NETCONF access control groups.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-acm - groups",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_groups_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_groups_post_xml"
							}
						}
					},
					 "description": "groups_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "NETCONF access control groups.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-acm - groups",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-acm - groups",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "description": "NETCONF access control groups.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "NETCONF access control groups.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-acm - groups",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_groups_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_groups"
							}
						}
					},
					 "description": "groups_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-acm:nacm/groups/group={name}": {
			 "post": {
				 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-acm - group",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_config_group_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_config_group_post_xml"
							}
						}
					},
					 "description": "group_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "Group name associated with this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-acm - group",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "Group name associated with this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_group_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_group_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-acm - group",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "Group name associated with this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-acm - group",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_config_group_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_config_group"
							}
						}
					},
					 "description": "group_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "Group name associated with this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-acm:nacm/rule-list={name}": {
			 "post": {
				 "description": "An ordered collection of access control rules.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-acm - rule-list",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_rule-list_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_rule-list_post_xml"
							}
						}
					},
					 "description": "rule-list_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "Arbitrary name assigned to the rule-list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "An ordered collection of access control rules.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-acm - rule-list",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "Arbitrary name assigned to the rule-list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-acm - rule-list",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "description": "An ordered collection of access control rules.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "Arbitrary name assigned to the rule-list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "An ordered collection of access control rules.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-acm - rule-list",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_rule-list_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_rule-list"
							}
						}
					},
					 "description": "rule-list_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "Arbitrary name assigned to the rule-list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-acm:nacm/rule-list={name}/rule={name1}": {
			 "post": {
				 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-acm - rule",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_config_rule_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_config_rule_post_xml"
							}
						}
					},
					 "description": "rule_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "Arbitrary name assigned to the rule-list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "Arbitrary name assigned to the rule.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-acm - rule",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "Arbitrary name assigned to the rule-list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "Arbitrary name assigned to the rule.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_rule_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_rule_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-acm - rule",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "Arbitrary name assigned to the rule-list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "Arbitrary name assigned to the rule.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-acm - rule",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-acm"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_config_rule_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_config_rule"
							}
						}
					},
					 "description": "rule_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "Arbitrary name assigned to the rule-list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "Arbitrary name assigned to the rule.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state": {
			 "get": {
				 "description": "The netconf-state container is the root of the monitoring\ndata model.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - netconf-state",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state/capabilities": {
			 "get": {
				 "description": "Contains the list of NETCONF capabilities supported by the\nserver.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - capabilities",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_capabilities_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_capabilities_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state/datastores": {
			 "get": {
				 "description": "Contains the list of NETCONF configuration datastores.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - datastores",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state/datastores/datastore={name}": {
			 "get": {
				 "description": "List of NETCONF configuration datastores supported by\nthe NETCONF server and related information.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - datastore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "Name of the datastore associated with this list entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state/datastores/datastore={name}/locks": {
			 "get": {
				 "description": "The NETCONF <lock> and <partial-lock> operations allow\na client to lock specific resources in a datastore.  The\nNETCONF server will prevent changes to the locked\nresources by all sessions except the one that acquired\nthe lock(s).\n\nMonitoring information is provided for each datastore\nentry including details such as the session that acquired\nthe lock, the type of lock (global or partial) and the\nlist of locked resources.  Multiple locks per datastore\nare supported.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - locks",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "Name of the datastore associated with this list entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state/schemas": {
			 "get": {
				 "description": "Contains the list of data model schemas supported by the\nserver.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - schemas",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_schemas_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_schemas_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state/schemas/schema={identifier}={version}={format}": {
			 "get": {
				 "description": "List of data model schemas supported by the server.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - schema",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "name": "identifier",
						 "description": "Identifier to uniquely reference the schema.  The\nidentifier is used in the <get-schema> operation and may\nbe used for other purposes such as file retrieval.\n\nFor modeling languages that support or require a data\nmodel name (e.g., YANG module name) the identifier MUST\nmatch that name.  For YANG data models, the identifier is\nthe name of the module or submodule.  In other cases, an\nidentifier such as a filename MAY be used instead.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "version",
						 "description": "Version of the schema supported.  Multiple versions MAY be\nsupported simultaneously by a NETCONF server.  Each\nversion MUST be reported individually in the schema list,\ni.e., with same identifier, possibly different location,\nbut different version.\n\nFor YANG data models, version is the value of the most\nrecent YANG 'revision' statement in the module or\nsubmodule, or the empty string if no 'revision' statement\nis present.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "format",
						 "description": "The data modeling language the schema is written\nin (currently xsd, yang, yin, rng, or rnc).\nFor YANG data models, 'yang' format MUST be supported and\n'yin' format MAY also be provided.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_schemas_schema_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_schemas_schema_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state/sessions": {
			 "get": {
				 "description": "The sessions container includes session-specific data for\nNETCONF management sessions.  The session list MUST include\nall currently active NETCONF sessions.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - sessions",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_sessions_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_sessions_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state/sessions/session={session-id}": {
			 "get": {
				 "description": "All NETCONF sessions managed by the NETCONF server\nMUST be reported in this list.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - session",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "name": "session-id",
						 "description": "Unique identifier for the session.  This value is the\nNETCONF session identifier, as defined in RFC 4741.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_sessions_session_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_sessions_session_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:netconf-state/statistics": {
			 "get": {
				 "description": "Statistical data pertaining to the NETCONF server.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-monitoring - statistics",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_statistics_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_statistics_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-monitoring:get-schema": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-monitoring_get-schema_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-monitoring_get-schema_input"
							}
						}
					},
					 "description": "get-schema_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_get-schema_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-monitoring_get-schema_output_TOP"
								}
							}
						},
						 "description": "RPC get-schema success"
					}
				},
				 "description": "This operation is used to retrieve a schema from the\nNETCONF server.\n\nPositive Response:\n  The NETCONF server returns the requested schema.\n\nNegative Response:\n  If requested schema does not exist, the <error-tag> is\n  'invalid-value'.\n\n  If more than one schema matches the requested parameters, the\n  <error-tag> is 'operation-failed', and <error-app-tag> is\n  'data-not-unique'.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-monitoring - get-schema",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-monitoring"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-nmda:get-data": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-nmda_get-data_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-nmda_get-data_input"
							}
						}
					},
					 "description": "get-data_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-nmda_get-data_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-nmda_get-data_output_TOP"
								}
							}
						},
						 "description": "RPC get-data success"
					}
				},
				 "description": "Retrieve data from an NMDA datastore.  The content returned\nby get-data must satisfy all filters, i.e., the filter\ncriteria are logically ANDed.\n\nAny ancestor nodes (including list keys) of nodes selected by\nthe filters are included in the response.\n\nThe 'with-origin' parameter is only valid for an operational\ndatastore.  If 'with-origin' is used with an invalid\ndatastore, then the server MUST return an <rpc-error> element\nwith an <error-tag> value of 'invalid-value'.\n\nThe 'with-defaults' parameter only applies to the operational\ndatastore if the NETCONF :with-defaults and\n:with-operational-defaults capabilities are both advertised.\nIf the 'with-defaults' parameter is present in a request for\nwhich it is not supported, then the server MUST return an\n<rpc-error> element with an <error-tag> value of\n'invalid-value'.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-nmda - get-data",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-nmda"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-nmda:edit-data": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-nmda_edit-data_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-nmda_edit-data_input"
							}
						}
					},
					 "description": "edit-data_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC edit-data success"
					}
				},
				 "description": "Edit data in an NMDA datastore.\n\nIf an error condition occurs such that an error severity\n<rpc-error> element is generated, the server will stop\nprocessing the <edit-data> operation and restore the\nspecified configuration to its complete state at\nthe start of this <edit-data> operation.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-nmda - edit-data",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-nmda"
				]
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-server:netconf-server": {
			 "post": {
				 "description": "Top-level container for NETCONF server configuration.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-server - netconf-server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_config_netconf-server_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_config_netconf-server_post_xml"
							}
						}
					},
					 "description": "netconf-server_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Top-level container for NETCONF server configuration.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-server - netconf-server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-server - netconf-server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "description": "Top-level container for NETCONF server configuration.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Top-level container for NETCONF server configuration.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-server - netconf-server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_config_netconf-server_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_config_netconf-server"
							}
						}
					},
					 "description": "netconf-server_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-server:netconf-server/listen": {
			 "post": {
				 "description": "Configures listen behavior",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-server - listen",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_listen_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_listen_post_xml"
							}
						}
					},
					 "description": "listen_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Configures listen behavior",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-server - listen",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-server - listen",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "description": "Configures listen behavior",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Configures listen behavior",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-server - listen",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_listen_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_listen"
							}
						}
					},
					 "description": "listen_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-server:netconf-server/listen/endpoint={name}": {
			 "post": {
				 "description": "List of endpoints to listen for NETCONF connections.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-server - endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_config_endpoint_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_config_endpoint_post_xml"
							}
						}
					},
					 "description": "endpoint_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the NETCONF listen endpoint.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "List of endpoints to listen for NETCONF connections.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-server - endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the NETCONF listen endpoint.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-server - endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "description": "List of endpoints to listen for NETCONF connections.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the NETCONF listen endpoint.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "List of endpoints to listen for NETCONF connections.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-server - endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_config_endpoint_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_config_endpoint"
							}
						}
					},
					 "description": "endpoint_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the NETCONF listen endpoint.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-server:netconf-server/call-home": {
			 "post": {
				 "description": "Configures call home behavior.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-server - call-home",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_call-home_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_call-home_post_xml"
							}
						}
					},
					 "description": "call-home_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Configures call home behavior.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-server - call-home",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-server - call-home",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "description": "Configures call home behavior.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Configures call home behavior.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-server - call-home",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_call-home_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_call-home"
							}
						}
					},
					 "description": "call-home_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-server:netconf-server/call-home/netconf-client={name}": {
			 "post": {
				 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-server - netconf-client",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_config_netconf-client_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_config_netconf-client_post_xml"
							}
						}
					},
					 "description": "netconf-client_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-server - netconf-client",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-server - netconf-client",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-server - netconf-client",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_config_netconf-client_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_config_netconf-client"
							}
						}
					},
					 "description": "netconf-client_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-server:netconf-server/call-home/netconf-client={name}/endpoints": {
			 "post": {
				 "description": "Container for the list of endpoints.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-server - endpoints",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints_post_xml"
							}
						}
					},
					 "description": "endpoints_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Container for the list of endpoints.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-server - endpoints",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-server - endpoints",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "description": "Container for the list of endpoints.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Container for the list of endpoints.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-server - endpoints",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints"
							}
						}
					},
					 "description": "endpoints_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-server:netconf-server/call-home/netconf-client={name}/endpoints/endpoint={name1}": {
			 "post": {
				 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-server - endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint_post_xml"
							}
						}
					},
					 "description": "endpoint_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this endpoint.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-server - endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this endpoint.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-server - endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this endpoint.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-server - endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint"
							}
						}
					},
					 "description": "endpoint_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this endpoint.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-server:netconf-server/call-home/netconf-client={name}/connection-type": {
			 "post": {
				 "description": "Indicates the NETCONF server's preference for how the\nNETCONF connection is maintained.",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-server - connection-type",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type_post_xml"
							}
						}
					},
					 "description": "connection-type_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Indicates the NETCONF server's preference for how the\nNETCONF connection is maintained.",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-server - connection-type",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-server - connection-type",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "description": "Indicates the NETCONF server's preference for how the\nNETCONF connection is maintained.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Indicates the NETCONF server's preference for how the\nNETCONF connection is maintained.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-server - connection-type",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type"
							}
						}
					},
					 "description": "connection-type_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-netconf-server:netconf-server/call-home/netconf-client={name}/reconnect-strategy": {
			 "post": {
				 "description": "The reconnection strategy directs how a NETCONF server\nreconnects to a NETCONF client, after discovering its\nconnection to the client has dropped, even if due to a\nreboot.  The NETCONF server starts with the specified\nendpoint and tries to connect to it max-attempts times\nbefore trying the next endpoint in the list (round\nrobin).",
				 "summary": "POST - O-RAN-DU-01 - ietf-netconf-server - reconnect-strategy",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy_post_xml"
							}
						}
					},
					 "description": "reconnect-strategy_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "The reconnection strategy directs how a NETCONF server\nreconnects to a NETCONF client, after discovering its\nconnection to the client has dropped, even if due to a\nreboot.  The NETCONF server starts with the specified\nendpoint and tries to connect to it max-attempts times\nbefore trying the next endpoint in the list (round\nrobin).",
				 "summary": "GET - O-RAN-DU-01 - ietf-netconf-server - reconnect-strategy",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_reconnect-strategy_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_reconnect-strategy_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-netconf-server - reconnect-strategy",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "description": "The reconnection strategy directs how a NETCONF server\nreconnects to a NETCONF client, after discovering its\nconnection to the client has dropped, even if due to a\nreboot.  The NETCONF server starts with the specified\nendpoint and tries to connect to it max-attempts times\nbefore trying the next endpoint in the list (round\nrobin).",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "The reconnection strategy directs how a NETCONF server\nreconnects to a NETCONF client, after discovering its\nconnection to the client has dropped, even if due to a\nreboot.  The NETCONF server starts with the specified\nendpoint and tries to connect to it max-attempts times\nbefore trying the next endpoint in the list (round\nrobin).",
				 "summary": "PUT - O-RAN-DU-01 - ietf-netconf-server - reconnect-strategy",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-netconf-server"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy"
							}
						}
					},
					 "description": "reconnect-strategy_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system": {
			 "post": {
				 "description": "System group configuration.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - system",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_config_system_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_config_system_post_xml"
							}
						}
					},
					 "description": "system_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "System group configuration.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - system",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - system",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "System group configuration.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "System group configuration.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - system",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_config_system_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_config_system"
							}
						}
					},
					 "description": "system_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/clock": {
			 "post": {
				 "description": "Configuration of the system date and time properties.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - clock",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_clock_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_clock_post_xml"
							}
						}
					},
					 "description": "clock_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Configuration of the system date and time properties.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - clock",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_clock_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_clock_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - clock",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "Configuration of the system date and time properties.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Configuration of the system date and time properties.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - clock",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_clock_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_clock"
							}
						}
					},
					 "description": "clock_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/ntp": {
			 "post": {
				 "description": "Configuration of the NTP client.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - ntp",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_ntp_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_ntp_post_xml"
							}
						}
					},
					 "description": "ntp_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Configuration of the NTP client.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - ntp",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_ntp_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_ntp_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - ntp",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "Configuration of the NTP client.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Configuration of the NTP client.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - ntp",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_ntp_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_ntp"
							}
						}
					},
					 "description": "ntp_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/ntp/server={name}": {
			 "post": {
				 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_ntp_config_server_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_ntp_config_server_post_xml"
							}
						}
					},
					 "description": "server_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the NTP server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the NTP server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_ntp_server_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_ntp_server_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the NTP server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_ntp_config_server_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_ntp_config_server"
							}
						}
					},
					 "description": "server_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the NTP server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/dns-resolver": {
			 "post": {
				 "description": "Configuration of the DNS resolver.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - dns-resolver",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_dns-resolver_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_dns-resolver_post_xml"
							}
						}
					},
					 "description": "dns-resolver_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Configuration of the DNS resolver.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - dns-resolver",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - dns-resolver",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "Configuration of the DNS resolver.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Configuration of the DNS resolver.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - dns-resolver",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_dns-resolver_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_dns-resolver"
							}
						}
					},
					 "description": "dns-resolver_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/dns-resolver/server={name}": {
			 "post": {
				 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_server_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_server_post_xml"
							}
						}
					},
					 "description": "server_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the DNS server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the DNS server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the DNS server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_server_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_server"
							}
						}
					},
					 "description": "server_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the DNS server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/dns-resolver/options": {
			 "post": {
				 "description": "Resolver options.  The set of available options has been\nlimited to those that are generally available across\ndifferent resolver implementations and generally useful.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - options",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_options_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_options_post_xml"
							}
						}
					},
					 "description": "options_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Resolver options.  The set of available options has been\nlimited to those that are generally available across\ndifferent resolver implementations and generally useful.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - options",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_options_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_options_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - options",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "Resolver options.  The set of available options has been\nlimited to those that are generally available across\ndifferent resolver implementations and generally useful.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Resolver options.  The set of available options has been\nlimited to those that are generally available across\ndifferent resolver implementations and generally useful.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - options",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_options_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_options"
							}
						}
					},
					 "description": "options_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/radius": {
			 "post": {
				 "description": "Configuration of the RADIUS client.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - radius",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_radius_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_radius_post_xml"
							}
						}
					},
					 "description": "radius_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Configuration of the RADIUS client.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - radius",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_radius_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_radius_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - radius",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "Configuration of the RADIUS client.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Configuration of the RADIUS client.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - radius",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_radius_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_radius"
							}
						}
					},
					 "description": "radius_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/radius/server={name}": {
			 "post": {
				 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_radius_config_server_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_radius_config_server_post_xml"
							}
						}
					},
					 "description": "server_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the RADIUS server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the RADIUS server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_radius_server_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_radius_server_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the RADIUS server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - server",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_radius_config_server_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_radius_config_server"
							}
						}
					},
					 "description": "server_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for the RADIUS server.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/radius/options": {
			 "post": {
				 "description": "RADIUS client options.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - options",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_radius_config_options_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_radius_config_options_post_xml"
							}
						}
					},
					 "description": "options_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "RADIUS client options.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - options",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_radius_options_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_radius_options_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - options",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "RADIUS client options.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "RADIUS client options.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - options",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_radius_config_options_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_radius_config_options"
							}
						}
					},
					 "description": "options_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/authentication": {
			 "post": {
				 "description": "The authentication configuration subtree.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - authentication",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_authentication_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_authentication_post_xml"
							}
						}
					},
					 "description": "authentication_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "The authentication configuration subtree.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - authentication",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_authentication_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_authentication_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - authentication",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "The authentication configuration subtree.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "The authentication configuration subtree.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - authentication",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_authentication_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_config_authentication"
							}
						}
					},
					 "description": "authentication_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/authentication/user={name}": {
			 "post": {
				 "description": "The list of local users configured on this device.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - user",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_authentication_config_user_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_authentication_config_user_post_xml"
							}
						}
					},
					 "description": "user_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "The user name string identifying this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "The list of local users configured on this device.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - user",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "The user name string identifying this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_authentication_user_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_authentication_user_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - user",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "The list of local users configured on this device.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "The user name string identifying this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "The list of local users configured on this device.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - user",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_authentication_config_user_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_authentication_config_user"
							}
						}
					},
					 "description": "user_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "The user name string identifying this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system/authentication/user={name}/authorized-key={name1}": {
			 "post": {
				 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - authorized-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_authentication_user_config_authorized-key_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_authentication_user_config_authorized-key_post_xml"
							}
						}
					},
					 "description": "authorized-key_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "The user name string identifying this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for the SSH key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - authorized-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "The user name string identifying this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for the SSH key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_authentication_user_authorized-key_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system_authentication_user_authorized-key_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-system - authorized-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "The user name string identifying this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for the SSH key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-system - authorized-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_authentication_user_config_authorized-key_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_system_authentication_user_config_authorized-key"
							}
						}
					},
					 "description": "authorized-key_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "The user name string identifying this entry.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for the SSH key.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system-state": {
			 "get": {
				 "description": "System group operational state.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - system-state",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system-state_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system-state_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system-state/platform": {
			 "get": {
				 "description": "Contains vendor-specific information for\nidentifying the system platform and operating system.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - platform",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system-state_platform_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system-state_platform_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system-state/clock": {
			 "get": {
				 "description": "Monitoring of the system date and time properties.",
				 "summary": "GET - O-RAN-DU-01 - ietf-system - clock",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system-state_clock_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-system_system-state_clock_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:set-current-datetime": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_set-current-datetime_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-system_set-current-datetime_input"
							}
						}
					},
					 "description": "set-current-datetime_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC set-current-datetime success"
					}
				},
				 "description": "Set the /system-state/clock/current-datetime leaf\nto the specified value.\n\nIf the system is using NTP (i.e., /system/ntp/enabled\nis set to 'true'), then this operation will fail with\nerror-tag 'operation-failed' and error-app-tag value of\n'ntp-active'.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - set-current-datetime",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system-restart": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "type": "object",
								 "properties": {
									 "input": {
										 "type": "object"
									}
								}
							}
						},
						 "application/xml": {
							 "schema": {
								 "type": "object",
								 "xml": {
									 "name": "input"
								}
							}
						}
					},
					 "description": "system-restart_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC system-restart success"
					}
				},
				 "description": "Request that the entire system be restarted immediately.\nA server SHOULD send an rpc reply to the client before\nrestarting the system.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - system-restart",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-system:system-shutdown": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "type": "object",
								 "properties": {
									 "input": {
										 "type": "object"
									}
								}
							}
						},
						 "application/xml": {
							 "schema": {
								 "type": "object",
								 "xml": {
									 "name": "input"
								}
							}
						}
					},
					 "description": "system-shutdown_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC system-shutdown success"
					}
				},
				 "description": "Request that the entire system be shut down immediately.\nA server SHOULD send an rpc reply to the client before\nshutting down the system.",
				 "summary": "POST - O-RAN-DU-01 - ietf-system - system-shutdown",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-system"
				]
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-truststore:truststore": {
			 "post": {
				 "description": "The truststore contains sets of X.509 certificates and\nSSH host keys.",
				 "summary": "POST - O-RAN-DU-01 - ietf-truststore - truststore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_config_truststore_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_config_truststore_post_xml"
							}
						}
					},
					 "description": "truststore_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "The truststore contains sets of X.509 certificates and\nSSH host keys.",
				 "summary": "GET - O-RAN-DU-01 - ietf-truststore - truststore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-truststore - truststore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "description": "The truststore contains sets of X.509 certificates and\nSSH host keys.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "The truststore contains sets of X.509 certificates and\nSSH host keys.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-truststore - truststore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_config_truststore_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_config_truststore"
							}
						}
					},
					 "description": "truststore_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-truststore:truststore/certificates={name}": {
			 "post": {
				 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections.",
				 "summary": "POST - O-RAN-DU-01 - ietf-truststore - certificates",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_config_certificates_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_config_certificates_post_xml"
							}
						}
					},
					 "description": "certificates_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of certificates.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections.",
				 "summary": "GET - O-RAN-DU-01 - ietf-truststore - certificates",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of certificates.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-truststore - certificates",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of certificates.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-truststore - certificates",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_config_certificates_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_config_certificates"
							}
						}
					},
					 "description": "certificates_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of certificates.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-truststore:truststore/certificates={name}/certificate={name1}": {
			 "post": {
				 "description": "A certificate.",
				 "summary": "POST - O-RAN-DU-01 - ietf-truststore - certificate",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_config_certificate_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_config_certificate_post_xml"
							}
						}
					},
					 "description": "certificate_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of certificates.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this certificate. The\nname must be unique across all lists of\ncertificates (not just this list) so that leafrefs\nfrom another module can resolve to unique values.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A certificate.",
				 "summary": "GET - O-RAN-DU-01 - ietf-truststore - certificate",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of certificates.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this certificate. The\nname must be unique across all lists of\ncertificates (not just this list) so that leafrefs\nfrom another module can resolve to unique values.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_certificate_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_certificate_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-truststore - certificate",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "description": "A certificate.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of certificates.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this certificate. The\nname must be unique across all lists of\ncertificates (not just this list) so that leafrefs\nfrom another module can resolve to unique values.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A certificate.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-truststore - certificate",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_config_certificate_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_config_certificate"
							}
						}
					},
					 "description": "certificate_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of certificates.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this certificate. The\nname must be unique across all lists of\ncertificates (not just this list) so that leafrefs\nfrom another module can resolve to unique values.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-truststore:truststore/host-keys={name}": {
			 "post": {
				 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers.",
				 "summary": "POST - O-RAN-DU-01 - ietf-truststore - host-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_config_host-keys_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_config_host-keys_post_xml"
							}
						}
					},
					 "description": "host-keys_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers.",
				 "summary": "GET - O-RAN-DU-01 - ietf-truststore - host-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-truststore - host-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-truststore - host-keys",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_config_host-keys_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_config_host-keys"
							}
						}
					},
					 "description": "host-keys_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-truststore:truststore/host-keys={name}/host-key={name1}": {
			 "post": {
				 "description": "A host key.",
				 "summary": "POST - O-RAN-DU-01 - ietf-truststore - host-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_config_host-key_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_config_host-key_post_xml"
							}
						}
					},
					 "description": "host-key_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this host-key. Must be\nunique across all lists of host-keys (not just\nthis list) so that a leafref to it from another module\ncan resolve to unique values.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A host key.",
				 "summary": "GET - O-RAN-DU-01 - ietf-truststore - host-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this host-key. Must be\nunique across all lists of host-keys (not just\nthis list) so that a leafref to it from another module\ncan resolve to unique values.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_host-key_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_host-key_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - ietf-truststore - host-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "description": "A host key.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this host-key. Must be\nunique across all lists of host-keys (not just\nthis list) so that a leafref to it from another module\ncan resolve to unique values.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A host key.",
				 "summary": "PUT - O-RAN-DU-01 - ietf-truststore - host-key",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-truststore"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_config_host-key_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_config_host-key"
							}
						}
					},
					 "description": "host-key_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "An arbitrary name for this host-key. Must be\nunique across all lists of host-keys (not just\nthis list) so that a leafref to it from another module\ncan resolve to unique values.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:yang-library": {
			 "get": {
				 "description": "Container holding the entire YANG library of this server.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - yang-library",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:yang-library/module-set={name}": {
			 "get": {
				 "description": "A set of modules that may be used by one or more schemas.\n\nA module set does not have to be referentially complete,\ni.e., it may define modules that contain import statements\nfor other modules not included in the module set.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - module-set",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name of the module set.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:yang-library/module-set={name}/module={name1}": {
			 "get": {
				 "description": "An entry in this list represents a module implemented by the\nserver, as per Section 5.6.5 of RFC 7950, with a particular\nset of supported features and deviations.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - module",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name of the module set.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "The YANG module or submodule name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_module_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_module_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:yang-library/module-set={name}/module={name1}/submodule={name2}": {
			 "get": {
				 "description": "Each entry represents one submodule within the\nparent module.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - submodule",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name of the module set.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "The YANG module or submodule name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name2",
						 "description": "The YANG module or submodule name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_module_submodule_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_module_submodule_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:yang-library/module-set={name}/import-only-module={name1}={revision}": {
			 "get": {
				 "description": "An entry in this list indicates that the server imports\nreusable definitions from the specified revision of the\nmodule but does not implement any protocol-accessible\nobjects from this revision.\n\nMultiple entries for the same module name MAY exist.  This\ncan occur if multiple modules import the same module but\nspecify different revision dates in the import statements.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - import-only-module",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name of the module set.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "The YANG module name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "revision",
						 "description": "The YANG module revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_import-only-module_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_import-only-module_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:yang-library/module-set={name}/import-only-module={name1}={revision}/submodule={name2}": {
			 "get": {
				 "description": "Each entry represents one submodule within the\nparent module.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - submodule",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name of the module set.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "The YANG module name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "revision",
						 "description": "The YANG module revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name2",
						 "description": "The YANG module or submodule name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_import-only-module_submodule_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_import-only-module_submodule_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:yang-library/schema={name}": {
			 "get": {
				 "description": "A datastore schema that may be used by one or more\ndatastores.\n\nThe schema must be valid and referentially complete, i.e.,\nit must contain modules to satisfy all used import\nstatements for all modules specified in the schema.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - schema",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "An arbitrary name of the schema.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_schema_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_schema_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:yang-library/datastore={name}": {
			 "get": {
				 "description": "A datastore supported by this server.\n\nEach datastore indicates which schema it supports.\n\nThe server MUST instantiate one entry in this list per\nspecific datastore it supports.\nEach datastore entry with the same datastore schema SHOULD\nreference the same schema.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - datastore",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "The identity of the datastore.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_datastore_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_yang-library_datastore_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:modules-state": {
			 "get": {
				 "description": "Contains YANG module monitoring information.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - modules-state",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_modules-state_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_modules-state_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:modules-state/module={name}={revision}": {
			 "get": {
				 "description": "Each entry represents one revision of one module\ncurrently supported by the server.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - module",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "The YANG module or submodule name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "revision",
						 "description": "The YANG module or submodule revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module or submodule.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:modules-state/module={name}={revision}/deviation={name1}={revision1}": {
			 "get": {
				 "description": "List of YANG deviation module names and revisions\nused by this server to modify the conformance of\nthe module associated with this entry.  Note that\nthe same module can be used for deviations for\nmultiple modules, so the same entry MAY appear\nwithin multiple 'module' entries.\n\nThe deviation module MUST be present in the 'module'\nlist, with the same name and revision values.\nThe 'conformance-type' value will be 'implement' for\nthe deviation module.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - deviation",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "The YANG module or submodule name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "revision",
						 "description": "The YANG module or submodule revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module or submodule.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "The YANG module or submodule name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "revision1",
						 "description": "The YANG module or submodule revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module or submodule.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_deviation_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_deviation_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/ietf-yang-library:modules-state/module={name}={revision}/submodule={name1}={revision1}": {
			 "get": {
				 "description": "Each entry represents one submodule within the\nparent module.",
				 "summary": "GET - O-RAN-DU-01 - ietf-yang-library - submodule",
				 "tags": [
					"mounted O-RAN-DU-01 ietf-yang-library"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "The YANG module or submodule name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "revision",
						 "description": "The YANG module or submodule revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module or submodule.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "name1",
						 "description": "The YANG module or submodule name.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "name": "revision1",
						 "description": "The YANG module or submodule revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module or submodule.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_submodule_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_submodule_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nc-notifications:netconf": {
			 "get": {
				 "description": "Top-level element in the notification namespace",
				 "summary": "GET - O-RAN-DU-01 - nc-notifications - netconf",
				 "tags": [
					"mounted O-RAN-DU-01 nc-notifications"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nc-notifications_netconf_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nc-notifications_netconf_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nc-notifications:netconf/streams": {
			 "get": {
				 "description": "The list of event streams supported by the system. When\na query is issued, the returned set of streams is\ndetermined based on user privileges.",
				 "summary": "GET - O-RAN-DU-01 - nc-notifications - streams",
				 "tags": [
					"mounted O-RAN-DU-01 nc-notifications"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nc-notifications_netconf_streams_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nc-notifications_netconf_streams_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nc-notifications:netconf/streams/stream={name}": {
			 "get": {
				 "description": "Stream name, description and other information.",
				 "summary": "GET - O-RAN-DU-01 - nc-notifications - stream",
				 "tags": [
					"mounted O-RAN-DU-01 nc-notifications"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "The name of the event stream. If this is the default\nNETCONF stream, this must have the value 'NETCONF'.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nc-notifications_netconf_streams_stream_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nc-notifications_netconf_streams_stream_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/notifications:create-subscription": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/notifications_create-subscription_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/notifications_create-subscription_input"
							}
						}
					},
					 "description": "create-subscription_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "RPC create-subscription success"
					}
				},
				 "description": "The command to create a notification subscription. It\ntakes as argument the name of the notification stream\nand filter. Both of those options limit the content of\nthe subscription. In addition, there are two time-related\nparameters, startTime and stopTime, which can be used to\nselect the time interval of interest to the notification\nreplay feature.",
				 "summary": "POST - O-RAN-DU-01 - notifications - create-subscription",
				 "tags": [
					"mounted O-RAN-DU-01 notifications"
				]
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:simulation": {
			 "post": {
				 "description": "Root level container which controls the Network Function.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - simulation",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_config_simulation_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_config_simulation_post_xml"
							}
						}
					},
					 "description": "simulation_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Root level container which controls the Network Function.",
				 "summary": "GET - O-RAN-DU-01 - nts-network-function - simulation",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - nts-network-function - simulation",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "description": "Root level container which controls the Network Function.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Root level container which controls the Network Function.",
				 "summary": "PUT - O-RAN-DU-01 - nts-network-function - simulation",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_config_simulation_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_config_simulation"
							}
						}
					},
					 "description": "simulation_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:simulation/network-function": {
			 "post": {
				 "description": "Container which encompasses the details of the network function.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - network-function",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_network-function_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_network-function_post_xml"
							}
						}
					},
					 "description": "network-function_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Container which encompasses the details of the network function.",
				 "summary": "GET - O-RAN-DU-01 - nts-network-function - network-function",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - nts-network-function - network-function",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "description": "Container which encompasses the details of the network function.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Container which encompasses the details of the network function.",
				 "summary": "PUT - O-RAN-DU-01 - nts-network-function - network-function",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_network-function_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_network-function"
							}
						}
					},
					 "description": "network-function_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:simulation/network-function/fault-generation": {
			 "post": {
				 "description": "Groups the fault generation configuration and status.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - fault-generation",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_fault-generation_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_fault-generation_post_xml"
							}
						}
					},
					 "description": "fault-generation_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Groups the fault generation configuration and status.",
				 "summary": "GET - O-RAN-DU-01 - nts-network-function - fault-generation",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - nts-network-function - fault-generation",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "description": "Groups the fault generation configuration and status.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Groups the fault generation configuration and status.",
				 "summary": "PUT - O-RAN-DU-01 - nts-network-function - fault-generation",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_fault-generation_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_fault-generation"
							}
						}
					},
					 "description": "fault-generation_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:simulation/network-function/fault-generation/fault-delay-list={index}": {
			 "post": {
				 "description": "The list defining the pattern for generating events.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - fault-delay-list",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list_post_xml"
							}
						}
					},
					 "description": "fault-delay-list_config"
				},
				 "parameters": [
					{
						 "name": "index",
						 "description": "The index of the list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "The list defining the pattern for generating events.",
				 "summary": "GET - O-RAN-DU-01 - nts-network-function - fault-delay-list",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "parameters": [
					{
						 "name": "index",
						 "description": "The index of the list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_fault-delay-list_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_fault-delay-list_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - nts-network-function - fault-delay-list",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "description": "The list defining the pattern for generating events.",
				 "parameters": [
					{
						 "name": "index",
						 "description": "The index of the list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "The list defining the pattern for generating events.",
				 "summary": "PUT - O-RAN-DU-01 - nts-network-function - fault-delay-list",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list"
							}
						}
					},
					 "description": "fault-delay-list_config"
				},
				 "parameters": [
					{
						 "name": "index",
						 "description": "The index of the list.",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:simulation/network-function/fault-generation/fault-count": {
			 "get": {
				 "description": "Container which groups the number of fault events, by severity.",
				 "summary": "GET - O-RAN-DU-01 - nts-network-function - fault-count",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "parameters": [
					{
						 "required": true,
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_fault-count_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_fault-count_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:simulation/network-function/netconf": {
			 "post": {
				 "description": "Container for describing the NETCONF details.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - netconf",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_netconf_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_netconf_post_xml"
							}
						}
					},
					 "description": "netconf_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Container for describing the NETCONF details.",
				 "summary": "GET - O-RAN-DU-01 - nts-network-function - netconf",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_netconf_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_netconf_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - nts-network-function - netconf",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "description": "Container for describing the NETCONF details.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Container for describing the NETCONF details.",
				 "summary": "PUT - O-RAN-DU-01 - nts-network-function - netconf",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_netconf_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_netconf"
							}
						}
					},
					 "description": "netconf_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:simulation/network-function/ves": {
			 "post": {
				 "description": "Container for describing the VES details.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - ves",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_ves_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_ves_post_xml"
							}
						}
					},
					 "description": "ves_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Container for describing the VES details.",
				 "summary": "GET - O-RAN-DU-01 - nts-network-function - ves",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_ves_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_ves_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - nts-network-function - ves",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "description": "Container for describing the VES details.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Container for describing the VES details.",
				 "summary": "PUT - O-RAN-DU-01 - nts-network-function - ves",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_ves_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_ves"
							}
						}
					},
					 "description": "ves_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:simulation/sdn-controller": {
			 "post": {
				 "description": "Groups details about the SDN Controller.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - sdn-controller",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_sdn-controller_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_sdn-controller_post_xml"
							}
						}
					},
					 "description": "sdn-controller_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Groups details about the SDN Controller.",
				 "summary": "GET - O-RAN-DU-01 - nts-network-function - sdn-controller",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_sdn-controller_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_sdn-controller_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - nts-network-function - sdn-controller",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "description": "Groups details about the SDN Controller.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Groups details about the SDN Controller.",
				 "summary": "PUT - O-RAN-DU-01 - nts-network-function - sdn-controller",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_sdn-controller_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_sdn-controller"
							}
						}
					},
					 "description": "sdn-controller_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:simulation/ves-endpoint": {
			 "post": {
				 "description": "Groups details about the VES Collector endpoint.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - ves-endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_ves-endpoint_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_ves-endpoint_post_xml"
							}
						}
					},
					 "description": "ves-endpoint_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "Groups details about the VES Collector endpoint.",
				 "summary": "GET - O-RAN-DU-01 - nts-network-function - ves-endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_ves-endpoint_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_simulation_ves-endpoint_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - nts-network-function - ves-endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "description": "Groups details about the VES Collector endpoint.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "Groups details about the VES Collector endpoint.",
				 "summary": "PUT - O-RAN-DU-01 - nts-network-function - ves-endpoint",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_ves-endpoint_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_simulation_config_ves-endpoint"
							}
						}
					},
					 "description": "ves-endpoint_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:datastore-populate": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "type": "object",
								 "properties": {
									 "input": {
										 "type": "object"
									}
								}
							}
						},
						 "application/xml": {
							 "schema": {
								 "type": "object",
								 "xml": {
									 "name": "input"
								}
							}
						}
					},
					 "description": "datastore-populate_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_datastore-populate_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_datastore-populate_output_TOP"
								}
							}
						},
						 "description": "RPC datastore-populate success"
					}
				},
				 "description": "Operation to populate the datastore with data for all the containing YANG models, based on settings in config.json",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - datastore-populate",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:feature-control": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_feature-control_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_feature-control_input"
							}
						}
					},
					 "description": "feature-control_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_feature-control_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_feature-control_output_TOP"
								}
							}
						},
						 "description": "RPC feature-control success"
					}
				},
				 "description": "Operation to control the features in a Network Function.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - feature-control",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:invoke-notification": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_invoke-notification_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_invoke-notification_input"
							}
						}
					},
					 "description": "invoke-notification_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_invoke-notification_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_invoke-notification_output_TOP"
								}
							}
						},
						 "description": "RPC invoke-notification success"
					}
				},
				 "description": "Operation to control the features in a Network Function.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - invoke-notification",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:invoke-ves-pm-file-ready": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_invoke-ves-pm-file-ready_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/nts-network-function_invoke-ves-pm-file-ready_input"
							}
						}
					},
					 "description": "invoke-ves-pm-file-ready_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_invoke-ves-pm-file-ready_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_invoke-ves-pm-file-ready_output_TOP"
								}
							}
						},
						 "description": "RPC invoke-ves-pm-file-ready success"
					}
				},
				 "description": "Operation to generate a VES  notification from a Network Function.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - invoke-ves-pm-file-ready",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/nts-network-function:clear-fault-counters": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "type": "object",
								 "properties": {
									 "input": {
										 "type": "object"
									}
								}
							}
						},
						 "application/xml": {
							 "schema": {
								 "type": "object",
								 "xml": {
									 "name": "input"
								}
							}
						}
					},
					 "description": "clear-fault-counters_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_clear-fault-counters_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/nts-network-function_clear-fault-counters_output_TOP"
								}
							}
						},
						 "description": "RPC clear-fault-counters success"
					}
				},
				 "description": "Operation to clear the fault counters.",
				 "summary": "POST - O-RAN-DU-01 - nts-network-function - clear-fault-counters",
				 "tags": [
					"mounted O-RAN-DU-01 nts-network-function"
				]
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/o-ran-sc-du-hello-world:network-function": {
			 "post": {
				 "description": "The root container for the configuration and operational data.\nThe object implements the 'network-function-grp'",
				 "summary": "POST - O-RAN-DU-01 - o-ran-sc-du-hello-world - network-function",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_config_network-function_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_config_network-function_post_xml"
							}
						}
					},
					 "description": "network-function_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "The root container for the configuration and operational data.\nThe object implements the 'network-function-grp'",
				 "summary": "GET - O-RAN-DU-01 - o-ran-sc-du-hello-world - network-function",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - o-ran-sc-du-hello-world - network-function",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				],
				 "description": "The root container for the configuration and operational data.\nThe object implements the 'network-function-grp'",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "The root container for the configuration and operational data.\nThe object implements the 'network-function-grp'",
				 "summary": "PUT - O-RAN-DU-01 - o-ran-sc-du-hello-world - network-function",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_config_network-function_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_config_network-function"
							}
						}
					},
					 "description": "network-function_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/o-ran-sc-du-hello-world:network-function/du-to-ru-connection={name}": {
			 "post": {
				 "description": "A list of connection objects to O-RAN-SC radio units.",
				 "summary": "POST - O-RAN-DU-01 - o-ran-sc-du-hello-world - du-to-ru-connection",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection_post_xml"
							}
						}
					},
					 "description": "du-to-ru-connection_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "It is proposed to use the network unique identifier of the remote\nnetwork function.\nNote: After discussion the string was not restricted by a 'length'\nstatement of a 'pattern' statement. Please avoid leading and ending\nspaces and consecutive spaces and any character outside of UTF-8-",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "A list of connection objects to O-RAN-SC radio units.",
				 "summary": "GET - O-RAN-DU-01 - o-ran-sc-du-hello-world - du-to-ru-connection",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				],
				 "parameters": [
					{
						 "name": "name",
						 "description": "It is proposed to use the network unique identifier of the remote\nnetwork function.\nNote: After discussion the string was not restricted by a 'length'\nstatement of a 'pattern' statement. Please avoid leading and ending\nspaces and consecutive spaces and any character outside of UTF-8-",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					},
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_du-to-ru-connection_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_du-to-ru-connection_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - o-ran-sc-du-hello-world - du-to-ru-connection",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				],
				 "description": "A list of connection objects to O-RAN-SC radio units.",
				 "parameters": [
					{
						 "name": "name",
						 "description": "It is proposed to use the network unique identifier of the remote\nnetwork function.\nNote: After discussion the string was not restricted by a 'length'\nstatement of a 'pattern' statement. Please avoid leading and ending\nspaces and consecutive spaces and any character outside of UTF-8-",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "A list of connection objects to O-RAN-SC radio units.",
				 "summary": "PUT - O-RAN-DU-01 - o-ran-sc-du-hello-world - du-to-ru-connection",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection"
							}
						}
					},
					 "description": "du-to-ru-connection_config"
				},
				 "parameters": [
					{
						 "name": "name",
						 "description": "It is proposed to use the network unique identifier of the remote\nnetwork function.\nNote: After discussion the string was not restricted by a 'length'\nstatement of a 'pattern' statement. Please avoid leading and ending\nspaces and consecutive spaces and any character outside of UTF-8-",
						 "schema": {
							 "type": "string"
						},
						 "in": "path",
						 "required": true
					}
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/o-ran-sc-du-hello-world:connect": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_connect_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_connect_input"
							}
						}
					},
					 "description": "connect_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_connect_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_connect_output_TOP"
								}
							}
						},
						 "description": "RPC connect success"
					}
				},
				 "description": "An action to establish the connection to a remote network function.",
				 "summary": "POST - O-RAN-DU-01 - o-ran-sc-du-hello-world - connect",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				]
			}
		},
		 "/rests/operations/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/o-ran-sc-du-hello-world:disconnect": {
			 "post": {
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_disconnect_input_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_disconnect_input"
							}
						}
					},
					 "description": "disconnect_input"
				},
				 "parameters": [
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_disconnect_output_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_disconnect_output_TOP"
								}
							}
						},
						 "description": "RPC disconnect success"
					}
				},
				 "description": "An action to destroy the connection to a remote network function.",
				 "summary": "POST - O-RAN-DU-01 - o-ran-sc-du-hello-world - disconnect",
				 "tags": [
					"mounted O-RAN-DU-01 o-ran-sc-du-hello-world"
				]
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/sysrepo-plugind:sysrepo-plugind": {
			 "post": {
				 "description": "",
				 "summary": "POST - O-RAN-DU-01 - sysrepo-plugind - sysrepo-plugind",
				 "tags": [
					"mounted O-RAN-DU-01 sysrepo-plugind"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/sysrepo-plugind_config_sysrepo-plugind_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/sysrepo-plugind_config_sysrepo-plugind_post_xml"
							}
						}
					},
					 "description": "sysrepo-plugind_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "",
				 "summary": "GET - O-RAN-DU-01 - sysrepo-plugind - sysrepo-plugind",
				 "tags": [
					"mounted O-RAN-DU-01 sysrepo-plugind"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - sysrepo-plugind - sysrepo-plugind",
				 "tags": [
					"mounted O-RAN-DU-01 sysrepo-plugind"
				],
				 "description": "",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "",
				 "summary": "PUT - O-RAN-DU-01 - sysrepo-plugind - sysrepo-plugind",
				 "tags": [
					"mounted O-RAN-DU-01 sysrepo-plugind"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/sysrepo-plugind_config_sysrepo-plugind_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/sysrepo-plugind_config_sysrepo-plugind"
							}
						}
					},
					 "description": "sysrepo-plugind_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		},
		 "/rests/data/network-topology:network-topology/topology=topology-netconf/node=O-RAN-DU-01/yang-ext:mount/sysrepo-plugind:sysrepo-plugind/plugin-order": {
			 "post": {
				 "description": "The order in which to run plugins from the sysrepo-plugind.",
				 "summary": "POST - O-RAN-DU-01 - sysrepo-plugind - plugin-order",
				 "tags": [
					"mounted O-RAN-DU-01 sysrepo-plugind"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_config_plugin-order_post"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_config_plugin-order_post_xml"
							}
						}
					},
					 "description": "plugin-order_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					}
				}
			},
			 "get": {
				 "description": "The order in which to run plugins from the sysrepo-plugind.",
				 "summary": "GET - O-RAN-DU-01 - sysrepo-plugind - plugin-order",
				 "tags": [
					"mounted O-RAN-DU-01 sysrepo-plugind"
				],
				 "parameters": [
					{
						 "in": "query",
						 "name": "content",
						 "schema": {
							 "type": "string",
							 "enum": [
								"nonconfig",
								"config"
							]
						}
					}
				],
				 "responses": {
					 "200": {
						 "content": {
							 "application/xml": {
								 "schema": {
									 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_plugin-order_TOP"
								}
							},
							 "application/json": {
								 "schema": {
									 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_plugin-order_TOP"
								}
							}
						},
						 "description": "OK"
					}
				}
			},
			 "delete": {
				 "summary": "DELETE - O-RAN-DU-01 - sysrepo-plugind - plugin-order",
				 "tags": [
					"mounted O-RAN-DU-01 sysrepo-plugind"
				],
				 "description": "The order in which to run plugins from the sysrepo-plugind.",
				 "parameters": [
				],
				 "responses": {
					 "204": {
						 "description": "Deleted"
					}
				}
			},
			 "put": {
				 "description": "The order in which to run plugins from the sysrepo-plugind.",
				 "summary": "PUT - O-RAN-DU-01 - sysrepo-plugind - plugin-order",
				 "tags": [
					"mounted O-RAN-DU-01 sysrepo-plugind"
				],
				 "requestBody": {
					 "content": {
						 "application/json": {
							 "schema": {
								 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_config_plugin-order_TOP"
							}
						},
						 "application/xml": {
							 "schema": {
								 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_config_plugin-order"
							}
						}
					},
					 "description": "plugin-order_config"
				},
				 "parameters": [
				],
				 "responses": {
					 "201": {
						 "description": "Created"
					},
					 "204": {
						 "description": "Updated"
					}
				}
			}
		}
	},
	 "components": {
		 "schemas": {
			 "datastore": {
				 "title": "datastore",
				 "description": "Abstract base identity for datastore identities.",
				 "enum": [
					"datastore",
					"dynamic",
					"conventional",
					"running",
					"intended",
					"startup",
					"candidate",
					"operational"
				],
				 "type": "string"
			},
			 "conventional": {
				 "title": "conventional",
				 "description": "Abstract base identity for conventional configuration\ndatastores.",
				 "enum": [
					"conventional",
					"running",
					"intended",
					"startup",
					"candidate"
				],
				 "type": "string"
			},
			 "running": {
				 "title": "running",
				 "description": "The running configuration datastore.",
				 "enum": [
					"running"
				],
				 "type": "string"
			},
			 "candidate": {
				 "title": "candidate",
				 "description": "The candidate configuration datastore.",
				 "enum": [
					"candidate"
				],
				 "type": "string"
			},
			 "startup": {
				 "title": "startup",
				 "description": "The startup configuration datastore.",
				 "enum": [
					"startup"
				],
				 "type": "string"
			},
			 "intended": {
				 "title": "intended",
				 "description": "The intended configuration datastore.",
				 "enum": [
					"intended"
				],
				 "type": "string"
			},
			 "dynamic": {
				 "title": "dynamic",
				 "description": "Abstract base identity for dynamic configuration datastores.",
				 "enum": [
					"dynamic"
				],
				 "type": "string"
			},
			 "operational": {
				 "title": "operational",
				 "description": "The operational state datastore.",
				 "enum": [
					"operational"
				],
				 "type": "string"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate_post": {
				 "type": "object",
				 "properties": {
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate_post",
				 "description": "A certificate for this asymmetric key.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate_post_xml": {
				 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate_post"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the certificate.  If the name\nmatches the name of a certificate that exists\nindependently in <operational> (i.e., an IDevID),\nthen the 'cert' node MUST NOT be configured.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate",
				 "description": "A certificate for this asymmetric key.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate_TOP": {
				 "type": "object",
				 "properties": {
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate"
						},
						 "description": "A certificate for this asymmetric key."
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates_post": {
				 "type": "object",
				 "properties": {
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate"
						},
						 "description": "A certificate for this asymmetric key."
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates_post",
				 "description": "Certificates associated with this asymmetric key.\nMore than one certificate supports, for instance,\na TPM-protected asymmetric key that has both IDevID\nand LDevID certificates associated.",
				 "xml": {
					 "name": "certificates",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates_post_xml": {
				 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates_post"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates": {
				 "properties": {
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_config_certificate"
						},
						 "description": "A certificate for this asymmetric key."
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates",
				 "description": "Certificates associated with this asymmetric key.\nMore than one certificate supports, for instance,\na TPM-protected asymmetric key that has both IDevID\nand LDevID certificates associated.",
				 "xml": {
					 "name": "certificates",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates_TOP": {
				 "type": "object",
				 "properties": {
					 "certificates": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates"
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key_post": {
				 "type": "object",
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key_post",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key_post"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key"
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key_post": {
				 "type": "object",
				 "properties": {
					 "certificates": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates"
					},
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key_post",
				 "description": "An asymmetric key.",
				 "xml": {
					 "name": "asymmetric-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key_post"
			},
			 "ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the asymmetric key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "certificates": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_certificates"
					},
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key",
				 "description": "An asymmetric key.",
				 "xml": {
					 "name": "asymmetric-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key_TOP": {
				 "type": "object",
				 "properties": {
					 "asymmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key"
						},
						 "description": "An asymmetric key."
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key_TOP"
			},
			 "ietf-keystore_keystore_config_asymmetric-keys_post": {
				 "type": "object",
				 "properties": {
					 "asymmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key"
						},
						 "description": "An asymmetric key."
					}
				},
				 "title": "ietf-keystore_keystore_config_asymmetric-keys_post",
				 "description": "A list of asymmetric keys.",
				 "xml": {
					 "name": "asymmetric-keys",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_config_asymmetric-keys_post_xml": {
				 "$ref": "#/components/schemas/ietf-keystore_keystore_config_asymmetric-keys_post"
			},
			 "ietf-keystore_keystore_config_asymmetric-keys": {
				 "properties": {
					 "asymmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_config_asymmetric-key"
						},
						 "description": "An asymmetric key."
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_config_asymmetric-keys",
				 "description": "A list of asymmetric keys.",
				 "xml": {
					 "name": "asymmetric-keys",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_config_asymmetric-keys_TOP": {
				 "type": "object",
				 "properties": {
					 "asymmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_config_asymmetric-keys"
					}
				},
				 "title": "ietf-keystore_keystore_config_asymmetric-keys_TOP"
			},
			 "ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key_post": {
				 "type": "object",
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "title": "ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key_post",
				 "description": "A container for the encrypted symmetric key value.",
				 "xml": {
					 "name": "encrypted-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key_post"
			},
			 "ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key",
				 "description": "A container for the encrypted symmetric key value.",
				 "xml": {
					 "name": "encrypted-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key"
					}
				},
				 "title": "ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key_TOP"
			},
			 "ietf-keystore_keystore_symmetric-keys_config_symmetric-key_post": {
				 "type": "object",
				 "properties": {
					 "algorithm": {
						 "description": "The algorithm to be used when generating the key.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "key": {
						 "description": "The binary value of the key.  The interpretation of\nthe value is defined by 'algorithm'.  For example,\nFIXME.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "hidden-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypted-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key"
					}
				},
				 "title": "ietf-keystore_keystore_symmetric-keys_config_symmetric-key_post",
				 "description": "A symmetric key.",
				 "xml": {
					 "name": "symmetric-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_symmetric-keys_config_symmetric-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_config_symmetric-key_post"
			},
			 "ietf-keystore_keystore_symmetric-keys_config_symmetric-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the symmetric key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "algorithm": {
						 "description": "The algorithm to be used when generating the key.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "key": {
						 "description": "The binary value of the key.  The interpretation of\nthe value is defined by 'algorithm'.  For example,\nFIXME.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "hidden-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypted-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key_config_encrypted-key"
					}
				},
				 "required": [
					"algorithm"
				],
				 "type": "object",
				 "title": "ietf-keystore_keystore_symmetric-keys_config_symmetric-key",
				 "description": "A symmetric key.",
				 "xml": {
					 "name": "symmetric-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_symmetric-keys_config_symmetric-key_TOP": {
				 "type": "object",
				 "properties": {
					 "symmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_config_symmetric-key"
						},
						 "description": "A symmetric key."
					}
				},
				 "title": "ietf-keystore_keystore_symmetric-keys_config_symmetric-key_TOP"
			},
			 "ietf-keystore_keystore_config_symmetric-keys_post": {
				 "type": "object",
				 "properties": {
					 "symmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_config_symmetric-key"
						},
						 "description": "A symmetric key."
					}
				},
				 "title": "ietf-keystore_keystore_config_symmetric-keys_post",
				 "description": "A list of symmetric keys.",
				 "xml": {
					 "name": "symmetric-keys",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_config_symmetric-keys_post_xml": {
				 "$ref": "#/components/schemas/ietf-keystore_keystore_config_symmetric-keys_post"
			},
			 "ietf-keystore_keystore_config_symmetric-keys": {
				 "properties": {
					 "symmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_config_symmetric-key"
						},
						 "description": "A symmetric key."
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_config_symmetric-keys",
				 "description": "A list of symmetric keys.",
				 "xml": {
					 "name": "symmetric-keys",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_config_symmetric-keys_TOP": {
				 "type": "object",
				 "properties": {
					 "symmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_config_symmetric-keys"
					}
				},
				 "title": "ietf-keystore_keystore_config_symmetric-keys_TOP"
			},
			 "ietf-keystore_config_keystore_post": {
				 "type": "object",
				 "properties": {
					 "asymmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_config_asymmetric-keys"
					},
					 "symmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_config_symmetric-keys"
					}
				},
				 "title": "ietf-keystore_config_keystore_post",
				 "description": "The keystore contains a list of keys.",
				 "xml": {
					 "name": "keystore",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_config_keystore_post_xml": {
				 "$ref": "#/components/schemas/ietf-keystore_config_keystore_post"
			},
			 "ietf-keystore_config_keystore": {
				 "properties": {
					 "asymmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_config_asymmetric-keys"
					},
					 "symmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_config_symmetric-keys"
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_config_keystore",
				 "description": "The keystore contains a list of keys.",
				 "xml": {
					 "name": "keystore",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_config_keystore_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore": {
						 "$ref": "#/components/schemas/ietf-keystore_config_keystore"
					}
				},
				 "title": "ietf-keystore_config_keystore_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_certificate": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the certificate.  If the name\nmatches the name of a certificate that exists\nindependently in <operational> (i.e., an IDevID),\nthen the 'cert' node MUST NOT be configured.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_certificate",
				 "description": "A certificate for this asymmetric key.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_certificate_TOP": {
				 "type": "object",
				 "properties": {
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_certificate"
						},
						 "description": "A certificate for this asymmetric key."
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_certificate_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates": {
				 "properties": {
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_certificate"
						},
						 "description": "A certificate for this asymmetric key."
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates",
				 "description": "Certificates associated with this asymmetric key.\nMore than one certificate supports, for instance,\na TPM-protected asymmetric key that has both IDevID\nand LDevID certificates associated.",
				 "xml": {
					 "name": "certificates",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_TOP": {
				 "type": "object",
				 "properties": {
					 "certificates": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates"
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_encrypted-private-key"
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_encrypted-private-key_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the asymmetric key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "certificates": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_certificates"
					},
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key",
				 "description": "An asymmetric key.",
				 "xml": {
					 "name": "asymmetric-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_TOP": {
				 "type": "object",
				 "properties": {
					 "asymmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key"
						},
						 "description": "An asymmetric key."
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_asymmetric-key_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_input": {
				 "properties": {
					 "subject": {
						 "description": "The 'subject' field per the CertificationRequestInfo\n structure as specified by RFC 2986, Section 4.1\n encoded using the ASN.1 distinguished encoding\n rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "subject",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "attributes": {
						 "description": "The 'attributes' field from the structure\nCertificationRequestInfo as specified by RFC 2986,\nSection 4.1 encoded using the ASN.1 distinguished\nencoding rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "attributes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "required": [
					"subject"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_input"
			},
			 "ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_input"
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_input_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_output": {
				 "properties": {
					 "certificate-signing-request": {
						 "description": "A CertificationRequest structure as specified by\nRFC 2986, Section 4.2 encoded using the ASN.1\ndistinguished encoding rules (DER), as specified\nin ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "certificate-signing-request",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "required": [
					"certificate-signing-request"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_output"
			},
			 "ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_output"
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_generate-certificate-signing-request_output_TOP"
			},
			 "ietf-keystore_keystore_asymmetric-keys": {
				 "properties": {
					 "asymmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys_asymmetric-key"
						},
						 "description": "An asymmetric key."
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_asymmetric-keys",
				 "description": "A list of asymmetric keys.",
				 "xml": {
					 "name": "asymmetric-keys",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_asymmetric-keys_TOP": {
				 "type": "object",
				 "properties": {
					 "asymmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys"
					}
				},
				 "title": "ietf-keystore_keystore_asymmetric-keys_TOP"
			},
			 "ietf-keystore_keystore_symmetric-keys_symmetric-key_encrypted-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_symmetric-keys_symmetric-key_encrypted-key",
				 "description": "A container for the encrypted symmetric key value.",
				 "xml": {
					 "name": "encrypted-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_symmetric-keys_symmetric-key_encrypted-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key_encrypted-key"
					}
				},
				 "title": "ietf-keystore_keystore_symmetric-keys_symmetric-key_encrypted-key_TOP"
			},
			 "ietf-keystore_keystore_symmetric-keys_symmetric-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the symmetric key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "algorithm": {
						 "description": "The algorithm to be used when generating the key.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "key": {
						 "description": "The binary value of the key.  The interpretation of\nthe value is defined by 'algorithm'.  For example,\nFIXME.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "hidden-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypted-key": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key_encrypted-key"
					}
				},
				 "required": [
					"algorithm"
				],
				 "type": "object",
				 "title": "ietf-keystore_keystore_symmetric-keys_symmetric-key",
				 "description": "A symmetric key.",
				 "xml": {
					 "name": "symmetric-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_symmetric-keys_symmetric-key_TOP": {
				 "type": "object",
				 "properties": {
					 "symmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key"
						},
						 "description": "A symmetric key."
					}
				},
				 "title": "ietf-keystore_keystore_symmetric-keys_symmetric-key_TOP"
			},
			 "ietf-keystore_keystore_symmetric-keys": {
				 "properties": {
					 "symmetric-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys_symmetric-key"
						},
						 "description": "A symmetric key."
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore_symmetric-keys",
				 "description": "A list of symmetric keys.",
				 "xml": {
					 "name": "symmetric-keys",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_symmetric-keys_TOP": {
				 "type": "object",
				 "properties": {
					 "symmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys"
					}
				},
				 "title": "ietf-keystore_keystore_symmetric-keys_TOP"
			},
			 "ietf-keystore_keystore": {
				 "properties": {
					 "asymmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_asymmetric-keys"
					},
					 "symmetric-keys": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore_symmetric-keys"
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_keystore",
				 "description": "The keystore contains a list of keys.",
				 "xml": {
					 "name": "keystore",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_keystore_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore": {
						 "$ref": "#/components/schemas/ietf-keystore_keystore"
					}
				},
				 "title": "ietf-keystore_keystore_TOP"
			},
			 "ietf-keystore_encrypt-with": {
				 "properties": {
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_encrypt-with",
				 "description": "A container for the 'key-type' choice.",
				 "xml": {
					 "name": "encrypt-with",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_encrypt-with_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypt-with": {
						 "$ref": "#/components/schemas/ietf-keystore_encrypt-with"
					}
				},
				 "title": "ietf-keystore_encrypt-with_TOP"
			},
			 "ietf-keystore_generate-symmetric-key_input": {
				 "properties": {
					 "algorithm": {
						 "description": "The algorithm to be used when generating the key.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypt-with": {
						 "$ref": "#/components/schemas/ietf-keystore_encrypt-with"
					}
				},
				 "required": [
					"algorithm"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-keystore_generate-symmetric-key_input"
			},
			 "ietf-keystore_generate-symmetric-key_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-keystore_generate-symmetric-key_input"
					}
				},
				 "title": "ietf-keystore_generate-symmetric-key_input_TOP"
			},
			 "ietf-keystore_encrypted-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_encrypted-key",
				 "description": "A container for the encrypted symmetric key value.",
				 "xml": {
					 "name": "encrypted-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_encrypted-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-key": {
						 "$ref": "#/components/schemas/ietf-keystore_encrypted-key"
					}
				},
				 "title": "ietf-keystore_encrypted-key_TOP"
			},
			 "ietf-keystore_generate-symmetric-key_output": {
				 "properties": {
					 "algorithm": {
						 "description": "The algorithm to be used when generating the key.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "key": {
						 "description": "The binary value of the key.  The interpretation of\nthe value is defined by 'algorithm'.  For example,\nFIXME.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "hidden-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypted-key": {
						 "$ref": "#/components/schemas/ietf-keystore_encrypted-key"
					}
				},
				 "required": [
					"algorithm"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-keystore_generate-symmetric-key_output"
			},
			 "ietf-keystore_generate-symmetric-key_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-keystore_generate-symmetric-key_output"
					}
				},
				 "title": "ietf-keystore_generate-symmetric-key_output_TOP"
			},
			 "ietf-keystore_encrypt-with1": {
				 "properties": {
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_encrypt-with",
				 "description": "A container for the 'key-type' choice.",
				 "xml": {
					 "name": "encrypt-with",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_encrypt-with_TOP1": {
				 "type": "object",
				 "properties": {
					 "encrypt-with": {
						 "$ref": "#/components/schemas/ietf-keystore_encrypt-with1"
					}
				},
				 "title": "ietf-keystore_encrypt-with_TOP"
			},
			 "ietf-keystore_generate-asymmetric-key_input": {
				 "properties": {
					 "algorithm": {
						 "description": "The algorithm to be used when generating the key.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypt-with": {
						 "$ref": "#/components/schemas/ietf-keystore_encrypt-with1"
					}
				},
				 "required": [
					"algorithm"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-keystore_generate-asymmetric-key_input"
			},
			 "ietf-keystore_generate-asymmetric-key_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-keystore_generate-asymmetric-key_input"
					}
				},
				 "title": "ietf-keystore_generate-asymmetric-key_input_TOP"
			},
			 "ietf-keystore_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-keystore_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
				}
			},
			 "ietf-keystore_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-keystore_encrypted-private-key"
					}
				},
				 "title": "ietf-keystore_encrypted-private-key_TOP"
			},
			 "ietf-keystore_generate-asymmetric-key_output": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-keystore_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-keystore"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-keystore_generate-asymmetric-key_output"
			},
			 "ietf-keystore_generate-asymmetric-key_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-keystore_generate-asymmetric-key_output"
					}
				},
				 "title": "ietf-keystore_generate-asymmetric-key_output_TOP"
			},
			 "ietf-netconf_source": {
				 "properties": {
					 "candidate": {
						 "description": "The candidate configuration is the config source.",
						 "type": "object",
						 "xml": {
							 "name": "candidate",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "running": {
						 "description": "The running configuration is the config source.",
						 "type": "object",
						 "xml": {
							 "name": "running",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "startup": {
						 "description": "The startup configuration is the config source.\nThis is optional-to-implement on the server because\nnot all servers will support filtering for this\ndatastore.",
						 "type": "object",
						 "xml": {
							 "name": "startup",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf_source",
				 "description": "Particular configuration to retrieve.",
				 "xml": {
					 "name": "source",
					 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
				}
			},
			 "ietf-netconf_source_TOP": {
				 "type": "object",
				 "properties": {
					 "source": {
						 "$ref": "#/components/schemas/ietf-netconf_source"
					}
				},
				 "title": "ietf-netconf_source_TOP"
			},
			 "ietf-netconf_get-config_input": {
				 "properties": {
					 "source": {
						 "$ref": "#/components/schemas/ietf-netconf_source"
					},
					 "filter": {
						 "description": "Subtree or XPath filter to use.",
						 "default": "<filter> ... </filter>",
						 "type": "string",
						 "xml": {
							 "name": "filter",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "with-defaults": {
						 "description": "The explicit defaults processing mode requested.",
						 "enum": [
							"report-all",
							"report-all-tagged",
							"trim",
							"explicit"
						],
						 "default": "report-all",
						 "type": "string",
						 "xml": {
							 "name": "with-defaults",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_get-config_input"
			},
			 "ietf-netconf_get-config_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_get-config_input"
					}
				},
				 "title": "ietf-netconf_get-config_input_TOP"
			},
			 "ietf-netconf_get-config_output": {
				 "properties": {
					 "data": {
						 "description": "Copy of the source datastore subset that matched\nthe filter criteria (if any).  An empty data container\nindicates that the request did not produce any results.",
						 "default": "<data> ... </data>",
						 "type": "string",
						 "xml": {
							 "name": "data",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-netconf_get-config_output"
			},
			 "ietf-netconf_get-config_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-netconf_get-config_output"
					}
				},
				 "title": "ietf-netconf_get-config_output_TOP"
			},
			 "ietf-netconf_target": {
				 "properties": {
					 "candidate": {
						 "description": "The candidate configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "candidate",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "running": {
						 "description": "The running configuration is the config source.",
						 "type": "object",
						 "xml": {
							 "name": "running",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf_target",
				 "description": "Particular configuration to edit.",
				 "xml": {
					 "name": "target",
					 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
				}
			},
			 "ietf-netconf_target_TOP": {
				 "type": "object",
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target"
					}
				},
				 "title": "ietf-netconf_target_TOP"
			},
			 "ietf-netconf_edit-config_input": {
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target"
					},
					 "default-operation": {
						 "description": "The default operation to use.",
						 "enum": [
							"merge",
							"replace",
							"none"
						],
						 "default": "merge",
						 "type": "string",
						 "xml": {
							 "name": "default-operation",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "test-option": {
						 "description": "The test option to use.",
						 "enum": [
							"test-then-set",
							"set",
							"test-only"
						],
						 "default": "test-then-set",
						 "type": "string",
						 "xml": {
							 "name": "test-option",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "error-option": {
						 "description": "The error option to use.",
						 "enum": [
							"stop-on-error",
							"continue-on-error",
							"rollback-on-error"
						],
						 "default": "stop-on-error",
						 "type": "string",
						 "xml": {
							 "name": "error-option",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "config": {
						 "description": "Inline Config content.",
						 "default": "<config> ... </config>",
						 "type": "string",
						 "xml": {
							 "name": "config",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "url": {
						 "description": "URL-based config content.",
						 "default": "Some url",
						 "type": "string",
						 "xml": {
							 "name": "url",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_edit-config_input"
			},
			 "ietf-netconf_edit-config_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_edit-config_input"
					}
				},
				 "title": "ietf-netconf_edit-config_input_TOP"
			},
			 "ietf-netconf_target1": {
				 "properties": {
					 "candidate": {
						 "description": "The candidate configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "candidate",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "running": {
						 "description": "The running configuration is the config target.\nThis is optional-to-implement on the server.",
						 "type": "object",
						 "xml": {
							 "name": "running",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "startup": {
						 "description": "The startup configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "startup",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "url": {
						 "description": "The URL-based configuration is the config target.",
						 "default": "Some url",
						 "type": "string",
						 "xml": {
							 "name": "url",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf_target",
				 "description": "Particular configuration to copy to.",
				 "xml": {
					 "name": "target",
					 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
				}
			},
			 "ietf-netconf_target_TOP1": {
				 "type": "object",
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target1"
					}
				},
				 "title": "ietf-netconf_target_TOP"
			},
			 "ietf-netconf_source1": {
				 "properties": {
					 "candidate": {
						 "description": "The candidate configuration is the config source.",
						 "type": "object",
						 "xml": {
							 "name": "candidate",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "running": {
						 "description": "The running configuration is the config source.",
						 "type": "object",
						 "xml": {
							 "name": "running",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "startup": {
						 "description": "The startup configuration is the config source.",
						 "type": "object",
						 "xml": {
							 "name": "startup",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "url": {
						 "description": "The URL-based configuration is the config source.",
						 "default": "Some url",
						 "type": "string",
						 "xml": {
							 "name": "url",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "config": {
						 "description": "Inline Config content: <config> element.  Represents\nan entire configuration datastore, not\na subset of the running datastore.",
						 "default": "<config> ... </config>",
						 "type": "string",
						 "xml": {
							 "name": "config",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf_source",
				 "description": "Particular configuration to copy from.",
				 "xml": {
					 "name": "source",
					 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
				}
			},
			 "ietf-netconf_source_TOP1": {
				 "type": "object",
				 "properties": {
					 "source": {
						 "$ref": "#/components/schemas/ietf-netconf_source1"
					}
				},
				 "title": "ietf-netconf_source_TOP"
			},
			 "ietf-netconf_copy-config_input": {
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target1"
					},
					 "source": {
						 "$ref": "#/components/schemas/ietf-netconf_source1"
					},
					 "with-defaults": {
						 "description": "The explicit defaults processing mode requested.",
						 "enum": [
							"report-all",
							"report-all-tagged",
							"trim",
							"explicit"
						],
						 "default": "report-all",
						 "type": "string",
						 "xml": {
							 "name": "with-defaults",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_copy-config_input"
			},
			 "ietf-netconf_copy-config_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_copy-config_input"
					}
				},
				 "title": "ietf-netconf_copy-config_input_TOP"
			},
			 "ietf-netconf_target2": {
				 "properties": {
					 "startup": {
						 "description": "The startup configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "startup",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "url": {
						 "description": "The URL-based configuration is the config target.",
						 "default": "Some url",
						 "type": "string",
						 "xml": {
							 "name": "url",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf_target",
				 "description": "Particular configuration to delete.",
				 "xml": {
					 "name": "target",
					 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
				}
			},
			 "ietf-netconf_target_TOP2": {
				 "type": "object",
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target2"
					}
				},
				 "title": "ietf-netconf_target_TOP"
			},
			 "ietf-netconf_delete-config_input": {
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target2"
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_delete-config_input"
			},
			 "ietf-netconf_delete-config_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_delete-config_input"
					}
				},
				 "title": "ietf-netconf_delete-config_input_TOP"
			},
			 "ietf-netconf_target3": {
				 "properties": {
					 "candidate": {
						 "description": "The candidate configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "candidate",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "running": {
						 "description": "The running configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "running",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "startup": {
						 "description": "The startup configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "startup",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "datastore": {
						 "$ref": "#/components/schemas/datastore",
						 "xml": {
							 "name": "datastore",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf_target",
				 "description": "Particular configuration to lock.",
				 "xml": {
					 "name": "target",
					 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
				}
			},
			 "ietf-netconf_target_TOP3": {
				 "type": "object",
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target3"
					}
				},
				 "title": "ietf-netconf_target_TOP"
			},
			 "ietf-netconf_lock_input": {
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target3"
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_lock_input"
			},
			 "ietf-netconf_lock_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_lock_input"
					}
				},
				 "title": "ietf-netconf_lock_input_TOP"
			},
			 "ietf-netconf_target4": {
				 "properties": {
					 "candidate": {
						 "description": "The candidate configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "candidate",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "running": {
						 "description": "The running configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "running",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "startup": {
						 "description": "The startup configuration is the config target.",
						 "type": "object",
						 "xml": {
							 "name": "startup",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "datastore": {
						 "$ref": "#/components/schemas/datastore",
						 "xml": {
							 "name": "datastore",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf_target",
				 "description": "Particular configuration to unlock.",
				 "xml": {
					 "name": "target",
					 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
				}
			},
			 "ietf-netconf_target_TOP4": {
				 "type": "object",
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target4"
					}
				},
				 "title": "ietf-netconf_target_TOP"
			},
			 "ietf-netconf_unlock_input": {
				 "properties": {
					 "target": {
						 "$ref": "#/components/schemas/ietf-netconf_target4"
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_unlock_input"
			},
			 "ietf-netconf_unlock_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_unlock_input"
					}
				},
				 "title": "ietf-netconf_unlock_input_TOP"
			},
			 "ietf-netconf_get_input": {
				 "properties": {
					 "filter": {
						 "description": "This parameter specifies the portion of the system\nconfiguration and state data to retrieve.",
						 "default": "<filter> ... </filter>",
						 "type": "string",
						 "xml": {
							 "name": "filter",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "with-defaults": {
						 "description": "The explicit defaults processing mode requested.",
						 "enum": [
							"report-all",
							"report-all-tagged",
							"trim",
							"explicit"
						],
						 "default": "report-all",
						 "type": "string",
						 "xml": {
							 "name": "with-defaults",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_get_input"
			},
			 "ietf-netconf_get_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_get_input"
					}
				},
				 "title": "ietf-netconf_get_input_TOP"
			},
			 "ietf-netconf_get_output": {
				 "properties": {
					 "data": {
						 "description": "Copy of the running datastore subset and/or state\ndata that matched the filter criteria (if any).\nAn empty data container indicates that the request did not\nproduce any results.",
						 "default": "<data> ... </data>",
						 "type": "string",
						 "xml": {
							 "name": "data",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-netconf_get_output"
			},
			 "ietf-netconf_get_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-netconf_get_output"
					}
				},
				 "title": "ietf-netconf_get_output_TOP"
			},
			 "ietf-netconf_kill-session_input": {
				 "properties": {
					 "session-id": {
						 "description": "Particular session to kill.",
						 "format": "int64",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "session-id",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "required": [
					"session-id"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_kill-session_input"
			},
			 "ietf-netconf_kill-session_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_kill-session_input"
					}
				},
				 "title": "ietf-netconf_kill-session_input_TOP"
			},
			 "ietf-netconf_commit_input": {
				 "properties": {
					 "confirmed": {
						 "description": "Requests a confirmed commit.",
						 "type": "object",
						 "xml": {
							 "name": "confirmed",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "confirm-timeout": {
						 "description": "The timeout interval for a confirmed commit.",
						 "format": "int64",
						 "default": 600,
						 "type": "integer",
						 "xml": {
							 "name": "confirm-timeout",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "persist": {
						 "description": "This parameter is used to make a confirmed commit\npersistent.  A persistent confirmed commit is not aborted\nif the NETCONF session terminates.  The only way to abort\na persistent confirmed commit is to let the timer expire,\nor to use the <cancel-commit> operation.\n\nThe value of this parameter is a token that must be given\nin the 'persist-id' parameter of <commit> or\n<cancel-commit> operations in order to confirm or cancel\nthe persistent confirmed commit.\n\nThe token should be a random string.",
						 "default": "Some persist",
						 "type": "string",
						 "xml": {
							 "name": "persist",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "persist-id": {
						 "description": "This parameter is given in order to commit a persistent\nconfirmed commit.  The value must be equal to the value\ngiven in the 'persist' parameter to the <commit> operation.\nIf it does not match, the operation fails with an\n'invalid-value' error.",
						 "default": "Some persist-id",
						 "type": "string",
						 "xml": {
							 "name": "persist-id",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_commit_input"
			},
			 "ietf-netconf_commit_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_commit_input"
					}
				},
				 "title": "ietf-netconf_commit_input_TOP"
			},
			 "ietf-netconf_cancel-commit_input": {
				 "properties": {
					 "persist-id": {
						 "description": "This parameter is given in order to cancel a persistent\nconfirmed commit.  The value must be equal to the value\ngiven in the 'persist' parameter to the <commit> operation.\nIf it does not match, the operation fails with an\n'invalid-value' error.",
						 "default": "Some persist-id",
						 "type": "string",
						 "xml": {
							 "name": "persist-id",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_cancel-commit_input"
			},
			 "ietf-netconf_cancel-commit_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_cancel-commit_input"
					}
				},
				 "title": "ietf-netconf_cancel-commit_input_TOP"
			},
			 "ietf-netconf_source2": {
				 "properties": {
					 "candidate": {
						 "description": "The candidate configuration is the config source.",
						 "type": "object",
						 "xml": {
							 "name": "candidate",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "running": {
						 "description": "The running configuration is the config source.",
						 "type": "object",
						 "xml": {
							 "name": "running",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "startup": {
						 "description": "The startup configuration is the config source.",
						 "type": "object",
						 "xml": {
							 "name": "startup",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "url": {
						 "description": "The URL-based configuration is the config source.",
						 "default": "Some url",
						 "type": "string",
						 "xml": {
							 "name": "url",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "config": {
						 "description": "Inline Config content: <config> element.  Represents\nan entire configuration datastore, not\na subset of the running datastore.",
						 "default": "<config> ... </config>",
						 "type": "string",
						 "xml": {
							 "name": "config",
							 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
						}
					},
					 "datastore": {
						 "$ref": "#/components/schemas/datastore",
						 "xml": {
							 "name": "datastore",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf_source",
				 "description": "Particular configuration to validate.",
				 "xml": {
					 "name": "source",
					 "namespace": "urn:ietf:params:xml:ns:netconf:base:1.0"
				}
			},
			 "ietf-netconf_source_TOP2": {
				 "type": "object",
				 "properties": {
					 "source": {
						 "$ref": "#/components/schemas/ietf-netconf_source2"
					}
				},
				 "title": "ietf-netconf_source_TOP"
			},
			 "ietf-netconf_validate_input": {
				 "properties": {
					 "source": {
						 "$ref": "#/components/schemas/ietf-netconf_source2"
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf_validate_input"
			},
			 "ietf-netconf_validate_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf_validate_input"
					}
				},
				 "title": "ietf-netconf_validate_input_TOP"
			},
			 "ietf-netconf-acm_nacm_groups_config_group_post": {
				 "type": "object",
				 "properties": {
					 "user-name": {
						 "type": "array",
						 "items": {
							 "minLength": 1,
							 "maxLength": 2147483647,
							 "default": "Some user-name",
							 "type": "string"
						},
						 "description": "Each entry identifies the username of\na member of the group associated with\nthis entry."
					}
				},
				 "title": "ietf-netconf-acm_nacm_groups_config_group_post",
				 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols.",
				 "xml": {
					 "name": "group",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_groups_config_group_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_config_group_post"
			},
			 "ietf-netconf-acm_nacm_groups_config_group": {
				 "properties": {
					 "name": {
						 "description": "Group name associated with this entry.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "?:彴巽紧",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "user-name": {
						 "type": "array",
						 "items": {
							 "minLength": 1,
							 "maxLength": 2147483647,
							 "default": "Some user-name",
							 "type": "string"
						},
						 "description": "Each entry identifies the username of\na member of the group associated with\nthis entry."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-acm_nacm_groups_config_group",
				 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols.",
				 "xml": {
					 "name": "group",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_groups_config_group_TOP": {
				 "type": "object",
				 "properties": {
					 "group": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_config_group"
						},
						 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols."
					}
				},
				 "title": "ietf-netconf-acm_nacm_groups_config_group_TOP"
			},
			 "ietf-netconf-acm_nacm_config_groups_post": {
				 "type": "object",
				 "properties": {
					 "group": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_config_group"
						},
						 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols."
					}
				},
				 "title": "ietf-netconf-acm_nacm_config_groups_post",
				 "description": "NETCONF access control groups.",
				 "xml": {
					 "name": "groups",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_config_groups_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_groups_post"
			},
			 "ietf-netconf-acm_nacm_config_groups": {
				 "properties": {
					 "group": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_config_group"
						},
						 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-acm_nacm_config_groups",
				 "description": "NETCONF access control groups.",
				 "xml": {
					 "name": "groups",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_config_groups_TOP": {
				 "type": "object",
				 "properties": {
					 "groups": {
						 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_groups"
					}
				},
				 "title": "ietf-netconf-acm_nacm_config_groups_TOP"
			},
			 "ietf-netconf-acm_nacm_rule-list_config_rule_post": {
				 "type": "object",
				 "properties": {
					 "module-name": {
						 "description": "Name of the module associated with this rule.\n\nThis leaf matches if it has the value '*' or if the\nobject being accessed is defined in the module with the\nspecified module name.",
						 "type": "string",
						 "default": "*",
						 "xml": {
							 "name": "module-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "rpc-name": {
						 "description": "This leaf matches if it has the value '*' or if\nits value equals the requested protocol operation\nname.",
						 "type": "string",
						 "xml": {
							 "name": "rpc-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "notification-name": {
						 "description": "This leaf matches if it has the value '*' or if its\nvalue equals the requested notification name.",
						 "type": "string",
						 "xml": {
							 "name": "notification-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "path": {
						 "description": "Data node instance-identifier associated with the\ndata node, action, or notification controlled by\nthis rule.\n\nConfiguration data or state data\ninstance-identifiers start with a top-level\ndata node.  A complete instance-identifier is\nrequired for this type of path value.\n\nThe special value '/' refers to all possible\ndatastore contents.",
						 "default": "Some path",
						 "type": "string",
						 "xml": {
							 "name": "path",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "access-operations": {
						 "description": "Access operations associated with this rule.\n\nThis leaf matches if it has the value '*' or if the\nbit corresponding to the requested operation is set.",
						 "type": "string",
						 "default": "*",
						 "xml": {
							 "name": "access-operations",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "action": {
						 "description": "The access control action associated with the\nrule.  If a rule has been determined to match a\nparticular request, then this object is used\nto determine whether to permit or deny the\nrequest.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "permit",
						 "type": "string",
						 "xml": {
							 "name": "action",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "comment": {
						 "description": "A textual description of the access rule.",
						 "default": "Some comment",
						 "type": "string",
						 "xml": {
							 "name": "comment",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					}
				},
				 "title": "ietf-netconf-acm_nacm_rule-list_config_rule_post",
				 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted.",
				 "xml": {
					 "name": "rule",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_rule-list_config_rule_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_config_rule_post"
			},
			 "ietf-netconf-acm_nacm_rule-list_config_rule": {
				 "properties": {
					 "name": {
						 "description": "Arbitrary name assigned to the rule.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "module-name": {
						 "description": "Name of the module associated with this rule.\n\nThis leaf matches if it has the value '*' or if the\nobject being accessed is defined in the module with the\nspecified module name.",
						 "type": "string",
						 "default": "*",
						 "xml": {
							 "name": "module-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "rpc-name": {
						 "description": "This leaf matches if it has the value '*' or if\nits value equals the requested protocol operation\nname.",
						 "type": "string",
						 "xml": {
							 "name": "rpc-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "notification-name": {
						 "description": "This leaf matches if it has the value '*' or if its\nvalue equals the requested notification name.",
						 "type": "string",
						 "xml": {
							 "name": "notification-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "path": {
						 "description": "Data node instance-identifier associated with the\ndata node, action, or notification controlled by\nthis rule.\n\nConfiguration data or state data\ninstance-identifiers start with a top-level\ndata node.  A complete instance-identifier is\nrequired for this type of path value.\n\nThe special value '/' refers to all possible\ndatastore contents.",
						 "default": "Some path",
						 "type": "string",
						 "xml": {
							 "name": "path",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "access-operations": {
						 "description": "Access operations associated with this rule.\n\nThis leaf matches if it has the value '*' or if the\nbit corresponding to the requested operation is set.",
						 "type": "string",
						 "default": "*",
						 "xml": {
							 "name": "access-operations",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "action": {
						 "description": "The access control action associated with the\nrule.  If a rule has been determined to match a\nparticular request, then this object is used\nto determine whether to permit or deny the\nrequest.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "permit",
						 "type": "string",
						 "xml": {
							 "name": "action",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "comment": {
						 "description": "A textual description of the access rule.",
						 "default": "Some comment",
						 "type": "string",
						 "xml": {
							 "name": "comment",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					}
				},
				 "required": [
					"action"
				],
				 "type": "object",
				 "title": "ietf-netconf-acm_nacm_rule-list_config_rule",
				 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted.",
				 "xml": {
					 "name": "rule",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_rule-list_config_rule_TOP": {
				 "type": "object",
				 "properties": {
					 "rule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_config_rule"
						},
						 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted."
					}
				},
				 "title": "ietf-netconf-acm_nacm_rule-list_config_rule_TOP"
			},
			 "ietf-netconf-acm_nacm_config_rule-list_post": {
				 "type": "object",
				 "properties": {
					 "group": {
						 "type": "array",
						 "items": {
							 "type": "string"
						},
						 "description": "List of administrative groups that will be\nassigned the associated access rights\ndefined by the 'rule' list.\n\nThe string '*' indicates that all groups apply to the\nentry."
					},
					 "rule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_config_rule"
						},
						 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted."
					}
				},
				 "title": "ietf-netconf-acm_nacm_config_rule-list_post",
				 "description": "An ordered collection of access control rules.",
				 "xml": {
					 "name": "rule-list",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_config_rule-list_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_rule-list_post"
			},
			 "ietf-netconf-acm_nacm_config_rule-list": {
				 "properties": {
					 "name": {
						 "description": "Arbitrary name assigned to the rule-list.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "group": {
						 "type": "array",
						 "items": {
							 "type": "string"
						},
						 "description": "List of administrative groups that will be\nassigned the associated access rights\ndefined by the 'rule' list.\n\nThe string '*' indicates that all groups apply to the\nentry."
					},
					 "rule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_config_rule"
						},
						 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-acm_nacm_config_rule-list",
				 "description": "An ordered collection of access control rules.",
				 "xml": {
					 "name": "rule-list",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_config_rule-list_TOP": {
				 "type": "object",
				 "properties": {
					 "rule-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_rule-list"
						},
						 "description": "An ordered collection of access control rules."
					}
				},
				 "title": "ietf-netconf-acm_nacm_config_rule-list_TOP"
			},
			 "ietf-netconf-acm_config_nacm_post": {
				 "type": "object",
				 "properties": {
					 "enable-nacm": {
						 "description": "Enables or disables all NETCONF access control\nenforcement.  If 'true', then enforcement\nis enabled.  If 'false', then enforcement\nis disabled.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "enable-nacm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "read-default": {
						 "description": "Controls whether read access is granted if\nno appropriate rule is found for a\nparticular read request.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "permit",
						 "type": "string",
						 "xml": {
							 "name": "read-default",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "write-default": {
						 "description": "Controls whether create, update, or delete access\nis granted if no appropriate rule is found for a\nparticular write request.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "deny",
						 "type": "string",
						 "xml": {
							 "name": "write-default",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "exec-default": {
						 "description": "Controls whether exec access is granted if no appropriate\nrule is found for a particular protocol operation request.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "permit",
						 "type": "string",
						 "xml": {
							 "name": "exec-default",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "enable-external-groups": {
						 "description": "Controls whether the server uses the groups reported by the\nNETCONF transport layer when it assigns the user to a set of\nNACM groups.  If this leaf has the value 'false', any group\nnames reported by the transport layer are ignored by the\nserver.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "enable-external-groups",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "groups": {
						 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_groups"
					},
					 "rule-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_rule-list"
						},
						 "description": "An ordered collection of access control rules."
					}
				},
				 "title": "ietf-netconf-acm_config_nacm_post",
				 "description": "Parameters for NETCONF access control model.",
				 "xml": {
					 "name": "nacm",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_config_nacm_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-acm_config_nacm_post"
			},
			 "ietf-netconf-acm_config_nacm": {
				 "properties": {
					 "enable-nacm": {
						 "description": "Enables or disables all NETCONF access control\nenforcement.  If 'true', then enforcement\nis enabled.  If 'false', then enforcement\nis disabled.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "enable-nacm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "read-default": {
						 "description": "Controls whether read access is granted if\nno appropriate rule is found for a\nparticular read request.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "permit",
						 "type": "string",
						 "xml": {
							 "name": "read-default",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "write-default": {
						 "description": "Controls whether create, update, or delete access\nis granted if no appropriate rule is found for a\nparticular write request.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "deny",
						 "type": "string",
						 "xml": {
							 "name": "write-default",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "exec-default": {
						 "description": "Controls whether exec access is granted if no appropriate\nrule is found for a particular protocol operation request.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "permit",
						 "type": "string",
						 "xml": {
							 "name": "exec-default",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "enable-external-groups": {
						 "description": "Controls whether the server uses the groups reported by the\nNETCONF transport layer when it assigns the user to a set of\nNACM groups.  If this leaf has the value 'false', any group\nnames reported by the transport layer are ignored by the\nserver.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "enable-external-groups",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "groups": {
						 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_groups"
					},
					 "rule-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_config_rule-list"
						},
						 "description": "An ordered collection of access control rules."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-acm_config_nacm",
				 "description": "Parameters for NETCONF access control model.",
				 "xml": {
					 "name": "nacm",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_config_nacm_TOP": {
				 "type": "object",
				 "properties": {
					 "nacm": {
						 "$ref": "#/components/schemas/ietf-netconf-acm_config_nacm"
					}
				},
				 "title": "ietf-netconf-acm_config_nacm_TOP"
			},
			 "ietf-netconf-acm_nacm_groups_group": {
				 "properties": {
					 "name": {
						 "description": "Group name associated with this entry.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "?:\u0002",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "user-name": {
						 "type": "array",
						 "items": {
							 "minLength": 1,
							 "maxLength": 2147483647,
							 "default": "Some user-name",
							 "type": "string"
						},
						 "description": "Each entry identifies the username of\na member of the group associated with\nthis entry."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-acm_nacm_groups_group",
				 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols.",
				 "xml": {
					 "name": "group",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_groups_group_TOP": {
				 "type": "object",
				 "properties": {
					 "group": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_group"
						},
						 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols."
					}
				},
				 "title": "ietf-netconf-acm_nacm_groups_group_TOP"
			},
			 "ietf-netconf-acm_nacm_groups": {
				 "properties": {
					 "group": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups_group"
						},
						 "description": "One NACM group entry.  This list will only contain\nconfigured entries, not any entries learned from\nany transport protocols."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-acm_nacm_groups",
				 "description": "NETCONF access control groups.",
				 "xml": {
					 "name": "groups",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_groups_TOP": {
				 "type": "object",
				 "properties": {
					 "groups": {
						 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups"
					}
				},
				 "title": "ietf-netconf-acm_nacm_groups_TOP"
			},
			 "ietf-netconf-acm_nacm_rule-list_rule": {
				 "properties": {
					 "name": {
						 "description": "Arbitrary name assigned to the rule.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "module-name": {
						 "description": "Name of the module associated with this rule.\n\nThis leaf matches if it has the value '*' or if the\nobject being accessed is defined in the module with the\nspecified module name.",
						 "type": "string",
						 "default": "*",
						 "xml": {
							 "name": "module-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "rpc-name": {
						 "description": "This leaf matches if it has the value '*' or if\nits value equals the requested protocol operation\nname.",
						 "type": "string",
						 "xml": {
							 "name": "rpc-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "notification-name": {
						 "description": "This leaf matches if it has the value '*' or if its\nvalue equals the requested notification name.",
						 "type": "string",
						 "xml": {
							 "name": "notification-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "path": {
						 "description": "Data node instance-identifier associated with the\ndata node, action, or notification controlled by\nthis rule.\n\nConfiguration data or state data\ninstance-identifiers start with a top-level\ndata node.  A complete instance-identifier is\nrequired for this type of path value.\n\nThe special value '/' refers to all possible\ndatastore contents.",
						 "default": "Some path",
						 "type": "string",
						 "xml": {
							 "name": "path",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "access-operations": {
						 "description": "Access operations associated with this rule.\n\nThis leaf matches if it has the value '*' or if the\nbit corresponding to the requested operation is set.",
						 "type": "string",
						 "default": "*",
						 "xml": {
							 "name": "access-operations",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "action": {
						 "description": "The access control action associated with the\nrule.  If a rule has been determined to match a\nparticular request, then this object is used\nto determine whether to permit or deny the\nrequest.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "permit",
						 "type": "string",
						 "xml": {
							 "name": "action",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "comment": {
						 "description": "A textual description of the access rule.",
						 "default": "Some comment",
						 "type": "string",
						 "xml": {
							 "name": "comment",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					}
				},
				 "required": [
					"action"
				],
				 "type": "object",
				 "title": "ietf-netconf-acm_nacm_rule-list_rule",
				 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted.",
				 "xml": {
					 "name": "rule",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_rule-list_rule_TOP": {
				 "type": "object",
				 "properties": {
					 "rule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_rule"
						},
						 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted."
					}
				},
				 "title": "ietf-netconf-acm_nacm_rule-list_rule_TOP"
			},
			 "ietf-netconf-acm_nacm_rule-list": {
				 "properties": {
					 "name": {
						 "description": "Arbitrary name assigned to the rule-list.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "group": {
						 "type": "array",
						 "items": {
							 "type": "string"
						},
						 "description": "List of administrative groups that will be\nassigned the associated access rights\ndefined by the 'rule' list.\n\nThe string '*' indicates that all groups apply to the\nentry."
					},
					 "rule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list_rule"
						},
						 "description": "One access control rule.\n\nRules are processed in user-defined order until a match is\nfound.  A rule matches if 'module-name', 'rule-type', and\n'access-operations' match the request.  If a rule\nmatches, the 'action' leaf determines whether or not\naccess is granted."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-acm_nacm_rule-list",
				 "description": "An ordered collection of access control rules.",
				 "xml": {
					 "name": "rule-list",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_rule-list_TOP": {
				 "type": "object",
				 "properties": {
					 "rule-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list"
						},
						 "description": "An ordered collection of access control rules."
					}
				},
				 "title": "ietf-netconf-acm_nacm_rule-list_TOP"
			},
			 "ietf-netconf-acm_nacm": {
				 "properties": {
					 "enable-nacm": {
						 "description": "Enables or disables all NETCONF access control\nenforcement.  If 'true', then enforcement\nis enabled.  If 'false', then enforcement\nis disabled.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "enable-nacm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "read-default": {
						 "description": "Controls whether read access is granted if\nno appropriate rule is found for a\nparticular read request.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "permit",
						 "type": "string",
						 "xml": {
							 "name": "read-default",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "write-default": {
						 "description": "Controls whether create, update, or delete access\nis granted if no appropriate rule is found for a\nparticular write request.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "deny",
						 "type": "string",
						 "xml": {
							 "name": "write-default",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "exec-default": {
						 "description": "Controls whether exec access is granted if no appropriate\nrule is found for a particular protocol operation request.",
						 "enum": [
							"permit",
							"deny"
						],
						 "default": "permit",
						 "type": "string",
						 "xml": {
							 "name": "exec-default",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "enable-external-groups": {
						 "description": "Controls whether the server uses the groups reported by the\nNETCONF transport layer when it assigns the user to a set of\nNACM groups.  If this leaf has the value 'false', any group\nnames reported by the transport layer are ignored by the\nserver.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "enable-external-groups",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "denied-operations": {
						 "description": "Number of times since the server last restarted that a\nprotocol operation request was denied.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "denied-operations",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "denied-data-writes": {
						 "description": "Number of times since the server last restarted that a\nprotocol operation request to alter\na configuration datastore was denied.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "denied-data-writes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "denied-notifications": {
						 "description": "Number of times since the server last restarted that\na notification was dropped for a subscription because\naccess to the event type was denied.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "denied-notifications",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
						}
					},
					 "groups": {
						 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_groups"
					},
					 "rule-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-acm_nacm_rule-list"
						},
						 "description": "An ordered collection of access control rules."
					}
				},
				 "required": [
					"denied-operations",
					"denied-data-writes",
					"denied-notifications"
				],
				 "type": "object",
				 "title": "ietf-netconf-acm_nacm",
				 "description": "Parameters for NETCONF access control model.",
				 "xml": {
					 "name": "nacm",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
				}
			},
			 "ietf-netconf-acm_nacm_TOP": {
				 "type": "object",
				 "properties": {
					 "nacm": {
						 "$ref": "#/components/schemas/ietf-netconf-acm_nacm"
					}
				},
				 "title": "ietf-netconf-acm_nacm_TOP"
			},
			 "transport": {
				 "title": "transport",
				 "description": "Base identity for NETCONF transport types.",
				 "enum": [
					"transport",
					"netconf-ssh",
					"netconf-soap-over-beep",
					"netconf-tls",
					"netconf-beep",
					"netconf-soap-over-https"
				],
				 "type": "string"
			},
			 "netconf-ssh": {
				 "title": "netconf-ssh",
				 "description": "NETCONF over Secure Shell (SSH).",
				 "enum": [
					"netconf-ssh"
				],
				 "type": "string"
			},
			 "netconf-soap-over-beep": {
				 "title": "netconf-soap-over-beep",
				 "description": "NETCONF over Simple Object Access Protocol (SOAP) over\nBlocks Extensible Exchange Protocol (BEEP).",
				 "enum": [
					"netconf-soap-over-beep"
				],
				 "type": "string"
			},
			 "netconf-soap-over-https": {
				 "title": "netconf-soap-over-https",
				 "description": "NETCONF over Simple Object Access Protocol (SOAP)\nover Hypertext Transfer Protocol Secure (HTTPS).",
				 "enum": [
					"netconf-soap-over-https"
				],
				 "type": "string"
			},
			 "netconf-beep": {
				 "title": "netconf-beep",
				 "description": "NETCONF over Blocks Extensible Exchange Protocol (BEEP).",
				 "enum": [
					"netconf-beep"
				],
				 "type": "string"
			},
			 "netconf-tls": {
				 "title": "netconf-tls",
				 "description": "NETCONF over Transport Layer Security (TLS).",
				 "enum": [
					"netconf-tls"
				],
				 "type": "string"
			},
			 "schema-format": {
				 "title": "schema-format",
				 "description": "Base identity for data model schema languages.",
				 "enum": [
					"schema-format",
					"rnc",
					"yin",
					"rng",
					"yang",
					"xsd"
				],
				 "type": "string"
			},
			 "xsd": {
				 "title": "xsd",
				 "description": "W3C XML Schema Definition.",
				 "enum": [
					"xsd"
				],
				 "type": "string"
			},
			 "yang": {
				 "title": "yang",
				 "description": "The YANG data modeling language for NETCONF.",
				 "enum": [
					"yang"
				],
				 "type": "string"
			},
			 "yin": {
				 "title": "yin",
				 "description": "The YIN syntax for YANG.",
				 "enum": [
					"yin"
				],
				 "type": "string"
			},
			 "rng": {
				 "title": "rng",
				 "description": "Regular Language for XML Next Generation (RELAX NG).",
				 "enum": [
					"rng"
				],
				 "type": "string"
			},
			 "rnc": {
				 "title": "rnc",
				 "description": "Relax NG Compact Syntax",
				 "enum": [
					"rnc"
				],
				 "type": "string"
			},
			 "ietf-netconf-monitoring_netconf-state_capabilities": {
				 "properties": {
					 "capability": {
						 "type": "array",
						 "items": {
							 "default": "Some capability",
							 "type": "string"
						},
						 "description": "List of NETCONF capabilities supported by the server."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_capabilities",
				 "description": "Contains the list of NETCONF capabilities supported by the\nserver.",
				 "xml": {
					 "name": "capabilities",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_capabilities_TOP": {
				 "type": "object",
				 "properties": {
					 "capabilities": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_capabilities"
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_capabilities_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_global-lock": {
				 "properties": {
					 "locked-by-session": {
						 "description": "The session ID of the session that has locked\nthis resource.  Both a global lock and a partial\nlock MUST contain the NETCONF session-id.\n\nIf the lock is held by a session that is not managed\nby the NETCONF server (e.g., a CLI session), a session\nid of 0 (zero) is reported.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "locked-by-session",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "locked-time": {
						 "description": "The date and time of when the resource was\nlocked.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:8539-69-29T89:37:55+94:68",
						 "type": "string",
						 "xml": {
							 "name": "locked-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					}
				},
				 "required": [
					"locked-by-session",
					"locked-time"
				],
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_global-lock",
				 "description": "Present if the global lock is set.",
				 "xml": {
					 "name": "global-lock",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_global-lock_TOP": {
				 "type": "object",
				 "properties": {
					 "global-lock": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_global-lock"
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_global-lock_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_partial-lock": {
				 "properties": {
					 "lock-id": {
						 "description": "This is the lock id returned in the <partial-lock>\nresponse.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "lock-id",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "locked-by-session": {
						 "description": "The session ID of the session that has locked\nthis resource.  Both a global lock and a partial\nlock MUST contain the NETCONF session-id.\n\nIf the lock is held by a session that is not managed\nby the NETCONF server (e.g., a CLI session), a session\nid of 0 (zero) is reported.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "locked-by-session",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "locked-time": {
						 "description": "The date and time of when the resource was\nlocked.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:6359-61-94T73:09:05+41:85",
						 "type": "string",
						 "xml": {
							 "name": "locked-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "select": {
						 "type": "array",
						 "minItems": 1,
						 "items": {
							 "default": "Some select",
							 "type": "string"
						},
						 "description": "The xpath expression that was used to request\nthe lock.  The select expression indicates the\noriginal intended scope of the lock."
					},
					 "locked-node": {
						 "type": "array",
						 "items": {
							 "default": "/ncm:netconf-state",
							 "type": "string"
						},
						 "description": "The list of instance-identifiers (i.e., the\nlocked nodes).\n\nThe scope of the partial lock is defined by the list\nof locked nodes."
					}
				},
				 "required": [
					"locked-by-session",
					"locked-time"
				],
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_partial-lock",
				 "description": "List of partial locks.",
				 "xml": {
					 "name": "partial-lock",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_partial-lock_TOP": {
				 "type": "object",
				 "properties": {
					 "partial-lock": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_partial-lock"
						},
						 "description": "List of partial locks."
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_partial-lock_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks": {
				 "properties": {
					 "global-lock": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_global-lock"
					},
					 "partial-lock": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_partial-lock"
						},
						 "description": "List of partial locks."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks",
				 "description": "The NETCONF <lock> and <partial-lock> operations allow\na client to lock specific resources in a datastore.  The\nNETCONF server will prevent changes to the locked\nresources by all sessions except the one that acquired\nthe lock(s).\n\nMonitoring information is provided for each datastore\nentry including details such as the session that acquired\nthe lock, the type of lock (global or partial) and the\nlist of locked resources.  Multiple locks per datastore\nare supported.",
				 "xml": {
					 "name": "locks",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_TOP": {
				 "type": "object",
				 "properties": {
					 "locks": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_locks"
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_datastores_datastore_locks_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_datastores_datastore": {
				 "properties": {
					 "name": {
						 "description": "Name of the datastore associated with this list entry.",
						 "enum": [
							"running",
							"candidate",
							"startup"
						],
						 "default": "running",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "locks": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore_locks"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_datastores_datastore",
				 "description": "List of NETCONF configuration datastores supported by\nthe NETCONF server and related information.",
				 "xml": {
					 "name": "datastore",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_datastores_datastore_TOP": {
				 "type": "object",
				 "properties": {
					 "datastore": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore"
						},
						 "description": "List of NETCONF configuration datastores supported by\nthe NETCONF server and related information."
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_datastores_datastore_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_datastores": {
				 "properties": {
					 "datastore": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores_datastore"
						},
						 "description": "List of NETCONF configuration datastores supported by\nthe NETCONF server and related information."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_datastores",
				 "description": "Contains the list of NETCONF configuration datastores.",
				 "xml": {
					 "name": "datastores",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_datastores_TOP": {
				 "type": "object",
				 "properties": {
					 "datastores": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores"
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_datastores_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_schemas_schema": {
				 "properties": {
					 "identifier": {
						 "description": "Identifier to uniquely reference the schema.  The\nidentifier is used in the <get-schema> operation and may\nbe used for other purposes such as file retrieval.\n\nFor modeling languages that support or require a data\nmodel name (e.g., YANG module name) the identifier MUST\nmatch that name.  For YANG data models, the identifier is\nthe name of the module or submodule.  In other cases, an\nidentifier such as a filename MAY be used instead.",
						 "default": "Some identifier",
						 "type": "string",
						 "xml": {
							 "name": "identifier",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "version": {
						 "description": "Version of the schema supported.  Multiple versions MAY be\nsupported simultaneously by a NETCONF server.  Each\nversion MUST be reported individually in the schema list,\ni.e., with same identifier, possibly different location,\nbut different version.\n\nFor YANG data models, version is the value of the most\nrecent YANG 'revision' statement in the module or\nsubmodule, or the empty string if no 'revision' statement\nis present.",
						 "default": "Some version",
						 "type": "string",
						 "xml": {
							 "name": "version",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "format": {
						 "$ref": "#/components/schemas/schema-format",
						 "xml": {
							 "name": "format",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "namespace": {
						 "description": "The XML namespace defined by the data model.\n\nFor YANG data models, this is the module's namespace.\nIf the list entry describes a submodule, this field\ncontains the namespace of the module to which the\nsubmodule belongs.",
						 "default": "Some namespace",
						 "type": "string",
						 "xml": {
							 "name": "namespace",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "location": {
						 "type": "array",
						 "items": {
							 "type": "string"
						},
						 "description": "One or more locations from which the schema can be\nretrieved.  This list SHOULD contain at least one\nentry per schema.\n\nA schema entry may be located on a remote file system\n(e.g., reference to file system for ftp retrieval) or\nretrieved directly from a server supporting the\n<get-schema> operation (denoted by the value 'NETCONF')."
					}
				},
				 "required": [
					"namespace"
				],
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_schemas_schema",
				 "description": "List of data model schemas supported by the server.",
				 "xml": {
					 "name": "schema",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_schemas_schema_TOP": {
				 "type": "object",
				 "properties": {
					 "schema": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_schemas_schema"
						},
						 "description": "List of data model schemas supported by the server."
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_schemas_schema_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_schemas": {
				 "properties": {
					 "schema": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_schemas_schema"
						},
						 "description": "List of data model schemas supported by the server."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_schemas",
				 "description": "Contains the list of data model schemas supported by the\nserver.",
				 "xml": {
					 "name": "schemas",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_schemas_TOP": {
				 "type": "object",
				 "properties": {
					 "schemas": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_schemas"
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_schemas_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_sessions_session": {
				 "properties": {
					 "session-id": {
						 "description": "Unique identifier for the session.  This value is the\nNETCONF session identifier, as defined in RFC 4741.",
						 "format": "int64",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "session-id",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "transport": {
						 "$ref": "#/components/schemas/transport",
						 "xml": {
							 "name": "transport",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "username": {
						 "description": "The username is the client identity that was authenticated\nby the NETCONF transport protocol.  The algorithm used to\nderive the username is NETCONF transport protocol specific\nand in addition specific to the authentication mechanism\nused by the NETCONF transport protocol.",
						 "default": "Some username",
						 "type": "string",
						 "xml": {
							 "name": "username",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "source-host": {
						 "description": "Host identifier of the NETCONF client.  The value\nreturned is implementation specific (e.g., hostname,\nIPv4 address, IPv6 address)",
						 "type": "string",
						 "xml": {
							 "name": "source-host",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "login-time": {
						 "description": "Time at the server at which the session was established.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:1382-78-74T41:61:84.5Z",
						 "type": "string",
						 "xml": {
							 "name": "login-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "in-rpcs": {
						 "description": "Number of correct <rpc> messages received.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "in-rpcs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "in-bad-rpcs": {
						 "description": "Number of messages received when an <rpc> message was expected,\nthat were not correct <rpc> messages.  This includes XML parse\nerrors and errors on the rpc layer.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "in-bad-rpcs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "out-rpc-errors": {
						 "description": "Number of <rpc-reply> messages sent that contained an\n<rpc-error> element.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "out-rpc-errors",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "out-notifications": {
						 "description": "Number of <notification> messages sent.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "out-notifications",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					}
				},
				 "required": [
					"transport",
					"username",
					"login-time"
				],
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_sessions_session",
				 "description": "All NETCONF sessions managed by the NETCONF server\nMUST be reported in this list.",
				 "xml": {
					 "name": "session",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_sessions_session_TOP": {
				 "type": "object",
				 "properties": {
					 "session": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_sessions_session"
						},
						 "description": "All NETCONF sessions managed by the NETCONF server\nMUST be reported in this list."
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_sessions_session_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_sessions": {
				 "properties": {
					 "session": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_sessions_session"
						},
						 "description": "All NETCONF sessions managed by the NETCONF server\nMUST be reported in this list."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_sessions",
				 "description": "The sessions container includes session-specific data for\nNETCONF management sessions.  The session list MUST include\nall currently active NETCONF sessions.",
				 "xml": {
					 "name": "sessions",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_sessions_TOP": {
				 "type": "object",
				 "properties": {
					 "sessions": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_sessions"
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_sessions_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state_statistics": {
				 "properties": {
					 "netconf-start-time": {
						 "description": "Date and time at which the management subsystem was\nstarted.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:8972-07-23T86:96:77-68:77",
						 "type": "string",
						 "xml": {
							 "name": "netconf-start-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "in-bad-hellos": {
						 "description": "Number of sessions silently dropped because an\ninvalid <hello> message was received.  This includes <hello>\nmessages with a 'session-id' attribute, bad namespace, and\nbad capability declarations.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "in-bad-hellos",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "in-sessions": {
						 "description": "Number of sessions started.  This counter is incremented\nwhen a <hello> message with a <session-id> is sent.\n\n'in-sessions' - 'in-bad-hellos' =\n   'number of correctly started netconf sessions'",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "in-sessions",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "dropped-sessions": {
						 "description": "Number of sessions that were abnormally terminated, e.g.,\ndue to idle timeout or transport close.  This counter is not\nincremented when a session is properly closed by a\n<close-session> operation, or killed by a <kill-session>\noperation.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "dropped-sessions",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "in-rpcs": {
						 "description": "Number of correct <rpc> messages received.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "in-rpcs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "in-bad-rpcs": {
						 "description": "Number of messages received when an <rpc> message was expected,\nthat were not correct <rpc> messages.  This includes XML parse\nerrors and errors on the rpc layer.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "in-bad-rpcs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "out-rpc-errors": {
						 "description": "Number of <rpc-reply> messages sent that contained an\n<rpc-error> element.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "out-rpc-errors",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "out-notifications": {
						 "description": "Number of <notification> messages sent.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "out-notifications",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state_statistics",
				 "description": "Statistical data pertaining to the NETCONF server.",
				 "xml": {
					 "name": "statistics",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_statistics_TOP": {
				 "type": "object",
				 "properties": {
					 "statistics": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_statistics"
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_statistics_TOP"
			},
			 "ietf-netconf-monitoring_netconf-state": {
				 "properties": {
					 "capabilities": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_capabilities"
					},
					 "datastores": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_datastores"
					},
					 "schemas": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_schemas"
					},
					 "sessions": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_sessions"
					},
					 "statistics": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state_statistics"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-monitoring_netconf-state",
				 "description": "The netconf-state container is the root of the monitoring\ndata model.",
				 "xml": {
					 "name": "netconf-state",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
				}
			},
			 "ietf-netconf-monitoring_netconf-state_TOP": {
				 "type": "object",
				 "properties": {
					 "netconf-state": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_netconf-state"
					}
				},
				 "title": "ietf-netconf-monitoring_netconf-state_TOP"
			},
			 "ietf-netconf-monitoring_get-schema_input": {
				 "properties": {
					 "identifier": {
						 "description": "Identifier for the schema list entry.",
						 "default": "Some identifier",
						 "type": "string",
						 "xml": {
							 "name": "identifier",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "version": {
						 "description": "Version of the schema requested.  If this parameter is not\npresent, and more than one version of the schema exists on\nthe server, a 'data-not-unique' error is returned, as\ndescribed above.",
						 "default": "Some version",
						 "type": "string",
						 "xml": {
							 "name": "version",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					},
					 "format": {
						 "$ref": "#/components/schemas/schema-format",
						 "xml": {
							 "name": "format",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					}
				},
				 "required": [
					"identifier"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf-monitoring_get-schema_input"
			},
			 "ietf-netconf-monitoring_get-schema_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_get-schema_input"
					}
				},
				 "title": "ietf-netconf-monitoring_get-schema_input_TOP"
			},
			 "ietf-netconf-monitoring_get-schema_output": {
				 "properties": {
					 "data": {
						 "description": "Contains the schema content.",
						 "default": "<data> ... </data>",
						 "type": "string",
						 "xml": {
							 "name": "data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-netconf-monitoring_get-schema_output"
			},
			 "ietf-netconf-monitoring_get-schema_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-netconf-monitoring_get-schema_output"
					}
				},
				 "title": "ietf-netconf-monitoring_get-schema_output_TOP"
			},
			 "origin": {
				 "title": "origin",
				 "description": "Abstract base identity for the origin annotation.",
				 "enum": [
					"origin",
					"default",
					"system",
					"intended",
					"unknown",
					"learned",
					"dynamic"
				],
				 "type": "string"
			},
			 "ietf-netconf-nmda_get-data_input": {
				 "properties": {
					 "datastore": {
						 "$ref": "#/components/schemas/datastore",
						 "xml": {
							 "name": "datastore",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					},
					 "subtree-filter": {
						 "description": "This parameter identifies the portions of the\ntarget datastore to retrieve.",
						 "default": "<subtree-filter> ... </subtree-filter>",
						 "type": "string",
						 "xml": {
							 "name": "subtree-filter",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					},
					 "xpath-filter": {
						 "description": "This parameter contains an XPath expression identifying\nthe portions of the target datastore to retrieve.\n\nIf the expression returns a node-set, all nodes in the\nnode-set are selected by the filter.  Otherwise, if the\nexpression does not return a node-set, then the\n<get-data> operation fails.\n\nThe expression is evaluated in the following XPath\ncontext:\n\n  o  The set of namespace declarations are those in\n     scope on the 'xpath-filter' leaf element.\n\n  o  The set of variable bindings is empty.\n\n  o  The function library is the core function library,\n     and the XPath functions are defined in Section 10\n     of RFC 7950.\n\n  o  The context node is the root node of the target\n     datastore.",
						 "default": "Some xpath-filter",
						 "type": "string",
						 "xml": {
							 "name": "xpath-filter",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					},
					 "config-filter": {
						 "description": "Filter for nodes with the given value for their 'config'\nproperty.  When this leaf is set to 'true', only 'config\ntrue' nodes are selected, and when set to 'false', only\n'config false' nodes are selected.  If this leaf is not\npresent, no nodes are filtered.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "config-filter",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					},
					 "origin-filter": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/origin"
						},
						 "description": "Filter based on the 'origin' annotation.  A\nconfiguration node matches the filter if its 'origin'\nannotation is derived from or equal to any of the given\nfilter values."
					},
					 "negated-origin-filter": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/origin"
						},
						 "description": "Filter based on the 'origin' annotation.  A\nconfiguration node matches the filter if its 'origin'\nannotation is neither derived from nor equal to any of\nthe given filter values."
					},
					 "max-depth": {
						 "description": "For each node selected by the filters, this parameter\nselects how many conceptual subtree levels should be\nreturned in the reply.  If the depth is 1, the reply\nincludes just the selected nodes but no children.  If the\ndepth is 'unbounded', all descendant nodes are included.",
						 "type": "string",
						 "default": "unbounded",
						 "xml": {
							 "name": "max-depth",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					},
					 "with-origin": {
						 "description": "If this parameter is present, the server will return\nthe 'origin' annotation for the nodes that have one.",
						 "type": "object",
						 "xml": {
							 "name": "with-origin",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					},
					 "with-defaults": {
						 "description": "The explicit defaults processing mode requested.",
						 "enum": [
							"report-all",
							"report-all-tagged",
							"trim",
							"explicit"
						],
						 "default": "report-all",
						 "type": "string",
						 "xml": {
							 "name": "with-defaults",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					}
				},
				 "required": [
					"datastore"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf-nmda_get-data_input"
			},
			 "ietf-netconf-nmda_get-data_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf-nmda_get-data_input"
					}
				},
				 "title": "ietf-netconf-nmda_get-data_input_TOP"
			},
			 "ietf-netconf-nmda_get-data_output": {
				 "properties": {
					 "data": {
						 "description": "Copy of the source datastore subset that matched\nthe filter criteria (if any).  An empty data\ncontainer indicates that the request did not\nproduce any results.",
						 "default": "<data> ... </data>",
						 "type": "string",
						 "xml": {
							 "name": "data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-netconf-nmda_get-data_output"
			},
			 "ietf-netconf-nmda_get-data_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-netconf-nmda_get-data_output"
					}
				},
				 "title": "ietf-netconf-nmda_get-data_output_TOP"
			},
			 "ietf-netconf-nmda_edit-data_input": {
				 "properties": {
					 "datastore": {
						 "$ref": "#/components/schemas/datastore",
						 "xml": {
							 "name": "datastore",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					},
					 "default-operation": {
						 "description": "The default operation to use.",
						 "enum": [
							"merge",
							"replace",
							"none"
						],
						 "default": "merge",
						 "type": "string",
						 "xml": {
							 "name": "default-operation",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					},
					 "config": {
						 "description": "Inline config content.",
						 "default": "<config> ... </config>",
						 "type": "string",
						 "xml": {
							 "name": "config",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					},
					 "url": {
						 "description": "URL-based config content.",
						 "default": "Some url",
						 "type": "string",
						 "xml": {
							 "name": "url",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-nmda"
						}
					}
				},
				 "required": [
					"datastore"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf-nmda_edit-data_input"
			},
			 "ietf-netconf-nmda_edit-data_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf-nmda_edit-data_input"
					}
				},
				 "title": "ietf-netconf-nmda_edit-data_input_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives_post": {
				 "type": "object",
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives_post",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives": {
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"idle-time",
					"max-probes",
					"probe-interval"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters_post": {
				 "type": "object",
				 "properties": {
					 "local-address": {
						 "description": "The local IP address to listen on for incoming\nTCP client connections.  INADDR_ANY (0.0.0.0) or\nINADDR6_ANY (0:0:0:0:0:0:0:0 a.k.a. ::) MUST be\nused when the server is to listen on all IPv4 or\nIPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The NETCONF server will listen on the\nIANA-assigned well-known port value\nfor 'netconf-ssh' (830) if no value\nis specified.",
						 "format": "int32",
						 "default": 830,
						 "type": "integer",
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters_post",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters": {
				 "properties": {
					 "local-address": {
						 "description": "The local IP address to listen on for incoming\nTCP client connections.  INADDR_ANY (0.0.0.0) or\nINADDR6_ANY (0:0:0:0:0:0:0:0 a.k.a. ::) MUST be\nused when the server is to listen on all IPv4 or\nIPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The NETCONF server will listen on the\nIANA-assigned well-known port value\nfor 'netconf-ssh' (830) if no value\nis specified.",
						 "format": "int32",
						 "default": 830,
						 "type": "integer",
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_config_keepalives"
					}
				},
				 "required": [
					"local-address"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_post": {
				 "type": "object",
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_post",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_post": {
				 "type": "object",
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_post",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_post": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition"
					},
					 "keystore-reference": {
						 "description": "A reference to an asymmetric key that exists in\nthe keystore.  The intent is to reference just the\nasymmetric key, not any certificates that may also\nbe associated with the asymmetric key.",
						 "default": "Some keystore-reference",
						 "type": "string",
						 "xml": {
							 "name": "keystore-reference",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_post",
				 "description": "A locally-defined or referenced asymmetric key pair\nto be used for the SSH server's host key.",
				 "xml": {
					 "name": "public-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition"
					},
					 "keystore-reference": {
						 "description": "A reference to an asymmetric key that exists in\nthe keystore.  The intent is to reference just the\nasymmetric key, not any certificates that may also\nbe associated with the asymmetric key.",
						 "default": "Some keystore-reference",
						 "type": "string",
						 "xml": {
							 "name": "keystore-reference",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key",
				 "description": "A locally-defined or referenced asymmetric key pair\nto be used for the SSH server's host key.",
				 "xml": {
					 "name": "public-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_TOP": {
				 "type": "object",
				 "properties": {
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_post": {
				 "type": "object",
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_post",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_post": {
				 "type": "object",
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_post",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_post": {
				 "type": "object",
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_post",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference": {
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_post": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_post",
				 "description": "A locally-defined or referenced end-entity\ncertificate to be used for the SSH server's\nhost key.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate",
				 "description": "A locally-defined or referenced end-entity\ncertificate to be used for the SSH server's\nhost key.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_TOP": {
				 "type": "object",
				 "properties": {
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_post": {
				 "type": "object",
				 "properties": {
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key"
					},
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_post",
				 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this host-key",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key"
					},
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key",
				 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity_post": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity_post",
				 "description": "The list of host-keys the SSH server will present when\nestablishing a SSH connection.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity": {
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity",
				 "description": "The list of host-keys the SSH server will present when\nestablishing a SSH connection.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity_TOP": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_post": {
				 "type": "object",
				 "properties": {
					 "publickey": {
						 "description": "Indicates that the 'publickey' method is supported.\nNote that RFC 6187 X.509v3 Certificates for SSH uses\nthe 'publickey' method name.",
						 "type": "object",
						 "xml": {
							 "name": "publickey",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "passsword": {
						 "description": "Indicates that the 'password' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "passsword",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hostbased": {
						 "description": "Indicates that the 'hostbased' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "hostbased",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "none": {
						 "description": "Indicates that the 'none' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "none",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "other": {
						 "type": "array",
						 "items": {
							 "default": "Some other",
							 "type": "string"
						},
						 "description": "Indicates a supported method name not defined by\nRFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_post",
				 "description": "Indicates which authentication methods the server\nsupports.",
				 "xml": {
					 "name": "supported-authentication-methods",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods": {
				 "properties": {
					 "publickey": {
						 "description": "Indicates that the 'publickey' method is supported.\nNote that RFC 6187 X.509v3 Certificates for SSH uses\nthe 'publickey' method name.",
						 "type": "object",
						 "xml": {
							 "name": "publickey",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "passsword": {
						 "description": "Indicates that the 'password' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "passsword",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hostbased": {
						 "description": "Indicates that the 'hostbased' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "hostbased",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "none": {
						 "description": "Indicates that the 'none' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "none",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "other": {
						 "type": "array",
						 "items": {
							 "default": "Some other",
							 "type": "string"
						},
						 "description": "Indicates a supported method name not defined by\nRFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods",
				 "description": "Indicates which authentication methods the server\nsupports.",
				 "xml": {
					 "name": "supported-authentication-methods",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_TOP": {
				 "type": "object",
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_post": {
				 "type": "object",
				 "properties": {
					 "algorithm": {
						 "description": "The public key algorithm name for this SSH key.\n\nValid values are the values in the IANA 'Secure\nShell (SSH) Protocol Parameters' registry,\nPublic Key Algorithm Names.",
						 "default": "Some algorithm",
						 "type": "string",
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "key-data": {
						 "description": "The binary public key data for this SSH key, as\nspecified by RFC 4253, Section 6.6, i.e.:\n\n  string    certificate or public key format\n            identifier\n  byte[n]   key/certificate data.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key-data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_post",
				 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253.",
				 "xml": {
					 "name": "authorized-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the SSH key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "algorithm": {
						 "description": "The public key algorithm name for this SSH key.\n\nValid values are the values in the IANA 'Secure\nShell (SSH) Protocol Parameters' registry,\nPublic Key Algorithm Names.",
						 "default": "Some algorithm",
						 "type": "string",
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "key-data": {
						 "description": "The binary public key data for this SSH key, as\nspecified by RFC 4253, Section 6.6, i.e.:\n\n  string    certificate or public key format\n            identifier\n  byte[n]   key/certificate data.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key-data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"key-data"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key",
				 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253.",
				 "xml": {
					 "name": "authorized-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_TOP": {
				 "type": "object",
				 "properties": {
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_post": {
				 "type": "object",
				 "properties": {
					 "password": {
						 "description": "The password for this entry.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:$0$",
						 "type": "string",
						 "xml": {
							 "name": "password",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_post",
				 "description": "The list of local users configured on this device.",
				 "xml": {
					 "name": "user",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user": {
				 "properties": {
					 "name": {
						 "description": "The user name string identifying this entry.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "password": {
						 "description": "The password for this entry.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:$0$",
						 "type": "string",
						 "xml": {
							 "name": "password",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user",
				 "description": "The list of local users configured on this device.",
				 "xml": {
					 "name": "user",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_TOP": {
				 "type": "object",
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_post": {
				 "type": "object",
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_post",
				 "description": "A list of locally configured users.",
				 "xml": {
					 "name": "users",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users": {
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users",
				 "description": "A list of locally configured users.",
				 "xml": {
					 "name": "users",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_TOP": {
				 "type": "object",
				 "properties": {
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication_post": {
				 "type": "object",
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods"
					},
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users"
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that client credentials are configured\nelsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication_post",
				 "description": "Specifies if SSH client authentication is required or\noptional, and specifies if the SSH client authentication\ncredentials are configured locally or externally.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication": {
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods"
					},
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_config_users"
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that client credentials are configured\nelsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication",
				 "description": "Specifies if SSH client authentication is required or\noptional, and specifies if the SSH client authentication\ncredentials are configured locally or externally.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication_TOP"
			},
			 "public-key-alg-base": {
				 "title": "public-key-alg-base",
				 "description": "Base identity used to identify public key algorithms.",
				 "enum": [
					"public-key-alg-base",
					"ecdsa-sha2-nistp384",
					"x509v3-rsa2048-sha256",
					"x509v3-ecdsa-sha2-nistp384",
					"x509v3-ssh-rsa",
					"x509v3-ecdsa-sha2-nistp256",
					"ssh-dss",
					"ecdsa-sha2-nistp521",
					"ssh-rsa",
					"ecdsa-sha2-nistp256",
					"x509v3-ecdsa-sha2-nistp521"
				],
				 "type": "string"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_post": {
				 "type": "object",
				 "properties": {
					 "host-key-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/public-key-alg-base"
						},
						 "description": "Acceptable host key algorithms in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable host key algorithms are implementation-\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_post",
				 "description": "Parameters regarding host key.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key": {
				 "properties": {
					 "host-key-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/public-key-alg-base"
						},
						 "description": "Acceptable host key algorithms in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable host key algorithms are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key",
				 "description": "Parameters regarding host key.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_TOP"
			},
			 "key-exchange-alg-base": {
				 "title": "key-exchange-alg-base",
				 "description": "Base identity used to identify key exchange algorithms.",
				 "enum": [
					"key-exchange-alg-base",
					"diffie-hellman-group-exchange-sha256",
					"diffie-hellman-group14-sha1",
					"ecdh-sha2-nistp384",
					"ecdh-sha2-nistp521",
					"ecdh-sha2-nistp256",
					"diffie-hellman-group-exchange-sha1"
				],
				 "type": "string"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_post": {
				 "type": "object",
				 "properties": {
					 "key-exchange-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/key-exchange-alg-base"
						},
						 "description": "Acceptable key exchange algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable key exchange algorithms are implementation\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_post",
				 "description": "Parameters regarding key exchange.",
				 "xml": {
					 "name": "key-exchange",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange": {
				 "properties": {
					 "key-exchange-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/key-exchange-alg-base"
						},
						 "description": "Acceptable key exchange algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable key exchange algorithms are implementation\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange",
				 "description": "Parameters regarding key exchange.",
				 "xml": {
					 "name": "key-exchange",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_TOP": {
				 "type": "object",
				 "properties": {
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_TOP"
			},
			 "encryption-alg-base": {
				 "title": "encryption-alg-base",
				 "description": "Base identity used to identify encryption algorithms.",
				 "enum": [
					"encryption-alg-base",
					"aes192-cbc",
					"aes256-ctr",
					"aes128-cbc",
					"triple-des-cbc",
					"aes256-cbc",
					"aes128-ctr",
					"aes192-ctr"
				],
				 "type": "string"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_post": {
				 "type": "object",
				 "properties": {
					 "encryption-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/encryption-alg-base"
						},
						 "description": "Acceptable encryption algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable encryption algorithms are implementation\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_post",
				 "description": "Parameters regarding encryption.",
				 "xml": {
					 "name": "encryption",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption": {
				 "properties": {
					 "encryption-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/encryption-alg-base"
						},
						 "description": "Acceptable encryption algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable encryption algorithms are implementation\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption",
				 "description": "Parameters regarding encryption.",
				 "xml": {
					 "name": "encryption",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_TOP": {
				 "type": "object",
				 "properties": {
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_TOP"
			},
			 "mac-alg-base": {
				 "title": "mac-alg-base",
				 "description": "Base identity used to identify message authentication\ncode (MAC) algorithms.",
				 "enum": [
					"mac-alg-base",
					"hmac-sha1",
					"hmac-sha2-512",
					"hmac-sha2-256"
				],
				 "type": "string"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_post": {
				 "type": "object",
				 "properties": {
					 "mac-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/mac-alg-base"
						},
						 "description": "Acceptable MAC algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable MAC algorithms are implementation-\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_post",
				 "description": "Parameters regarding message authentication code (MAC).",
				 "xml": {
					 "name": "mac",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac": {
				 "properties": {
					 "mac-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/mac-alg-base"
						},
						 "description": "Acceptable MAC algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable MAC algorithms are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac",
				 "description": "Parameters regarding message authentication code (MAC).",
				 "xml": {
					 "name": "mac",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_TOP": {
				 "type": "object",
				 "properties": {
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params_post": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key"
					},
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange"
					},
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption"
					},
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params_post",
				 "description": "Configurable parameters of the SSH transport layer.",
				 "xml": {
					 "name": "transport-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params": {
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key"
					},
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange"
					},
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption"
					},
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_config_mac"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params",
				 "description": "Configurable parameters of the SSH transport layer.",
				 "xml": {
					 "name": "transport-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params_TOP": {
				 "type": "object",
				 "properties": {
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives_post": {
				 "type": "object",
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which\nif no data has been received from the SSL client,\na SSL-level message will be sent to test the\naliveness of the SSL client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe SSL client before assuming the SSL client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives_post",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the SSL client.  An unresponsive SSL\nclient is dropped after approximately max-wait *\nmax-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives": {
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which\nif no data has been received from the SSL client,\na SSL-level message will be sent to test the\naliveness of the SSL client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe SSL client before assuming the SSL client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the SSL client.  An unresponsive SSL\nclient is dropped after approximately max-wait *\nmax-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters_post": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication"
					},
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters_post",
				 "description": "A wrapper around the SSH server parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "ssh-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters": {
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_client-authentication"
					},
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_transport-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_config_keepalives"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters",
				 "description": "A wrapper around the SSH server parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "ssh-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_config_ssh_post": {
				 "type": "object",
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters"
					},
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_config_ssh_post",
				 "description": "SSH-specific listening configuration for inbound\nconnections.",
				 "xml": {
					 "name": "ssh",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_config_ssh_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_config_ssh_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_config_ssh": {
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_tcp-server-parameters"
					},
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_config_ssh-server-parameters"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_config_ssh",
				 "description": "SSH-specific listening configuration for inbound\nconnections.",
				 "xml": {
					 "name": "ssh",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_config_ssh_TOP": {
				 "type": "object",
				 "properties": {
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_config_ssh"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_config_ssh_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives_post": {
				 "type": "object",
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives_post",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives": {
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"idle-time",
					"max-probes",
					"probe-interval"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters_post": {
				 "type": "object",
				 "properties": {
					 "local-address": {
						 "description": "The local IP address to listen on for incoming\nTCP client connections.  INADDR_ANY (0.0.0.0) or\nINADDR6_ANY (0:0:0:0:0:0:0:0 a.k.a. ::) MUST be\nused when the server is to listen on all IPv4 or\nIPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The NETCONF server will listen on the\nIANA-assigned well-known port value\nfor 'netconf-tls' (6513) if no value\nis specified.",
						 "format": "int32",
						 "default": 6513,
						 "type": "integer",
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters_post",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters": {
				 "properties": {
					 "local-address": {
						 "description": "The local IP address to listen on for incoming\nTCP client connections.  INADDR_ANY (0.0.0.0) or\nINADDR6_ANY (0:0:0:0:0:0:0:0 a.k.a. ::) MUST be\nused when the server is to listen on all IPv4 or\nIPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The NETCONF server will listen on the\nIANA-assigned well-known port value\nfor 'netconf-tls' (6513) if no value\nis specified.",
						 "format": "int32",
						 "default": 6513,
						 "type": "integer",
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_config_keepalives"
					}
				},
				 "required": [
					"local-address"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_post": {
				 "type": "object",
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_post",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_post": {
				 "type": "object",
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_post",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_post": {
				 "type": "object",
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_post",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference": {
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity_post": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity_post",
				 "description": "A locally-defined or referenced end-entity certificate,\nincluding any configured intermediate certificates, the\nTLS server will present when establishing a TLS connection\nin its Certificate message, as defined in Section 7.4.2\nin RFC 5246.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity",
				 "description": "A locally-defined or referenced end-entity certificate,\nincluding any configured intermediate certificates, the\nTLS server will present when establishing a TLS connection\nin its Certificate message, as defined in Section 7.4.2\nin RFC 5246.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity_TOP": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity_TOP"
			},
			 "cert-to-name": {
				 "title": "cert-to-name",
				 "description": "Base identity for algorithms to derive a name from a\ncertificate.",
				 "enum": [
					"cert-to-name",
					"specified",
					"san-ip-address",
					"san-any",
					"san-rfc822-name",
					"common-name",
					"san-dns-name"
				],
				 "type": "string"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_post": {
				 "type": "object",
				 "properties": {
					 "fingerprint": {
						 "description": "Specifies a value with which the fingerprint of the\nfull certificate presented by the peer is compared.  If\nthe fingerprint of the full certificate presented by the\npeer does not match the fingerprint configured, then the\nentry is skipped, and the search for a match continues.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:AC:3e",
						 "type": "string",
						 "xml": {
							 "name": "fingerprint",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "map-type": {
						 "$ref": "#/components/schemas/cert-to-name",
						 "xml": {
							 "name": "map-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "name": {
						 "description": "Directly specifies the NETCONF username when the\nmap-type is 'specified'.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_post",
				 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation.",
				 "xml": {
					 "name": "cert-to-name",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name": {
				 "properties": {
					 "id": {
						 "description": "The id specifies the order in which the entries in the\ncert-to-name list are searched.  Entries with lower\nnumbers are searched first.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "id",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "fingerprint": {
						 "description": "Specifies a value with which the fingerprint of the\nfull certificate presented by the peer is compared.  If\nthe fingerprint of the full certificate presented by the\npeer does not match the fingerprint configured, then the\nentry is skipped, and the search for a match continues.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:AC:3e",
						 "type": "string",
						 "xml": {
							 "name": "fingerprint",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "map-type": {
						 "$ref": "#/components/schemas/cert-to-name",
						 "xml": {
							 "name": "map-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "name": {
						 "description": "Directly specifies the NETCONF username when the\nmap-type is 'specified'.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"fingerprint",
					"map-type",
					"name"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name",
				 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation.",
				 "xml": {
					 "name": "cert-to-name",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_TOP": {
				 "type": "object",
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_post": {
				 "type": "object",
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_post",
				 "description": "The cert-maps container is used by a TLS-\nbased NETCONF server to map the NETCONF\nclient's presented X.509 certificate to\na NETCONF username.  If no matching and\nvalid cert-to-name list entry can be found,\nthen the NETCONF server MUST close the\nconnection, and MUST NOT accept NETCONF\nmessages over it.",
				 "xml": {
					 "name": "cert-maps",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps": {
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps",
				 "description": "The cert-maps container is used by a TLS-\nbased NETCONF server to map the NETCONF\nclient's presented X.509 certificate to\na NETCONF username.  If no matching and\nvalid cert-to-name list entry can be found,\nthen the NETCONF server MUST close the\nconnection, and MUST NOT accept NETCONF\nmessages over it.",
				 "xml": {
					 "name": "cert-maps",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_TOP": {
				 "type": "object",
				 "properties": {
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication_post": {
				 "type": "object",
				 "properties": {
					 "required": {
						 "description": "Indicates that TLS-level client authentication is\nrequired.",
						 "type": "object",
						 "xml": {
							 "name": "required",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "optional": {
						 "description": "Indicates that TLS-level client authentication is\noptional.",
						 "type": "object",
						 "xml": {
							 "name": "optional",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ca-certs": {
						 "description": "A reference to a list of certificate authority (CA)\ncertificates used by the TLS server to authenticate\nTLS client certificates.  A client certificate is\nauthenticated if it has a valid chain of trust to\na configured CA certificate.",
						 "default": "Some ca-certs",
						 "type": "string",
						 "xml": {
							 "name": "ca-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-certs": {
						 "description": "A reference to a list of client certificates\nused by the TLS server to authenticate TLS\nclient certificates.  A clients certificate\nis authenticated if it is an exact match to\na configured client certificate.",
						 "default": "Some client-certs",
						 "type": "string",
						 "xml": {
							 "name": "client-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that certificates needed to authenticate\nclients are configured elsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication_post",
				 "description": "NETCONF/TLS servers MUST validate client\ncertificates.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication": {
				 "properties": {
					 "required": {
						 "description": "Indicates that TLS-level client authentication is\nrequired.",
						 "type": "object",
						 "xml": {
							 "name": "required",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "optional": {
						 "description": "Indicates that TLS-level client authentication is\noptional.",
						 "type": "object",
						 "xml": {
							 "name": "optional",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ca-certs": {
						 "description": "A reference to a list of certificate authority (CA)\ncertificates used by the TLS server to authenticate\nTLS client certificates.  A client certificate is\nauthenticated if it has a valid chain of trust to\na configured CA certificate.",
						 "default": "Some ca-certs",
						 "type": "string",
						 "xml": {
							 "name": "ca-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-certs": {
						 "description": "A reference to a list of client certificates\nused by the TLS server to authenticate TLS\nclient certificates.  A clients certificate\nis authenticated if it is an exact match to\na configured client certificate.",
						 "default": "Some client-certs",
						 "type": "string",
						 "xml": {
							 "name": "client-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that certificates needed to authenticate\nclients are configured elsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication",
				 "description": "NETCONF/TLS servers MUST validate client\ncertificates.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication_TOP"
			},
			 "tls-version-base": {
				 "title": "tls-version-base",
				 "description": "Base identity used to identify TLS protocol versions.",
				 "enum": [
					"tls-version-base",
					"tls-1.0",
					"tls-1.1",
					"tls-1.2"
				],
				 "type": "string"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_post": {
				 "type": "object",
				 "properties": {
					 "tls-version": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/tls-version-base"
						},
						 "description": "Acceptable TLS protocol versions.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable TLS protocol versions are implementation-\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_post",
				 "description": "Parameters regarding TLS versions.",
				 "xml": {
					 "name": "tls-versions",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions": {
				 "properties": {
					 "tls-version": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/tls-version-base"
						},
						 "description": "Acceptable TLS protocol versions.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable TLS protocol versions are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions",
				 "description": "Parameters regarding TLS versions.",
				 "xml": {
					 "name": "tls-versions",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_TOP": {
				 "type": "object",
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_TOP"
			},
			 "cipher-suite-base": {
				 "title": "cipher-suite-base",
				 "description": "Base identity used to identify TLS cipher suites.",
				 "enum": [
					"cipher-suite-base",
					"ecdhe-rsa-with-3des-ede-cbc-sha",
					"dhe-rsa-with-aes-128-cbc-sha256",
					"ecdhe-rsa-with-aes-128-cbc-sha",
					"rsa-with-aes-256-cbc-sha",
					"dhe-rsa-with-aes-256-cbc-sha256",
					"ecdhe-rsa-with-aes-256-gcm-sha384",
					"rsa-with-aes-128-cbc-sha256",
					"ecdhe-rsa-with-aes-128-gcm-sha256",
					"rsa-with-aes-256-cbc-sha256",
					"ecdhe-rsa-with-aes-256-cbc-sha",
					"ecdhe-rsa-with-aes-128-cbc-sha256",
					"rsa-with-aes-128-cbc-sha",
					"ecdhe-ecdsa-with-aes-256-gcm-sha384",
					"dhe-rsa-with-aes-256-cbc-sha",
					"dhe-rsa-with-aes-128-cbc-sha",
					"ecdhe-ecdsa-with-aes-256-cbc-sha384",
					"ecdhe-rsa-with-aes-256-cbc-sha384",
					"ecdhe-ecdsa-with-aes-128-cbc-sha256",
					"ecdhe-ecdsa-with-aes-128-gcm-sha256",
					"rsa-with-3des-ede-cbc-sha"
				],
				 "type": "string"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_post": {
				 "type": "object",
				 "properties": {
					 "cipher-suite": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/cipher-suite-base"
						},
						 "description": "Acceptable cipher suites in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable cipher suites are implementation-\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_post",
				 "description": "Parameters regarding cipher suites.",
				 "xml": {
					 "name": "cipher-suites",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites": {
				 "properties": {
					 "cipher-suite": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/cipher-suite-base"
						},
						 "description": "Acceptable cipher suites in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable cipher suites are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites",
				 "description": "Parameters regarding cipher suites.",
				 "xml": {
					 "name": "cipher-suites",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_TOP": {
				 "type": "object",
				 "properties": {
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params_post": {
				 "type": "object",
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions"
					},
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params_post",
				 "description": "Configurable parameters for the TLS hello message.",
				 "xml": {
					 "name": "hello-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params": {
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions"
					},
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params",
				 "description": "Configurable parameters for the TLS hello message.",
				 "xml": {
					 "name": "hello-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params_TOP": {
				 "type": "object",
				 "properties": {
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives_post": {
				 "type": "object",
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which if\nno data has been received from the TLS client, a\nTLS-level message will be sent to test the\naliveness of the TLS client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe TLS client before assuming the TLS client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives_post",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the TLS client.  An unresponsive\nTLS client is dropped after approximately max-wait\n* max-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives": {
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which if\nno data has been received from the TLS client, a\nTLS-level message will be sent to test the\naliveness of the TLS client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe TLS client before assuming the TLS client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the TLS client.  An unresponsive\nTLS client is dropped after approximately max-wait\n* max-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters_post": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication"
					},
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters_post",
				 "description": "A wrapper around the TLS server parameters to\navoid name collisions.",
				 "xml": {
					 "name": "tls-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters": {
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_client-authentication"
					},
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_hello-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_config_keepalives"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters",
				 "description": "A wrapper around the TLS server parameters to\navoid name collisions.",
				 "xml": {
					 "name": "tls-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_config_tls_post": {
				 "type": "object",
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters"
					},
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_config_tls_post",
				 "description": "TLS-specific listening configuration for inbound\nconnections.",
				 "xml": {
					 "name": "tls",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_config_tls_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_config_tls_post"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_config_tls": {
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tcp-server-parameters"
					},
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_config_tls-server-parameters"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_config_tls",
				 "description": "TLS-specific listening configuration for inbound\nconnections.",
				 "xml": {
					 "name": "tls",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_config_tls_TOP": {
				 "type": "object",
				 "properties": {
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_config_tls"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_config_tls_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_config_endpoint_post": {
				 "type": "object",
				 "properties": {
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_config_ssh"
					},
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_config_tls"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_config_endpoint_post",
				 "description": "List of endpoints to listen for NETCONF connections.",
				 "xml": {
					 "name": "endpoint",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_config_endpoint_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_config_endpoint_post"
			},
			 "ietf-netconf-server_netconf-server_listen_config_endpoint": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the NETCONF listen endpoint.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_config_ssh"
					},
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_config_tls"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_config_endpoint",
				 "description": "List of endpoints to listen for NETCONF connections.",
				 "xml": {
					 "name": "endpoint",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_config_endpoint_TOP": {
				 "type": "object",
				 "properties": {
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_config_endpoint"
						},
						 "description": "List of endpoints to listen for NETCONF connections."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_config_endpoint_TOP"
			},
			 "ietf-netconf-server_netconf-server_config_listen_post": {
				 "type": "object",
				 "properties": {
					 "idle-timeout": {
						 "description": "Specifies the maximum number of seconds that a NETCONF\nsession may remain idle. A NETCONF session will be\ndropped if it is idle for an interval longer than this\nnumber of seconds.  If set to zero, then the server\nwill never drop a session because it is idle.  Sessions\nthat have a notification subscription active are never\ndropped.",
						 "format": "int32",
						 "default": 3600,
						 "type": "integer",
						 "xml": {
							 "name": "idle-timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_config_endpoint"
						},
						 "description": "List of endpoints to listen for NETCONF connections."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_config_listen_post",
				 "description": "Configures listen behavior",
				 "xml": {
					 "name": "listen",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_config_listen_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_listen_post"
			},
			 "ietf-netconf-server_netconf-server_config_listen": {
				 "properties": {
					 "idle-timeout": {
						 "description": "Specifies the maximum number of seconds that a NETCONF\nsession may remain idle. A NETCONF session will be\ndropped if it is idle for an interval longer than this\nnumber of seconds.  If set to zero, then the server\nwill never drop a session because it is idle.  Sessions\nthat have a notification subscription active are never\ndropped.",
						 "format": "int32",
						 "default": 3600,
						 "type": "integer",
						 "xml": {
							 "name": "idle-timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_config_endpoint"
						},
						 "description": "List of endpoints to listen for NETCONF connections."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_config_listen",
				 "description": "Configures listen behavior",
				 "xml": {
					 "name": "listen",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_config_listen_TOP": {
				 "type": "object",
				 "properties": {
					 "listen": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_listen"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_config_listen_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives_post": {
				 "type": "object",
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives_post",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives": {
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"idle-time",
					"max-probes",
					"probe-interval"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters_post": {
				 "type": "object",
				 "properties": {
					 "remote-address": {
						 "description": "The IP address or hostname of the remote peer to\nestablish a connection with.  If a domain name is\nconfigured, then the DNS resolution should happen on\neach connection attempt.  If the the DNS resolution\nresults in multiple IP addresses, the IP addresses\nare tried according to local preference order until\na connection has been established or until all IP\naddresses have failed.",
						 "type": "string",
						 "xml": {
							 "name": "remote-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "remote-port": {
						 "description": "The NETCONF server will attempt to connect\nto the IANA-assigned well-known port for\n'netconf-ch-tls' (4334) if no value is\nspecified.",
						 "format": "int32",
						 "default": 4334,
						 "type": "integer",
						 "xml": {
							 "name": "remote-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-address": {
						 "description": "The local IP address/interface (VRF?) to bind to for when\nconnecting to the remote peer.  INADDR_ANY ('0.0.0.0') or\nINADDR6_ANY ('0:0:0:0:0:0:0:0' a.k.a. '::') MAY be used to\nexplicitly indicate the implicit default, that the server\ncan bind to any IPv4 or IPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The local IP port number to bind to for when connecting\nto the remote peer.  The port number '0', which is the\ndefault value, indicates that any available local port\nnumber may be used.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters_post",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-client-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters": {
				 "properties": {
					 "remote-address": {
						 "description": "The IP address or hostname of the remote peer to\nestablish a connection with.  If a domain name is\nconfigured, then the DNS resolution should happen on\neach connection attempt.  If the the DNS resolution\nresults in multiple IP addresses, the IP addresses\nare tried according to local preference order until\na connection has been established or until all IP\naddresses have failed.",
						 "type": "string",
						 "xml": {
							 "name": "remote-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "remote-port": {
						 "description": "The NETCONF server will attempt to connect\nto the IANA-assigned well-known port for\n'netconf-ch-tls' (4334) if no value is\nspecified.",
						 "format": "int32",
						 "default": 4334,
						 "type": "integer",
						 "xml": {
							 "name": "remote-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-address": {
						 "description": "The local IP address/interface (VRF?) to bind to for when\nconnecting to the remote peer.  INADDR_ANY ('0.0.0.0') or\nINADDR6_ANY ('0:0:0:0:0:0:0:0' a.k.a. '::') MAY be used to\nexplicitly indicate the implicit default, that the server\ncan bind to any IPv4 or IPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The local IP port number to bind to for when connecting\nto the remote peer.  The port number '0', which is the\ndefault value, indicates that any available local port\nnumber may be used.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_config_keepalives"
					}
				},
				 "required": [
					"remote-address"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-client-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_post": {
				 "type": "object",
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_post",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_post": {
				 "type": "object",
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_post",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_post": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition"
					},
					 "keystore-reference": {
						 "description": "A reference to an asymmetric key that exists in\nthe keystore.  The intent is to reference just the\nasymmetric key, not any certificates that may also\nbe associated with the asymmetric key.",
						 "default": "Some keystore-reference",
						 "type": "string",
						 "xml": {
							 "name": "keystore-reference",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_post",
				 "description": "A locally-defined or referenced asymmetric key pair\nto be used for the SSH server's host key.",
				 "xml": {
					 "name": "public-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_config_local-definition"
					},
					 "keystore-reference": {
						 "description": "A reference to an asymmetric key that exists in\nthe keystore.  The intent is to reference just the\nasymmetric key, not any certificates that may also\nbe associated with the asymmetric key.",
						 "default": "Some keystore-reference",
						 "type": "string",
						 "xml": {
							 "name": "keystore-reference",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key",
				 "description": "A locally-defined or referenced asymmetric key pair\nto be used for the SSH server's host key.",
				 "xml": {
					 "name": "public-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_TOP": {
				 "type": "object",
				 "properties": {
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_post": {
				 "type": "object",
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_post",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_post": {
				 "type": "object",
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_post",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_post": {
				 "type": "object",
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_post",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference": {
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_post": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_post",
				 "description": "A locally-defined or referenced end-entity\ncertificate to be used for the SSH server's\nhost key.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_config_keystore-reference"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate",
				 "description": "A locally-defined or referenced end-entity\ncertificate to be used for the SSH server's\nhost key.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_TOP": {
				 "type": "object",
				 "properties": {
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_post": {
				 "type": "object",
				 "properties": {
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key"
					},
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_post",
				 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this host-key",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_public-key"
					},
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_config_certificate"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key",
				 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity_post": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity_post",
				 "description": "The list of host-keys the SSH server will present when\nestablishing a SSH connection.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity": {
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_config_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity",
				 "description": "The list of host-keys the SSH server will present when\nestablishing a SSH connection.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity_TOP": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_post": {
				 "type": "object",
				 "properties": {
					 "publickey": {
						 "description": "Indicates that the 'publickey' method is supported.\nNote that RFC 6187 X.509v3 Certificates for SSH uses\nthe 'publickey' method name.",
						 "type": "object",
						 "xml": {
							 "name": "publickey",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "passsword": {
						 "description": "Indicates that the 'password' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "passsword",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hostbased": {
						 "description": "Indicates that the 'hostbased' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "hostbased",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "none": {
						 "description": "Indicates that the 'none' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "none",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "other": {
						 "type": "array",
						 "items": {
							 "default": "Some other",
							 "type": "string"
						},
						 "description": "Indicates a supported method name not defined by\nRFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_post",
				 "description": "Indicates which authentication methods the server\nsupports.",
				 "xml": {
					 "name": "supported-authentication-methods",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods": {
				 "properties": {
					 "publickey": {
						 "description": "Indicates that the 'publickey' method is supported.\nNote that RFC 6187 X.509v3 Certificates for SSH uses\nthe 'publickey' method name.",
						 "type": "object",
						 "xml": {
							 "name": "publickey",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "passsword": {
						 "description": "Indicates that the 'password' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "passsword",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hostbased": {
						 "description": "Indicates that the 'hostbased' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "hostbased",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "none": {
						 "description": "Indicates that the 'none' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "none",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "other": {
						 "type": "array",
						 "items": {
							 "default": "Some other",
							 "type": "string"
						},
						 "description": "Indicates a supported method name not defined by\nRFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods",
				 "description": "Indicates which authentication methods the server\nsupports.",
				 "xml": {
					 "name": "supported-authentication-methods",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_TOP": {
				 "type": "object",
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_post": {
				 "type": "object",
				 "properties": {
					 "algorithm": {
						 "description": "The public key algorithm name for this SSH key.\n\nValid values are the values in the IANA 'Secure\nShell (SSH) Protocol Parameters' registry,\nPublic Key Algorithm Names.",
						 "default": "Some algorithm",
						 "type": "string",
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "key-data": {
						 "description": "The binary public key data for this SSH key, as\nspecified by RFC 4253, Section 6.6, i.e.:\n\n  string    certificate or public key format\n            identifier\n  byte[n]   key/certificate data.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key-data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_post",
				 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253.",
				 "xml": {
					 "name": "authorized-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the SSH key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "algorithm": {
						 "description": "The public key algorithm name for this SSH key.\n\nValid values are the values in the IANA 'Secure\nShell (SSH) Protocol Parameters' registry,\nPublic Key Algorithm Names.",
						 "default": "Some algorithm",
						 "type": "string",
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "key-data": {
						 "description": "The binary public key data for this SSH key, as\nspecified by RFC 4253, Section 6.6, i.e.:\n\n  string    certificate or public key format\n            identifier\n  byte[n]   key/certificate data.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key-data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"key-data"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key",
				 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253.",
				 "xml": {
					 "name": "authorized-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_TOP": {
				 "type": "object",
				 "properties": {
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_post": {
				 "type": "object",
				 "properties": {
					 "password": {
						 "description": "The password for this entry.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "$6$r$VjnGvsV2Z2Zjl8VK3/w.bOc9.C2UQzZ/4cWuubnC/Oc1/k5RSaDiouoeaPklQMsM/nkt.AJ5K8P4UXjhG8.t4w",
						 "type": "string",
						 "xml": {
							 "name": "password",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_post",
				 "description": "The list of local users configured on this device.",
				 "xml": {
					 "name": "user",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user": {
				 "properties": {
					 "name": {
						 "description": "The user name string identifying this entry.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "password": {
						 "description": "The password for this entry.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "$6$r$VjnGvsV2Z2Zjl8VK3/w.bOc9.C2UQzZ/4cWuubnC/Oc1/k5RSaDiouoeaPklQMsM/nkt.AJ5K8P4UXjhG8.t4w",
						 "type": "string",
						 "xml": {
							 "name": "password",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_config_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user",
				 "description": "The list of local users configured on this device.",
				 "xml": {
					 "name": "user",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_TOP": {
				 "type": "object",
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_post": {
				 "type": "object",
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_post",
				 "description": "A list of locally configured users.",
				 "xml": {
					 "name": "users",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users": {
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_config_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users",
				 "description": "A list of locally configured users.",
				 "xml": {
					 "name": "users",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_TOP": {
				 "type": "object",
				 "properties": {
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication_post": {
				 "type": "object",
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods"
					},
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users"
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that client credentials are configured\nelsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication_post",
				 "description": "Specifies if SSH client authentication is required or\noptional, and specifies if the SSH client authentication\ncredentials are configured locally or externally.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication": {
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_supported-authentication-methods"
					},
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_config_users"
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that client credentials are configured\nelsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication",
				 "description": "Specifies if SSH client authentication is required or\noptional, and specifies if the SSH client authentication\ncredentials are configured locally or externally.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_post": {
				 "type": "object",
				 "properties": {
					 "host-key-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/public-key-alg-base"
						},
						 "description": "Acceptable host key algorithms in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable host key algorithms are implementation-\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_post",
				 "description": "Parameters regarding host key.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key": {
				 "properties": {
					 "host-key-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/public-key-alg-base"
						},
						 "description": "Acceptable host key algorithms in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable host key algorithms are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key",
				 "description": "Parameters regarding host key.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_post": {
				 "type": "object",
				 "properties": {
					 "key-exchange-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/key-exchange-alg-base"
						},
						 "description": "Acceptable key exchange algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable key exchange algorithms are implementation\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_post",
				 "description": "Parameters regarding key exchange.",
				 "xml": {
					 "name": "key-exchange",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange": {
				 "properties": {
					 "key-exchange-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/key-exchange-alg-base"
						},
						 "description": "Acceptable key exchange algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable key exchange algorithms are implementation\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange",
				 "description": "Parameters regarding key exchange.",
				 "xml": {
					 "name": "key-exchange",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_TOP": {
				 "type": "object",
				 "properties": {
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_post": {
				 "type": "object",
				 "properties": {
					 "encryption-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/encryption-alg-base"
						},
						 "description": "Acceptable encryption algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable encryption algorithms are implementation\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_post",
				 "description": "Parameters regarding encryption.",
				 "xml": {
					 "name": "encryption",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption": {
				 "properties": {
					 "encryption-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/encryption-alg-base"
						},
						 "description": "Acceptable encryption algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable encryption algorithms are implementation\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption",
				 "description": "Parameters regarding encryption.",
				 "xml": {
					 "name": "encryption",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_TOP": {
				 "type": "object",
				 "properties": {
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_post": {
				 "type": "object",
				 "properties": {
					 "mac-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/mac-alg-base"
						},
						 "description": "Acceptable MAC algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable MAC algorithms are implementation-\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_post",
				 "description": "Parameters regarding message authentication code (MAC).",
				 "xml": {
					 "name": "mac",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac": {
				 "properties": {
					 "mac-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/mac-alg-base"
						},
						 "description": "Acceptable MAC algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable MAC algorithms are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac",
				 "description": "Parameters regarding message authentication code (MAC).",
				 "xml": {
					 "name": "mac",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_TOP": {
				 "type": "object",
				 "properties": {
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params_post": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key"
					},
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange"
					},
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption"
					},
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params_post",
				 "description": "Configurable parameters of the SSH transport layer.",
				 "xml": {
					 "name": "transport-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params": {
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_host-key"
					},
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_key-exchange"
					},
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_encryption"
					},
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_config_mac"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params",
				 "description": "Configurable parameters of the SSH transport layer.",
				 "xml": {
					 "name": "transport-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params_TOP": {
				 "type": "object",
				 "properties": {
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives_post": {
				 "type": "object",
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which\nif no data has been received from the SSL client,\na SSL-level message will be sent to test the\naliveness of the SSL client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe SSL client before assuming the SSL client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives_post",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the SSL client.  An unresponsive SSL\nclient is dropped after approximately max-wait *\nmax-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives": {
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which\nif no data has been received from the SSL client,\na SSL-level message will be sent to test the\naliveness of the SSL client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe SSL client before assuming the SSL client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the SSL client.  An unresponsive SSL\nclient is dropped after approximately max-wait *\nmax-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters_post": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication"
					},
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters_post",
				 "description": "A wrapper around the SSH server parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "ssh-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters": {
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_client-authentication"
					},
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_transport-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_config_keepalives"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters",
				 "description": "A wrapper around the SSH server parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "ssh-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh_post": {
				 "type": "object",
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters"
					},
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh_post",
				 "description": "Specifies SSH-specific call-home transport\nconfiguration.",
				 "xml": {
					 "name": "ssh",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh": {
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_tcp-client-parameters"
					},
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_config_ssh-server-parameters"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh",
				 "description": "Specifies SSH-specific call-home transport\nconfiguration.",
				 "xml": {
					 "name": "ssh",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh_TOP": {
				 "type": "object",
				 "properties": {
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives_post": {
				 "type": "object",
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives_post",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives": {
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"idle-time",
					"max-probes",
					"probe-interval"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters_post": {
				 "type": "object",
				 "properties": {
					 "remote-address": {
						 "description": "The IP address or hostname of the remote peer to\nestablish a connection with.  If a domain name is\nconfigured, then the DNS resolution should happen on\neach connection attempt.  If the the DNS resolution\nresults in multiple IP addresses, the IP addresses\nare tried according to local preference order until\na connection has been established or until all IP\naddresses have failed.",
						 "type": "string",
						 "xml": {
							 "name": "remote-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "remote-port": {
						 "description": "The NETCONF server will attempt to connect\nto the IANA-assigned well-known port for\n'netconf-ch-tls' (4335) if no value is\nspecified.",
						 "format": "int32",
						 "default": 4335,
						 "type": "integer",
						 "xml": {
							 "name": "remote-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-address": {
						 "description": "The local IP address/interface (VRF?) to bind to for when\nconnecting to the remote peer.  INADDR_ANY ('0.0.0.0') or\nINADDR6_ANY ('0:0:0:0:0:0:0:0' a.k.a. '::') MAY be used to\nexplicitly indicate the implicit default, that the server\ncan bind to any IPv4 or IPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The local IP port number to bind to for when connecting\nto the remote peer.  The port number '0', which is the\ndefault value, indicates that any available local port\nnumber may be used.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters_post",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-client-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters": {
				 "properties": {
					 "remote-address": {
						 "description": "The IP address or hostname of the remote peer to\nestablish a connection with.  If a domain name is\nconfigured, then the DNS resolution should happen on\neach connection attempt.  If the the DNS resolution\nresults in multiple IP addresses, the IP addresses\nare tried according to local preference order until\na connection has been established or until all IP\naddresses have failed.",
						 "type": "string",
						 "xml": {
							 "name": "remote-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "remote-port": {
						 "description": "The NETCONF server will attempt to connect\nto the IANA-assigned well-known port for\n'netconf-ch-tls' (4335) if no value is\nspecified.",
						 "format": "int32",
						 "default": 4335,
						 "type": "integer",
						 "xml": {
							 "name": "remote-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-address": {
						 "description": "The local IP address/interface (VRF?) to bind to for when\nconnecting to the remote peer.  INADDR_ANY ('0.0.0.0') or\nINADDR6_ANY ('0:0:0:0:0:0:0:0' a.k.a. '::') MAY be used to\nexplicitly indicate the implicit default, that the server\ncan bind to any IPv4 or IPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The local IP port number to bind to for when connecting\nto the remote peer.  The port number '0', which is the\ndefault value, indicates that any available local port\nnumber may be used.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_config_keepalives"
					}
				},
				 "required": [
					"remote-address"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-client-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_post": {
				 "type": "object",
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_post",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_post": {
				 "type": "object",
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_post",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_config_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_post": {
				 "type": "object",
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_post",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference": {
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity_post": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity_post",
				 "description": "A locally-defined or referenced end-entity certificate,\nincluding any configured intermediate certificates, the\nTLS server will present when establishing a TLS connection\nin its Certificate message, as defined in Section 7.4.2\nin RFC 5246.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_config_keystore-reference"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity",
				 "description": "A locally-defined or referenced end-entity certificate,\nincluding any configured intermediate certificates, the\nTLS server will present when establishing a TLS connection\nin its Certificate message, as defined in Section 7.4.2\nin RFC 5246.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity_TOP": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_post": {
				 "type": "object",
				 "properties": {
					 "fingerprint": {
						 "description": "Specifies a value with which the fingerprint of the\nfull certificate presented by the peer is compared.  If\nthe fingerprint of the full certificate presented by the\npeer does not match the fingerprint configured, then the\nentry is skipped, and the search for a match continues.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:FD",
						 "type": "string",
						 "xml": {
							 "name": "fingerprint",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "map-type": {
						 "$ref": "#/components/schemas/cert-to-name",
						 "xml": {
							 "name": "map-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "name": {
						 "description": "Directly specifies the NETCONF username when the\nmap-type is 'specified'.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_post",
				 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation.",
				 "xml": {
					 "name": "cert-to-name",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name": {
				 "properties": {
					 "id": {
						 "description": "The id specifies the order in which the entries in the\ncert-to-name list are searched.  Entries with lower\nnumbers are searched first.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "id",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "fingerprint": {
						 "description": "Specifies a value with which the fingerprint of the\nfull certificate presented by the peer is compared.  If\nthe fingerprint of the full certificate presented by the\npeer does not match the fingerprint configured, then the\nentry is skipped, and the search for a match continues.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:FD",
						 "type": "string",
						 "xml": {
							 "name": "fingerprint",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "map-type": {
						 "$ref": "#/components/schemas/cert-to-name",
						 "xml": {
							 "name": "map-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "name": {
						 "description": "Directly specifies the NETCONF username when the\nmap-type is 'specified'.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"fingerprint",
					"map-type",
					"name"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name",
				 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation.",
				 "xml": {
					 "name": "cert-to-name",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_TOP": {
				 "type": "object",
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_post": {
				 "type": "object",
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_post",
				 "description": "The cert-maps container is used by a\nTLS-based NETCONF server to map the\nNETCONF client's presented X.509\ncertificate to a NETCONF username.  If\nno matching and valid cert-to-name list\nentry can be found, then the NETCONF\nserver MUST close the connection, and\nMUST NOT accept NETCONF messages over\nit.",
				 "xml": {
					 "name": "cert-maps",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps": {
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_config_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps",
				 "description": "The cert-maps container is used by a\nTLS-based NETCONF server to map the\nNETCONF client's presented X.509\ncertificate to a NETCONF username.  If\nno matching and valid cert-to-name list\nentry can be found, then the NETCONF\nserver MUST close the connection, and\nMUST NOT accept NETCONF messages over\nit.",
				 "xml": {
					 "name": "cert-maps",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_TOP": {
				 "type": "object",
				 "properties": {
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication_post": {
				 "type": "object",
				 "properties": {
					 "required": {
						 "description": "Indicates that TLS-level client authentication is\nrequired.",
						 "type": "object",
						 "xml": {
							 "name": "required",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "optional": {
						 "description": "Indicates that TLS-level client authentication is\noptional.",
						 "type": "object",
						 "xml": {
							 "name": "optional",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ca-certs": {
						 "description": "A reference to a list of certificate authority (CA)\ncertificates used by the TLS server to authenticate\nTLS client certificates.  A client certificate is\nauthenticated if it has a valid chain of trust to\na configured CA certificate.",
						 "default": "Some ca-certs",
						 "type": "string",
						 "xml": {
							 "name": "ca-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-certs": {
						 "description": "A reference to a list of client certificates\nused by the TLS server to authenticate TLS\nclient certificates.  A clients certificate\nis authenticated if it is an exact match to\na configured client certificate.",
						 "default": "Some client-certs",
						 "type": "string",
						 "xml": {
							 "name": "client-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that certificates needed to authenticate\nclients are configured elsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication_post",
				 "description": "NETCONF/TLS servers MUST validate client\ncertificates.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication": {
				 "properties": {
					 "required": {
						 "description": "Indicates that TLS-level client authentication is\nrequired.",
						 "type": "object",
						 "xml": {
							 "name": "required",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "optional": {
						 "description": "Indicates that TLS-level client authentication is\noptional.",
						 "type": "object",
						 "xml": {
							 "name": "optional",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ca-certs": {
						 "description": "A reference to a list of certificate authority (CA)\ncertificates used by the TLS server to authenticate\nTLS client certificates.  A client certificate is\nauthenticated if it has a valid chain of trust to\na configured CA certificate.",
						 "default": "Some ca-certs",
						 "type": "string",
						 "xml": {
							 "name": "ca-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-certs": {
						 "description": "A reference to a list of client certificates\nused by the TLS server to authenticate TLS\nclient certificates.  A clients certificate\nis authenticated if it is an exact match to\na configured client certificate.",
						 "default": "Some client-certs",
						 "type": "string",
						 "xml": {
							 "name": "client-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that certificates needed to authenticate\nclients are configured elsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_config_cert-maps"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication",
				 "description": "NETCONF/TLS servers MUST validate client\ncertificates.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_post": {
				 "type": "object",
				 "properties": {
					 "tls-version": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/tls-version-base"
						},
						 "description": "Acceptable TLS protocol versions.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable TLS protocol versions are implementation-\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_post",
				 "description": "Parameters regarding TLS versions.",
				 "xml": {
					 "name": "tls-versions",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions": {
				 "properties": {
					 "tls-version": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/tls-version-base"
						},
						 "description": "Acceptable TLS protocol versions.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable TLS protocol versions are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions",
				 "description": "Parameters regarding TLS versions.",
				 "xml": {
					 "name": "tls-versions",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_TOP": {
				 "type": "object",
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_post": {
				 "type": "object",
				 "properties": {
					 "cipher-suite": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/cipher-suite-base"
						},
						 "description": "Acceptable cipher suites in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable cipher suites are implementation-\ndefined."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_post",
				 "description": "Parameters regarding cipher suites.",
				 "xml": {
					 "name": "cipher-suites",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites": {
				 "properties": {
					 "cipher-suite": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/cipher-suite-base"
						},
						 "description": "Acceptable cipher suites in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable cipher suites are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites",
				 "description": "Parameters regarding cipher suites.",
				 "xml": {
					 "name": "cipher-suites",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_TOP": {
				 "type": "object",
				 "properties": {
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params_post": {
				 "type": "object",
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions"
					},
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params_post",
				 "description": "Configurable parameters for the TLS hello message.",
				 "xml": {
					 "name": "hello-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params": {
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_tls-versions"
					},
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_config_cipher-suites"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params",
				 "description": "Configurable parameters for the TLS hello message.",
				 "xml": {
					 "name": "hello-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params_TOP": {
				 "type": "object",
				 "properties": {
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives_post": {
				 "type": "object",
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which if\nno data has been received from the TLS client, a\nTLS-level message will be sent to test the\naliveness of the TLS client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe TLS client before assuming the TLS client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives_post",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the TLS client.  An unresponsive\nTLS client is dropped after approximately max-wait\n* max-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives": {
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which if\nno data has been received from the TLS client, a\nTLS-level message will be sent to test the\naliveness of the TLS client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe TLS client before assuming the TLS client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the TLS client.  An unresponsive\nTLS client is dropped after approximately max-wait\n* max-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters_post": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication"
					},
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters_post",
				 "description": "A wrapper around the TLS server parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tls-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters": {
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_client-authentication"
					},
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_hello-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_config_keepalives"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters",
				 "description": "A wrapper around the TLS server parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tls-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls_post": {
				 "type": "object",
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters"
					},
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls_post",
				 "description": "Specifies TLS-specific call-home transport\nconfiguration.",
				 "xml": {
					 "name": "tls",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls": {
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tcp-client-parameters"
					},
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_config_tls-server-parameters"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls",
				 "description": "Specifies TLS-specific call-home transport\nconfiguration.",
				 "xml": {
					 "name": "tls",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls_TOP": {
				 "type": "object",
				 "properties": {
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint_post": {
				 "type": "object",
				 "properties": {
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh"
					},
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint_post",
				 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability.",
				 "xml": {
					 "name": "endpoint",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this endpoint.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_ssh"
					},
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_config_tls"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint",
				 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability.",
				 "xml": {
					 "name": "endpoint",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint_TOP": {
				 "type": "object",
				 "properties": {
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint"
						},
						 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints_post": {
				 "type": "object",
				 "properties": {
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint"
						},
						 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints_post",
				 "description": "Container for the list of endpoints.",
				 "xml": {
					 "name": "endpoints",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints": {
				 "properties": {
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_config_endpoint"
						},
						 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints",
				 "description": "Container for the list of endpoints.",
				 "xml": {
					 "name": "endpoints",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints_TOP": {
				 "type": "object",
				 "properties": {
					 "endpoints": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent_post": {
				 "type": "object",
				 "properties": {
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent_post",
				 "description": "Maintain a persistent connection to the NETCONF\nclient. If the connection goes down, immediately\nstart trying to reconnect to the NETCONF client,\nusing the reconnection strategy.\n\nThis connection type minimizes any NETCONF client\nto NETCONF server data-transfer delay, albeit at\nthe expense of holding resources longer.",
				 "xml": {
					 "name": "persistent",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent": {
				 "properties": {
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent",
				 "description": "Maintain a persistent connection to the NETCONF\nclient. If the connection goes down, immediately\nstart trying to reconnect to the NETCONF client,\nusing the reconnection strategy.\n\nThis connection type minimizes any NETCONF client\nto NETCONF server data-transfer delay, albeit at\nthe expense of holding resources longer.",
				 "xml": {
					 "name": "persistent",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent_TOP": {
				 "type": "object",
				 "properties": {
					 "persistent": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic_post": {
				 "type": "object",
				 "properties": {
					 "period": {
						 "description": "Duration of time between periodic connections.",
						 "format": "int32",
						 "default": 60,
						 "type": "integer",
						 "xml": {
							 "name": "period",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "anchor-time": {
						 "description": "Designates a timestamp before or after which a\nseries of periodic connections are determined.\nThe periodic connections occur at a whole\nmultiple interval from the anchor time.  For\nexample, for an anchor time is 15 minutes past\nmidnight and a period interval of 24 hours, then\na periodic connection will occur 15 minutes past\nmidnight everyday.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:9650-77-22T73:09+38:67",
						 "type": "string",
						 "xml": {
							 "name": "anchor-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "idle-timeout": {
						 "description": "Specifies the maximum number of seconds that\na NETCONF session may remain idle. A NETCONF\nsession will be dropped if it is idle for an\ninterval longer than this number of seconds.\nIf set to zero, then the server will never\ndrop a session because it is idle.",
						 "format": "int32",
						 "default": 120,
						 "type": "integer",
						 "xml": {
							 "name": "idle-timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic_post",
				 "description": "Periodically connect to the NETCONF client.\n\nThis connection type increases resource\nutilization, albeit with increased delay in\nNETCONF client to NETCONF client interactions.\n\nThe NETCONF client SHOULD gracefully close the\nconnection using <close-session> upon completing\nplanned activities.  If the NETCONF session is\nnot closed gracefully, the NETCONF server MUST\nimmediately attempt to reestablish the connection.\n\nIn the case that the previous connection is still\nactive (i.e., the NETCONF client has not closed\nit yet), establishing a new connection is NOT\nRECOMMENDED.",
				 "xml": {
					 "name": "periodic",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic": {
				 "properties": {
					 "period": {
						 "description": "Duration of time between periodic connections.",
						 "format": "int32",
						 "default": 60,
						 "type": "integer",
						 "xml": {
							 "name": "period",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "anchor-time": {
						 "description": "Designates a timestamp before or after which a\nseries of periodic connections are determined.\nThe periodic connections occur at a whole\nmultiple interval from the anchor time.  For\nexample, for an anchor time is 15 minutes past\nmidnight and a period interval of 24 hours, then\na periodic connection will occur 15 minutes past\nmidnight everyday.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:9650-77-22T73:09+38:67",
						 "type": "string",
						 "xml": {
							 "name": "anchor-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "idle-timeout": {
						 "description": "Specifies the maximum number of seconds that\na NETCONF session may remain idle. A NETCONF\nsession will be dropped if it is idle for an\ninterval longer than this number of seconds.\nIf set to zero, then the server will never\ndrop a session because it is idle.",
						 "format": "int32",
						 "default": 120,
						 "type": "integer",
						 "xml": {
							 "name": "idle-timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic",
				 "description": "Periodically connect to the NETCONF client.\n\nThis connection type increases resource\nutilization, albeit with increased delay in\nNETCONF client to NETCONF client interactions.\n\nThe NETCONF client SHOULD gracefully close the\nconnection using <close-session> upon completing\nplanned activities.  If the NETCONF session is\nnot closed gracefully, the NETCONF server MUST\nimmediately attempt to reestablish the connection.\n\nIn the case that the previous connection is still\nactive (i.e., the NETCONF client has not closed\nit yet), establishing a new connection is NOT\nRECOMMENDED.",
				 "xml": {
					 "name": "periodic",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic_TOP": {
				 "type": "object",
				 "properties": {
					 "periodic": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type_post": {
				 "type": "object",
				 "properties": {
					 "persistent": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent"
					},
					 "periodic": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type_post",
				 "description": "Indicates the NETCONF server's preference for how the\nNETCONF connection is maintained.",
				 "xml": {
					 "name": "connection-type",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type": {
				 "properties": {
					 "persistent": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_persistent"
					},
					 "periodic": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_config_periodic"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type",
				 "description": "Indicates the NETCONF server's preference for how the\nNETCONF connection is maintained.",
				 "xml": {
					 "name": "connection-type",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type_TOP": {
				 "type": "object",
				 "properties": {
					 "connection-type": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy_post": {
				 "type": "object",
				 "properties": {
					 "start-with": {
						 "description": "Specifies which of the NETCONF client's endpoints\nthe NETCONF server should start with when trying\nto connect to the NETCONF client.",
						 "enum": [
							"first-listed",
							"last-connected",
							"random-selection"
						],
						 "default": "first-listed",
						 "type": "string",
						 "xml": {
							 "name": "start-with",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Specifies the number times the NETCONF server tries\nto connect to a specific endpoint before moving on\nto the next endpoint in the list (round robin).",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy_post",
				 "description": "The reconnection strategy directs how a NETCONF server\nreconnects to a NETCONF client, after discovering its\nconnection to the client has dropped, even if due to a\nreboot.  The NETCONF server starts with the specified\nendpoint and tries to connect to it max-attempts times\nbefore trying the next endpoint in the list (round\nrobin).",
				 "xml": {
					 "name": "reconnect-strategy",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy": {
				 "properties": {
					 "start-with": {
						 "description": "Specifies which of the NETCONF client's endpoints\nthe NETCONF server should start with when trying\nto connect to the NETCONF client.",
						 "enum": [
							"first-listed",
							"last-connected",
							"random-selection"
						],
						 "default": "first-listed",
						 "type": "string",
						 "xml": {
							 "name": "start-with",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Specifies the number times the NETCONF server tries\nto connect to a specific endpoint before moving on\nto the next endpoint in the list (round robin).",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy",
				 "description": "The reconnection strategy directs how a NETCONF server\nreconnects to a NETCONF client, after discovering its\nconnection to the client has dropped, even if due to a\nreboot.  The NETCONF server starts with the specified\nendpoint and tries to connect to it max-attempts times\nbefore trying the next endpoint in the list (round\nrobin).",
				 "xml": {
					 "name": "reconnect-strategy",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy_TOP": {
				 "type": "object",
				 "properties": {
					 "reconnect-strategy": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_config_netconf-client_post": {
				 "type": "object",
				 "properties": {
					 "endpoints": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints"
					},
					 "connection-type": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type"
					},
					 "reconnect-strategy": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_config_netconf-client_post",
				 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel.",
				 "xml": {
					 "name": "netconf-client",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_config_netconf-client_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_config_netconf-client_post"
			},
			 "ietf-netconf-server_netconf-server_call-home_config_netconf-client": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "endpoints": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_endpoints"
					},
					 "connection-type": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_connection-type"
					},
					 "reconnect-strategy": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_config_reconnect-strategy"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_config_netconf-client",
				 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel.",
				 "xml": {
					 "name": "netconf-client",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_config_netconf-client_TOP": {
				 "type": "object",
				 "properties": {
					 "netconf-client": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_config_netconf-client"
						},
						 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_config_netconf-client_TOP"
			},
			 "ietf-netconf-server_netconf-server_config_call-home_post": {
				 "type": "object",
				 "properties": {
					 "netconf-client": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_config_netconf-client"
						},
						 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_config_call-home_post",
				 "description": "Configures call home behavior.",
				 "xml": {
					 "name": "call-home",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_config_call-home_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_call-home_post"
			},
			 "ietf-netconf-server_netconf-server_config_call-home": {
				 "properties": {
					 "netconf-client": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_config_netconf-client"
						},
						 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_config_call-home",
				 "description": "Configures call home behavior.",
				 "xml": {
					 "name": "call-home",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_config_call-home_TOP": {
				 "type": "object",
				 "properties": {
					 "call-home": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_call-home"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_config_call-home_TOP"
			},
			 "ietf-netconf-server_config_netconf-server_post": {
				 "type": "object",
				 "properties": {
					 "listen": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_listen"
					},
					 "call-home": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_call-home"
					}
				},
				 "title": "ietf-netconf-server_config_netconf-server_post",
				 "description": "Top-level container for NETCONF server configuration.",
				 "xml": {
					 "name": "netconf-server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_config_netconf-server_post_xml": {
				 "$ref": "#/components/schemas/ietf-netconf-server_config_netconf-server_post"
			},
			 "ietf-netconf-server_config_netconf-server": {
				 "properties": {
					 "listen": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_listen"
					},
					 "call-home": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_config_call-home"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_config_netconf-server",
				 "description": "Top-level container for NETCONF server configuration.",
				 "xml": {
					 "name": "netconf-server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_config_netconf-server_TOP": {
				 "type": "object",
				 "properties": {
					 "netconf-server": {
						 "$ref": "#/components/schemas/ietf-netconf-server_config_netconf-server"
					}
				},
				 "title": "ietf-netconf-server_config_netconf-server_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_keepalives": {
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"idle-time",
					"max-probes",
					"probe-interval"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters": {
				 "properties": {
					 "local-address": {
						 "description": "The local IP address to listen on for incoming\nTCP client connections.  INADDR_ANY (0.0.0.0) or\nINADDR6_ANY (0:0:0:0:0:0:0:0 a.k.a. ::) MUST be\nused when the server is to listen on all IPv4 or\nIPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The NETCONF server will listen on the\nIANA-assigned well-known port value\nfor 'netconf-ssh' (830) if no value\nis specified.",
						 "format": "int32",
						 "default": 830,
						 "type": "integer",
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_keepalives"
					}
				},
				 "required": [
					"local-address"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition"
					},
					 "keystore-reference": {
						 "description": "A reference to an asymmetric key that exists in\nthe keystore.  The intent is to reference just the\nasymmetric key, not any certificates that may also\nbe associated with the asymmetric key.",
						 "default": "Some keystore-reference",
						 "type": "string",
						 "xml": {
							 "name": "keystore-reference",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key",
				 "description": "A locally-defined or referenced asymmetric key pair\nto be used for the SSH server's host key.",
				 "xml": {
					 "name": "public-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_TOP": {
				 "type": "object",
				 "properties": {
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input": {
				 "properties": {
					 "subject": {
						 "description": "The 'subject' field per the CertificationRequestInfo\n structure as specified by RFC 2986, Section 4.1\n encoded using the ASN.1 distinguished encoding\n rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "subject",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "attributes": {
						 "description": "The 'attributes' field from the structure\nCertificationRequestInfo as specified by RFC 2986,\nSection 4.1 encoded using the ASN.1 distinguished\nencoding rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "attributes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"subject"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output": {
				 "properties": {
					 "certificate-signing-request": {
						 "description": "A CertificationRequest structure as specified by\nRFC 2986, Section 4.2 encoded using the ASN.1\ndistinguished encoding rules (DER), as specified\nin ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "certificate-signing-request",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"certificate-signing-request"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference": {
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate",
				 "description": "A locally-defined or referenced end-entity\ncertificate to be used for the SSH server's\nhost key.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_TOP": {
				 "type": "object",
				 "properties": {
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this host-key",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key"
					},
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key",
				 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity": {
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity",
				 "description": "The list of host-keys the SSH server will present when\nestablishing a SSH connection.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_TOP": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods": {
				 "properties": {
					 "publickey": {
						 "description": "Indicates that the 'publickey' method is supported.\nNote that RFC 6187 X.509v3 Certificates for SSH uses\nthe 'publickey' method name.",
						 "type": "object",
						 "xml": {
							 "name": "publickey",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "passsword": {
						 "description": "Indicates that the 'password' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "passsword",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hostbased": {
						 "description": "Indicates that the 'hostbased' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "hostbased",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "none": {
						 "description": "Indicates that the 'none' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "none",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "other": {
						 "type": "array",
						 "items": {
							 "default": "Some other",
							 "type": "string"
						},
						 "description": "Indicates a supported method name not defined by\nRFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods",
				 "description": "Indicates which authentication methods the server\nsupports.",
				 "xml": {
					 "name": "supported-authentication-methods",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods_TOP": {
				 "type": "object",
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the SSH key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "algorithm": {
						 "description": "The public key algorithm name for this SSH key.\n\nValid values are the values in the IANA 'Secure\nShell (SSH) Protocol Parameters' registry,\nPublic Key Algorithm Names.",
						 "default": "Some algorithm",
						 "type": "string",
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "key-data": {
						 "description": "The binary public key data for this SSH key, as\nspecified by RFC 4253, Section 6.6, i.e.:\n\n  string    certificate or public key format\n            identifier\n  byte[n]   key/certificate data.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key-data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"key-data"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key",
				 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253.",
				 "xml": {
					 "name": "authorized-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key_TOP": {
				 "type": "object",
				 "properties": {
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user": {
				 "properties": {
					 "name": {
						 "description": "The user name string identifying this entry.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "password": {
						 "description": "The password for this entry.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:$0$",
						 "type": "string",
						 "xml": {
							 "name": "password",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user",
				 "description": "The list of local users configured on this device.",
				 "xml": {
					 "name": "user",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_TOP": {
				 "type": "object",
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users": {
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users",
				 "description": "A list of locally configured users.",
				 "xml": {
					 "name": "users",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_TOP": {
				 "type": "object",
				 "properties": {
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication": {
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods"
					},
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_users"
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that client credentials are configured\nelsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication",
				 "description": "Specifies if SSH client authentication is required or\noptional, and specifies if the SSH client authentication\ncredentials are configured locally or externally.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_host-key": {
				 "properties": {
					 "host-key-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/public-key-alg-base"
						},
						 "description": "Acceptable host key algorithms in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable host key algorithms are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_host-key",
				 "description": "Parameters regarding host key.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_host-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_host-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange": {
				 "properties": {
					 "key-exchange-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/key-exchange-alg-base"
						},
						 "description": "Acceptable key exchange algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable key exchange algorithms are implementation\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange",
				 "description": "Parameters regarding key exchange.",
				 "xml": {
					 "name": "key-exchange",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange_TOP": {
				 "type": "object",
				 "properties": {
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_encryption": {
				 "properties": {
					 "encryption-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/encryption-alg-base"
						},
						 "description": "Acceptable encryption algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable encryption algorithms are implementation\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_encryption",
				 "description": "Parameters regarding encryption.",
				 "xml": {
					 "name": "encryption",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_encryption_TOP": {
				 "type": "object",
				 "properties": {
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_encryption"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_encryption_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_mac": {
				 "properties": {
					 "mac-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/mac-alg-base"
						},
						 "description": "Acceptable MAC algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable MAC algorithms are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_mac",
				 "description": "Parameters regarding message authentication code (MAC).",
				 "xml": {
					 "name": "mac",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_mac_TOP": {
				 "type": "object",
				 "properties": {
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_mac"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_mac_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params": {
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_host-key"
					},
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange"
					},
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_encryption"
					},
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_mac"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params",
				 "description": "Configurable parameters of the SSH transport layer.",
				 "xml": {
					 "name": "transport-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_TOP": {
				 "type": "object",
				 "properties": {
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_keepalives": {
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which\nif no data has been received from the SSL client,\na SSL-level message will be sent to test the\naliveness of the SSL client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe SSL client before assuming the SSL client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the SSL client.  An unresponsive SSL\nclient is dropped after approximately max-wait *\nmax-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters": {
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_client-authentication"
					},
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_transport-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_keepalives"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters",
				 "description": "A wrapper around the SSH server parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "ssh-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh": {
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_tcp-server-parameters"
					},
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh_ssh-server-parameters"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh",
				 "description": "SSH-specific listening configuration for inbound\nconnections.",
				 "xml": {
					 "name": "ssh",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_ssh_TOP": {
				 "type": "object",
				 "properties": {
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_ssh_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_keepalives": {
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"idle-time",
					"max-probes",
					"probe-interval"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters": {
				 "properties": {
					 "local-address": {
						 "description": "The local IP address to listen on for incoming\nTCP client connections.  INADDR_ANY (0.0.0.0) or\nINADDR6_ANY (0:0:0:0:0:0:0:0 a.k.a. ::) MUST be\nused when the server is to listen on all IPv4 or\nIPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The NETCONF server will listen on the\nIANA-assigned well-known port value\nfor 'netconf-tls' (6513) if no value\nis specified.",
						 "format": "int32",
						 "default": 6513,
						 "type": "integer",
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_keepalives"
					}
				},
				 "required": [
					"local-address"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input": {
				 "properties": {
					 "subject": {
						 "description": "The 'subject' field per the CertificationRequestInfo\n structure as specified by RFC 2986, Section 4.1\n encoded using the ASN.1 distinguished encoding\n rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "subject",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "attributes": {
						 "description": "The 'attributes' field from the structure\nCertificationRequestInfo as specified by RFC 2986,\nSection 4.1 encoded using the ASN.1 distinguished\nencoding rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "attributes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"subject"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output": {
				 "properties": {
					 "certificate-signing-request": {
						 "description": "A CertificationRequest structure as specified by\nRFC 2986, Section 4.2 encoded using the ASN.1\ndistinguished encoding rules (DER), as specified\nin ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "certificate-signing-request",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"certificate-signing-request"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_keystore-reference": {
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_keystore-reference",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_keystore-reference_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_keystore-reference_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_keystore-reference"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity",
				 "description": "A locally-defined or referenced end-entity certificate,\nincluding any configured intermediate certificates, the\nTLS server will present when establishing a TLS connection\nin its Certificate message, as defined in Section 7.4.2\nin RFC 5246.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_TOP": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name": {
				 "properties": {
					 "id": {
						 "description": "The id specifies the order in which the entries in the\ncert-to-name list are searched.  Entries with lower\nnumbers are searched first.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "id",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "fingerprint": {
						 "description": "Specifies a value with which the fingerprint of the\nfull certificate presented by the peer is compared.  If\nthe fingerprint of the full certificate presented by the\npeer does not match the fingerprint configured, then the\nentry is skipped, and the search for a match continues.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:4B:37:d9:05:bB:5C",
						 "type": "string",
						 "xml": {
							 "name": "fingerprint",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "map-type": {
						 "$ref": "#/components/schemas/cert-to-name",
						 "xml": {
							 "name": "map-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "name": {
						 "description": "Directly specifies the NETCONF username when the\nmap-type is 'specified'.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"fingerprint",
					"map-type",
					"name"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name",
				 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation.",
				 "xml": {
					 "name": "cert-to-name",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name_TOP": {
				 "type": "object",
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps": {
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps",
				 "description": "The cert-maps container is used by a TLS-\nbased NETCONF server to map the NETCONF\nclient's presented X.509 certificate to\na NETCONF username.  If no matching and\nvalid cert-to-name list entry can be found,\nthen the NETCONF server MUST close the\nconnection, and MUST NOT accept NETCONF\nmessages over it.",
				 "xml": {
					 "name": "cert-maps",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_TOP": {
				 "type": "object",
				 "properties": {
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication": {
				 "properties": {
					 "required": {
						 "description": "Indicates that TLS-level client authentication is\nrequired.",
						 "type": "object",
						 "xml": {
							 "name": "required",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "optional": {
						 "description": "Indicates that TLS-level client authentication is\noptional.",
						 "type": "object",
						 "xml": {
							 "name": "optional",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ca-certs": {
						 "description": "A reference to a list of certificate authority (CA)\ncertificates used by the TLS server to authenticate\nTLS client certificates.  A client certificate is\nauthenticated if it has a valid chain of trust to\na configured CA certificate.",
						 "default": "Some ca-certs",
						 "type": "string",
						 "xml": {
							 "name": "ca-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-certs": {
						 "description": "A reference to a list of client certificates\nused by the TLS server to authenticate TLS\nclient certificates.  A clients certificate\nis authenticated if it is an exact match to\na configured client certificate.",
						 "default": "Some client-certs",
						 "type": "string",
						 "xml": {
							 "name": "client-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that certificates needed to authenticate\nclients are configured elsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_cert-maps"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication",
				 "description": "NETCONF/TLS servers MUST validate client\ncertificates.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_tls-versions": {
				 "properties": {
					 "tls-version": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/tls-version-base"
						},
						 "description": "Acceptable TLS protocol versions.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable TLS protocol versions are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_tls-versions",
				 "description": "Parameters regarding TLS versions.",
				 "xml": {
					 "name": "tls-versions",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_tls-versions_TOP": {
				 "type": "object",
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_tls-versions"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_tls-versions_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_cipher-suites": {
				 "properties": {
					 "cipher-suite": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/cipher-suite-base"
						},
						 "description": "Acceptable cipher suites in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable cipher suites are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_cipher-suites",
				 "description": "Parameters regarding cipher suites.",
				 "xml": {
					 "name": "cipher-suites",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_cipher-suites_TOP": {
				 "type": "object",
				 "properties": {
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_cipher-suites"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_cipher-suites_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params": {
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_tls-versions"
					},
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_cipher-suites"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params",
				 "description": "Configurable parameters for the TLS hello message.",
				 "xml": {
					 "name": "hello-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_TOP": {
				 "type": "object",
				 "properties": {
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_keepalives": {
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which if\nno data has been received from the TLS client, a\nTLS-level message will be sent to test the\naliveness of the TLS client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe TLS client before assuming the TLS client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the TLS client.  An unresponsive\nTLS client is dropped after approximately max-wait\n* max-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters": {
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_client-authentication"
					},
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_hello-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_keepalives"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters",
				 "description": "A wrapper around the TLS server parameters to\navoid name collisions.",
				 "xml": {
					 "name": "tls-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls": {
				 "properties": {
					 "tcp-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tcp-server-parameters"
					},
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls_tls-server-parameters"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls",
				 "description": "TLS-specific listening configuration for inbound\nconnections.",
				 "xml": {
					 "name": "tls",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_tls_TOP": {
				 "type": "object",
				 "properties": {
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_tls_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the NETCONF listen endpoint.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_ssh"
					},
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint_tls"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint",
				 "description": "List of endpoints to listen for NETCONF connections.",
				 "xml": {
					 "name": "endpoint",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_endpoint_TOP": {
				 "type": "object",
				 "properties": {
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint"
						},
						 "description": "List of endpoints to listen for NETCONF connections."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_endpoint_TOP"
			},
			 "ietf-netconf-server_netconf-server_listen": {
				 "properties": {
					 "idle-timeout": {
						 "description": "Specifies the maximum number of seconds that a NETCONF\nsession may remain idle. A NETCONF session will be\ndropped if it is idle for an interval longer than this\nnumber of seconds.  If set to zero, then the server\nwill never drop a session because it is idle.  Sessions\nthat have a notification subscription active are never\ndropped.",
						 "format": "int32",
						 "default": 3600,
						 "type": "integer",
						 "xml": {
							 "name": "idle-timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen_endpoint"
						},
						 "description": "List of endpoints to listen for NETCONF connections."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_listen",
				 "description": "Configures listen behavior",
				 "xml": {
					 "name": "listen",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_listen_TOP": {
				 "type": "object",
				 "properties": {
					 "listen": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_listen_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_keepalives": {
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"idle-time",
					"max-probes",
					"probe-interval"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters": {
				 "properties": {
					 "remote-address": {
						 "description": "The IP address or hostname of the remote peer to\nestablish a connection with.  If a domain name is\nconfigured, then the DNS resolution should happen on\neach connection attempt.  If the the DNS resolution\nresults in multiple IP addresses, the IP addresses\nare tried according to local preference order until\na connection has been established or until all IP\naddresses have failed.",
						 "type": "string",
						 "xml": {
							 "name": "remote-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "remote-port": {
						 "description": "The NETCONF server will attempt to connect\nto the IANA-assigned well-known port for\n'netconf-ch-tls' (4334) if no value is\nspecified.",
						 "format": "int32",
						 "default": 4334,
						 "type": "integer",
						 "xml": {
							 "name": "remote-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-address": {
						 "description": "The local IP address/interface (VRF?) to bind to for when\nconnecting to the remote peer.  INADDR_ANY ('0.0.0.0') or\nINADDR6_ANY ('0:0:0:0:0:0:0:0' a.k.a. '::') MAY be used to\nexplicitly indicate the implicit default, that the server\ncan bind to any IPv4 or IPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The local IP port number to bind to for when connecting\nto the remote peer.  The port number '0', which is the\ndefault value, indicates that any available local port\nnumber may be used.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_keepalives"
					}
				},
				 "required": [
					"remote-address"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-client-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_local-definition"
					},
					 "keystore-reference": {
						 "description": "A reference to an asymmetric key that exists in\nthe keystore.  The intent is to reference just the\nasymmetric key, not any certificates that may also\nbe associated with the asymmetric key.",
						 "default": "Some keystore-reference",
						 "type": "string",
						 "xml": {
							 "name": "keystore-reference",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key",
				 "description": "A locally-defined or referenced asymmetric key pair\nto be used for the SSH server's host key.",
				 "xml": {
					 "name": "public-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_TOP": {
				 "type": "object",
				 "properties": {
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input": {
				 "properties": {
					 "subject": {
						 "description": "The 'subject' field per the CertificationRequestInfo\n structure as specified by RFC 2986, Section 4.1\n encoded using the ASN.1 distinguished encoding\n rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "subject",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "attributes": {
						 "description": "The 'attributes' field from the structure\nCertificationRequestInfo as specified by RFC 2986,\nSection 4.1 encoded using the ASN.1 distinguished\nencoding rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "attributes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"subject"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_input_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output": {
				 "properties": {
					 "certificate-signing-request": {
						 "description": "A CertificationRequest structure as specified by\nRFC 2986, Section 4.2 encoded using the ASN.1\ndistinguished encoding rules (DER), as specified\nin ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "certificate-signing-request",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"certificate-signing-request"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_generate-certificate-signing-request_output_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference": {
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_keystore-reference"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate",
				 "description": "A locally-defined or referenced end-entity\ncertificate to be used for the SSH server's\nhost key.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_TOP": {
				 "type": "object",
				 "properties": {
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this host-key",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_public-key"
					},
					 "certificate": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_certificate"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key",
				 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity": {
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_host-key"
						},
						 "description": "An ordered list of host keys the SSH server will use to\nconstruct its ordered list of algorithms, when sending\nits SSH_MSG_KEXINIT message, as defined in Section 7.1\nof RFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity",
				 "description": "The list of host-keys the SSH server will present when\nestablishing a SSH connection.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_TOP": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods": {
				 "properties": {
					 "publickey": {
						 "description": "Indicates that the 'publickey' method is supported.\nNote that RFC 6187 X.509v3 Certificates for SSH uses\nthe 'publickey' method name.",
						 "type": "object",
						 "xml": {
							 "name": "publickey",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "passsword": {
						 "description": "Indicates that the 'password' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "passsword",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hostbased": {
						 "description": "Indicates that the 'hostbased' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "hostbased",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "none": {
						 "description": "Indicates that the 'none' method is supported.",
						 "type": "object",
						 "xml": {
							 "name": "none",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "other": {
						 "type": "array",
						 "items": {
							 "default": "Some other",
							 "type": "string"
						},
						 "description": "Indicates a supported method name not defined by\nRFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods",
				 "description": "Indicates which authentication methods the server\nsupports.",
				 "xml": {
					 "name": "supported-authentication-methods",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods_TOP": {
				 "type": "object",
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the SSH key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "algorithm": {
						 "description": "The public key algorithm name for this SSH key.\n\nValid values are the values in the IANA 'Secure\nShell (SSH) Protocol Parameters' registry,\nPublic Key Algorithm Names.",
						 "default": "Some algorithm",
						 "type": "string",
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "key-data": {
						 "description": "The binary public key data for this SSH key, as\nspecified by RFC 4253, Section 6.6, i.e.:\n\n  string    certificate or public key format\n            identifier\n  byte[n]   key/certificate data.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key-data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"key-data"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key",
				 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253.",
				 "xml": {
					 "name": "authorized-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key_TOP": {
				 "type": "object",
				 "properties": {
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user": {
				 "properties": {
					 "name": {
						 "description": "The user name string identifying this entry.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "password": {
						 "description": "The password for this entry.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "$5$Fa5EW9xQ/53WL1s6$f1Lz.17JuKom6ensXn47ETuZEWhCR5AVSoFD2V1YzxU",
						 "type": "string",
						 "xml": {
							 "name": "password",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These\nkeys are allowed for SSH authentication, as\ndescribed in RFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user",
				 "description": "The list of local users configured on this device.",
				 "xml": {
					 "name": "user",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_TOP": {
				 "type": "object",
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users": {
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users",
				 "description": "A list of locally configured users.",
				 "xml": {
					 "name": "users",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_TOP": {
				 "type": "object",
				 "properties": {
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication": {
				 "properties": {
					 "supported-authentication-methods": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_supported-authentication-methods"
					},
					 "users": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_users"
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that client credentials are configured\nelsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication",
				 "description": "Specifies if SSH client authentication is required or\noptional, and specifies if the SSH client authentication\ncredentials are configured locally or externally.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_host-key": {
				 "properties": {
					 "host-key-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/public-key-alg-base"
						},
						 "description": "Acceptable host key algorithms in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable host key algorithms are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_host-key",
				 "description": "Parameters regarding host key.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_host-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_host-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange": {
				 "properties": {
					 "key-exchange-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/key-exchange-alg-base"
						},
						 "description": "Acceptable key exchange algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable key exchange algorithms are implementation\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange",
				 "description": "Parameters regarding key exchange.",
				 "xml": {
					 "name": "key-exchange",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange_TOP": {
				 "type": "object",
				 "properties": {
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_encryption": {
				 "properties": {
					 "encryption-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/encryption-alg-base"
						},
						 "description": "Acceptable encryption algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable encryption algorithms are implementation\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_encryption",
				 "description": "Parameters regarding encryption.",
				 "xml": {
					 "name": "encryption",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_encryption_TOP": {
				 "type": "object",
				 "properties": {
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_encryption"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_encryption_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_mac": {
				 "properties": {
					 "mac-alg": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/mac-alg-base"
						},
						 "description": "Acceptable MAC algorithms in order of descending\npreference.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable MAC algorithms are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_mac",
				 "description": "Parameters regarding message authentication code (MAC).",
				 "xml": {
					 "name": "mac",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_mac_TOP": {
				 "type": "object",
				 "properties": {
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_mac"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_mac_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params": {
				 "properties": {
					 "host-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_host-key"
					},
					 "key-exchange": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_key-exchange"
					},
					 "encryption": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_encryption"
					},
					 "mac": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_mac"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params",
				 "description": "Configurable parameters of the SSH transport layer.",
				 "xml": {
					 "name": "transport-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_TOP": {
				 "type": "object",
				 "properties": {
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_keepalives": {
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which\nif no data has been received from the SSL client,\na SSL-level message will be sent to test the\naliveness of the SSL client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe SSL client before assuming the SSL client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the SSL client.  An unresponsive SSL\nclient is dropped after approximately max-wait *\nmax-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters": {
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_client-authentication"
					},
					 "transport-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_transport-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_keepalives"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters",
				 "description": "A wrapper around the SSH server parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "ssh-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh": {
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_tcp-client-parameters"
					},
					 "ssh-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_ssh-server-parameters"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh",
				 "description": "Specifies SSH-specific call-home transport\nconfiguration.",
				 "xml": {
					 "name": "ssh",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_TOP": {
				 "type": "object",
				 "properties": {
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_keepalives": {
				 "properties": {
					 "idle-time": {
						 "description": "Sets the amount of time after which if no data has been\nreceived from the TCP peer, a TCP-level probe message\nwill be sent to test the aliveness of the TCP peer.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "idle-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-probes": {
						 "description": "Sets the maximum number of sequential keep-alive probes\nthat can fail to obtain a response from the TCP peer\nbefore assuming the TCP peer is no longer alive.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "max-probes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "probe-interval": {
						 "description": "Sets the time interval between failed probes.",
						 "format": "int32",
						 "default": 1,
						 "type": "integer",
						 "xml": {
							 "name": "probe-interval",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"idle-time",
					"max-probes",
					"probe-interval"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test the\naliveness of the TCP peer.  An unresponsive TCP peer is\ndropped after approximately (idle-time * 60) + (max-probes\n* probe-interval) seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters": {
				 "properties": {
					 "remote-address": {
						 "description": "The IP address or hostname of the remote peer to\nestablish a connection with.  If a domain name is\nconfigured, then the DNS resolution should happen on\neach connection attempt.  If the the DNS resolution\nresults in multiple IP addresses, the IP addresses\nare tried according to local preference order until\na connection has been established or until all IP\naddresses have failed.",
						 "type": "string",
						 "xml": {
							 "name": "remote-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "remote-port": {
						 "description": "The NETCONF server will attempt to connect\nto the IANA-assigned well-known port for\n'netconf-ch-tls' (4335) if no value is\nspecified.",
						 "format": "int32",
						 "default": 4335,
						 "type": "integer",
						 "xml": {
							 "name": "remote-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-address": {
						 "description": "The local IP address/interface (VRF?) to bind to for when\nconnecting to the remote peer.  INADDR_ANY ('0.0.0.0') or\nINADDR6_ANY ('0:0:0:0:0:0:0:0' a.k.a. '::') MAY be used to\nexplicitly indicate the implicit default, that the server\ncan bind to any IPv4 or IPv6 addresses, respectively.",
						 "type": "string",
						 "xml": {
							 "name": "local-address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "local-port": {
						 "description": "The local IP port number to bind to for when connecting\nto the remote peer.  The port number '0', which is the\ndefault value, indicates that any available local port\nnumber may be used.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "local-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_keepalives"
					}
				},
				 "required": [
					"remote-address"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters",
				 "description": "A wrapper around the TCP client parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tcp-client-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key": {
				 "properties": {
					 "value": {
						 "description": "The private key, encrypted using the specified symmetric\nor asymmetric key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "value",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "symmetric-key-ref": {
						 "description": "Identifies a symmetric key used to encrypt this key.",
						 "default": "Some symmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "symmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "asymmetric-key-ref": {
						 "description": "Identifies an asymmetric key used to encrypt this key.",
						 "default": "Some asymmetric-key-ref",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key-ref",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key",
				 "description": "A container for the encrypted asymmetric private\nkey value.",
				 "xml": {
					 "name": "encrypted-private-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key_TOP": {
				 "type": "object",
				 "properties": {
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition": {
				 "properties": {
					 "private-key": {
						 "description": "The value of the binary key.  The key's value is\ninterpreted by the 'algorithm'.  For example, a DSA key\nis an integer, an RSA key is represented as RSAPrivateKey\nas defined in RFC 8017, and an ECC key is represented as\nECPrivateKey as defined in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "hidden-private-key": {
						 "description": "A permanently hidden key.  How such keys are created\nis outside the scope of this module.",
						 "type": "object",
						 "xml": {
							 "name": "hidden-private-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "encrypted-private-key": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_encrypted-private-key"
					},
					 "algorithm": {
						 "description": "Identifies the key's algorithm.",
						 "type": "string",
						 "default": 0,
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "public-key": {
						 "description": "The binary value of the public key.  The interpretation\nof the value is defined by 'algorithm'.  For example,\na DSA key is an integer, an RSA key is represented as\nRSAPublicKey per RFC 8017, and an ECC key is represented\nusing the 'publicKey' described in RFC 5915.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "public-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"algorithm",
					"public-key"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition",
				 "description": "Container to hold the local key definition.",
				 "xml": {
					 "name": "local-definition",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_TOP": {
				 "type": "object",
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input": {
				 "properties": {
					 "subject": {
						 "description": "The 'subject' field per the CertificationRequestInfo\n structure as specified by RFC 2986, Section 4.1\n encoded using the ASN.1 distinguished encoding\n rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "subject",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "attributes": {
						 "description": "The 'attributes' field from the structure\nCertificationRequestInfo as specified by RFC 2986,\nSection 4.1 encoded using the ASN.1 distinguished\nencoding rules (DER), as specified in ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "attributes",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"subject"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_input_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output": {
				 "properties": {
					 "certificate-signing-request": {
						 "description": "A CertificationRequest structure as specified by\nRFC 2986, Section 4.2 encoded using the ASN.1\ndistinguished encoding rules (DER), as specified\nin ITU-T X.690.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "certificate-signing-request",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"certificate-signing-request"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_generate-certificate-signing-request_output_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_keystore-reference": {
				 "properties": {
					 "asymmetric-key": {
						 "description": "A reference to an asymmetric key in the keystore.",
						 "default": "Some asymmetric-key",
						 "type": "string",
						 "xml": {
							 "name": "asymmetric-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "certificate": {
						 "description": "A reference to a specific certificate of the\nasymmetric key in the keystore.",
						 "default": "Some certificate",
						 "type": "string",
						 "xml": {
							 "name": "certificate",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_keystore-reference",
				 "description": "A reference to a specific certificate (and its\nassociated private key) in the keystore.",
				 "xml": {
					 "name": "keystore-reference",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_keystore-reference_TOP": {
				 "type": "object",
				 "properties": {
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_keystore-reference"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_keystore-reference_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity": {
				 "properties": {
					 "local-definition": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_local-definition"
					},
					 "keystore-reference": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_keystore-reference"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity",
				 "description": "A locally-defined or referenced end-entity certificate,\nincluding any configured intermediate certificates, the\nTLS server will present when establishing a TLS connection\nin its Certificate message, as defined in Section 7.4.2\nin RFC 5246.",
				 "xml": {
					 "name": "server-identity",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_TOP": {
				 "type": "object",
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name": {
				 "properties": {
					 "id": {
						 "description": "The id specifies the order in which the entries in the\ncert-to-name list are searched.  Entries with lower\nnumbers are searched first.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "id",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "fingerprint": {
						 "description": "Specifies a value with which the fingerprint of the\nfull certificate presented by the peer is compared.  If\nthe fingerprint of the full certificate presented by the\npeer does not match the fingerprint configured, then the\nentry is skipped, and the search for a match continues.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:4D:fe",
						 "type": "string",
						 "xml": {
							 "name": "fingerprint",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "map-type": {
						 "$ref": "#/components/schemas/cert-to-name",
						 "xml": {
							 "name": "map-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "name": {
						 "description": "Directly specifies the NETCONF username when the\nmap-type is 'specified'.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "required": [
					"fingerprint",
					"map-type",
					"name"
				],
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name",
				 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation.",
				 "xml": {
					 "name": "cert-to-name",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name_TOP": {
				 "type": "object",
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps": {
				 "properties": {
					 "cert-to-name": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_cert-to-name"
						},
						 "description": "This list defines how certificates are mapped to names.\nThe name is derived by considering each cert-to-name\nlist entry in order.  The cert-to-name entry's fingerprint\ndetermines whether the list entry is a match:\n\n1) If the cert-to-name list entry's fingerprint value\n   matches that of the presented certificate, then consider\n   the list entry a successful match.\n\n2) If the cert-to-name list entry's fingerprint value\n   matches that of a locally held copy of a trusted CA\n   certificate, and that CA certificate was part of the CA\n   certificate chain to the presented certificate, then\n   consider the list entry a successful match.\n\nOnce a matching cert-to-name list entry has been found, the\nmap-type is used to determine how the name associated with\nthe certificate should be determined.  See the map-type\nleaf's description for details on determining the name value.\nIf it is impossible to determine a name from the cert-to-name\nlist entry's data combined with the data presented in the\ncertificate, then additional cert-to-name list entries MUST\nbe searched to look for another potential match.\n\nSecurity administrators are encouraged to make use of\ncertificates with subjectAltName fields that can be mapped to\nnames so that a single root CA certificate can allow all\nchild certificates' subjectAltName fields to map directly to\na name via a 1:1 transformation."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps",
				 "description": "The cert-maps container is used by a\nTLS-based NETCONF server to map the\nNETCONF client's presented X.509\ncertificate to a NETCONF username.  If\nno matching and valid cert-to-name list\nentry can be found, then the NETCONF\nserver MUST close the connection, and\nMUST NOT accept NETCONF messages over\nit.",
				 "xml": {
					 "name": "cert-maps",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_TOP": {
				 "type": "object",
				 "properties": {
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication": {
				 "properties": {
					 "required": {
						 "description": "Indicates that TLS-level client authentication is\nrequired.",
						 "type": "object",
						 "xml": {
							 "name": "required",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "optional": {
						 "description": "Indicates that TLS-level client authentication is\noptional.",
						 "type": "object",
						 "xml": {
							 "name": "optional",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ca-certs": {
						 "description": "A reference to a list of certificate authority (CA)\ncertificates used by the TLS server to authenticate\nTLS client certificates.  A client certificate is\nauthenticated if it has a valid chain of trust to\na configured CA certificate.",
						 "default": "Some ca-certs",
						 "type": "string",
						 "xml": {
							 "name": "ca-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-certs": {
						 "description": "A reference to a list of client certificates\nused by the TLS server to authenticate TLS\nclient certificates.  A clients certificate\nis authenticated if it is an exact match to\na configured client certificate.",
						 "default": "Some client-certs",
						 "type": "string",
						 "xml": {
							 "name": "client-certs",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "client-auth-defined-elsewhere": {
						 "description": "Indicates that certificates needed to authenticate\nclients are configured elsewhere.",
						 "type": "object",
						 "xml": {
							 "name": "client-auth-defined-elsewhere",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "cert-maps": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_cert-maps"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication",
				 "description": "NETCONF/TLS servers MUST validate client\ncertificates.",
				 "xml": {
					 "name": "client-authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_tls-versions": {
				 "properties": {
					 "tls-version": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/tls-version-base"
						},
						 "description": "Acceptable TLS protocol versions.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable TLS protocol versions are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_tls-versions",
				 "description": "Parameters regarding TLS versions.",
				 "xml": {
					 "name": "tls-versions",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_tls-versions_TOP": {
				 "type": "object",
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_tls-versions"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_tls-versions_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_cipher-suites": {
				 "properties": {
					 "cipher-suite": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/cipher-suite-base"
						},
						 "description": "Acceptable cipher suites in order of descending\npreference.  The configured host key algorithms should\nbe compatible with the algorithm used by the configured\nprivate key.  Please see Section 5 of RFC XXXX for\nvalid combinations.\n\nIf this leaf-list is not configured (has zero elements)\nthe acceptable cipher suites are implementation-\ndefined."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_cipher-suites",
				 "description": "Parameters regarding cipher suites.",
				 "xml": {
					 "name": "cipher-suites",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_cipher-suites_TOP": {
				 "type": "object",
				 "properties": {
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_cipher-suites"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_cipher-suites_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params": {
				 "properties": {
					 "tls-versions": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_tls-versions"
					},
					 "cipher-suites": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_cipher-suites"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params",
				 "description": "Configurable parameters for the TLS hello message.",
				 "xml": {
					 "name": "hello-params",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_TOP": {
				 "type": "object",
				 "properties": {
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_keepalives": {
				 "properties": {
					 "max-wait": {
						 "description": "Sets the amount of time in seconds after which if\nno data has been received from the TLS client, a\nTLS-level message will be sent to test the\naliveness of the TLS client.",
						 "format": "int32",
						 "default": 30,
						 "type": "integer",
						 "xml": {
							 "name": "max-wait",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Sets the maximum number of sequential keep-alive\nmessages that can fail to obtain a response from\nthe TLS client before assuming the TLS client is\nno longer alive.",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_keepalives",
				 "description": "Configures the keep-alive policy, to proactively test\nthe aliveness of the TLS client.  An unresponsive\nTLS client is dropped after approximately max-wait\n* max-attempts seconds.",
				 "xml": {
					 "name": "keepalives",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_keepalives_TOP": {
				 "type": "object",
				 "properties": {
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_keepalives"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_keepalives_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters": {
				 "properties": {
					 "server-identity": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_server-identity"
					},
					 "client-authentication": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_client-authentication"
					},
					 "hello-params": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_hello-params"
					},
					 "keepalives": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_keepalives"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters",
				 "description": "A wrapper around the TLS server parameters\nto avoid name collisions.",
				 "xml": {
					 "name": "tls-server-parameters",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_TOP": {
				 "type": "object",
				 "properties": {
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls": {
				 "properties": {
					 "tcp-client-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tcp-client-parameters"
					},
					 "tls-server-parameters": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_tls-server-parameters"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls",
				 "description": "Specifies TLS-specific call-home transport\nconfiguration.",
				 "xml": {
					 "name": "tls",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_TOP": {
				 "type": "object",
				 "properties": {
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this endpoint.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "ssh": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_ssh"
					},
					 "tls": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_tls"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint",
				 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability.",
				 "xml": {
					 "name": "endpoint",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_TOP": {
				 "type": "object",
				 "properties": {
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint"
						},
						 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints": {
				 "properties": {
					 "endpoint": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_endpoint"
						},
						 "description": "A non-empty user-ordered list of endpoints for this\nNETCONF server to try to connect to in sequence.\nDefining more than one enables high-availability."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints",
				 "description": "Container for the list of endpoints.",
				 "xml": {
					 "name": "endpoints",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_TOP": {
				 "type": "object",
				 "properties": {
					 "endpoints": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_persistent": {
				 "properties": {
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_persistent",
				 "description": "Maintain a persistent connection to the NETCONF\nclient. If the connection goes down, immediately\nstart trying to reconnect to the NETCONF client,\nusing the reconnection strategy.\n\nThis connection type minimizes any NETCONF client\nto NETCONF server data-transfer delay, albeit at\nthe expense of holding resources longer.",
				 "xml": {
					 "name": "persistent",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_persistent_TOP": {
				 "type": "object",
				 "properties": {
					 "persistent": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_persistent"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_persistent_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_periodic": {
				 "properties": {
					 "period": {
						 "description": "Duration of time between periodic connections.",
						 "format": "int32",
						 "default": 60,
						 "type": "integer",
						 "xml": {
							 "name": "period",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "anchor-time": {
						 "description": "Designates a timestamp before or after which a\nseries of periodic connections are determined.\nThe periodic connections occur at a whole\nmultiple interval from the anchor time.  For\nexample, for an anchor time is 15 minutes past\nmidnight and a period interval of 24 hours, then\na periodic connection will occur 15 minutes past\nmidnight everyday.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:2258-53-93T27:94+00:59",
						 "type": "string",
						 "xml": {
							 "name": "anchor-time",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "idle-timeout": {
						 "description": "Specifies the maximum number of seconds that\na NETCONF session may remain idle. A NETCONF\nsession will be dropped if it is idle for an\ninterval longer than this number of seconds.\nIf set to zero, then the server will never\ndrop a session because it is idle.",
						 "format": "int32",
						 "default": 120,
						 "type": "integer",
						 "xml": {
							 "name": "idle-timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_periodic",
				 "description": "Periodically connect to the NETCONF client.\n\nThis connection type increases resource\nutilization, albeit with increased delay in\nNETCONF client to NETCONF client interactions.\n\nThe NETCONF client SHOULD gracefully close the\nconnection using <close-session> upon completing\nplanned activities.  If the NETCONF session is\nnot closed gracefully, the NETCONF server MUST\nimmediately attempt to reestablish the connection.\n\nIn the case that the previous connection is still\nactive (i.e., the NETCONF client has not closed\nit yet), establishing a new connection is NOT\nRECOMMENDED.",
				 "xml": {
					 "name": "periodic",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_periodic_TOP": {
				 "type": "object",
				 "properties": {
					 "periodic": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_periodic"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_periodic_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type": {
				 "properties": {
					 "persistent": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_persistent"
					},
					 "periodic": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_periodic"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type",
				 "description": "Indicates the NETCONF server's preference for how the\nNETCONF connection is maintained.",
				 "xml": {
					 "name": "connection-type",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_TOP": {
				 "type": "object",
				 "properties": {
					 "connection-type": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_reconnect-strategy": {
				 "properties": {
					 "start-with": {
						 "description": "Specifies which of the NETCONF client's endpoints\nthe NETCONF server should start with when trying\nto connect to the NETCONF client.",
						 "enum": [
							"first-listed",
							"last-connected",
							"random-selection"
						],
						 "default": "first-listed",
						 "type": "string",
						 "xml": {
							 "name": "start-with",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "max-attempts": {
						 "description": "Specifies the number times the NETCONF server tries\nto connect to a specific endpoint before moving on\nto the next endpoint in the list (round robin).",
						 "format": "int32",
						 "default": 3,
						 "type": "integer",
						 "xml": {
							 "name": "max-attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_reconnect-strategy",
				 "description": "The reconnection strategy directs how a NETCONF server\nreconnects to a NETCONF client, after discovering its\nconnection to the client has dropped, even if due to a\nreboot.  The NETCONF server starts with the specified\nendpoint and tries to connect to it max-attempts times\nbefore trying the next endpoint in the list (round\nrobin).",
				 "xml": {
					 "name": "reconnect-strategy",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_reconnect-strategy_TOP": {
				 "type": "object",
				 "properties": {
					 "reconnect-strategy": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_reconnect-strategy"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_reconnect-strategy_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the remote NETCONF client.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
						}
					},
					 "endpoints": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_endpoints"
					},
					 "connection-type": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_connection-type"
					},
					 "reconnect-strategy": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client_reconnect-strategy"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client",
				 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel.",
				 "xml": {
					 "name": "netconf-client",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_netconf-client_TOP": {
				 "type": "object",
				 "properties": {
					 "netconf-client": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client"
						},
						 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel."
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_netconf-client_TOP"
			},
			 "ietf-netconf-server_netconf-server_call-home": {
				 "properties": {
					 "netconf-client": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home_netconf-client"
						},
						 "description": "List of NETCONF clients the NETCONF server is to\ninitiate call-home connections to in parallel."
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server_call-home",
				 "description": "Configures call home behavior.",
				 "xml": {
					 "name": "call-home",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_call-home_TOP": {
				 "type": "object",
				 "properties": {
					 "call-home": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_call-home_TOP"
			},
			 "ietf-netconf-server_netconf-server": {
				 "properties": {
					 "listen": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_listen"
					},
					 "call-home": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server_call-home"
					}
				},
				 "type": "object",
				 "title": "ietf-netconf-server_netconf-server",
				 "description": "Top-level container for NETCONF server configuration.",
				 "xml": {
					 "name": "netconf-server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-server"
				}
			},
			 "ietf-netconf-server_netconf-server_TOP": {
				 "type": "object",
				 "properties": {
					 "netconf-server": {
						 "$ref": "#/components/schemas/ietf-netconf-server_netconf-server"
					}
				},
				 "title": "ietf-netconf-server_netconf-server_TOP"
			},
			 "origin1": {
				 "title": "origin",
				 "description": "Abstract base identity for the origin annotation.",
				 "enum": [
					"origin",
					"default",
					"system",
					"intended",
					"unknown",
					"learned",
					"dynamic"
				],
				 "type": "string"
			},
			 "intended1": {
				 "title": "intended",
				 "description": "Denotes configuration from the intended configuration\ndatastore.",
				 "enum": [
					"intended"
				],
				 "type": "string"
			},
			 "dynamic1": {
				 "title": "dynamic",
				 "description": "Denotes configuration from a dynamic configuration\ndatastore.",
				 "enum": [
					"dynamic"
				],
				 "type": "string"
			},
			 "system": {
				 "title": "system",
				 "description": "Denotes configuration originated by the system itself.\n\nExamples of system configuration include applied configuration\nfor an always-existing loopback interface, or interface\nconfiguration that is auto-created due to the hardware\ncurrently present in the device.",
				 "enum": [
					"system"
				],
				 "type": "string"
			},
			 "learned": {
				 "title": "learned",
				 "description": "Denotes configuration learned from protocol interactions with\nother devices, instead of via either the intended\nconfiguration datastore or any dynamic configuration\ndatastore.\n\nExamples of protocols that provide learned configuration\ninclude link-layer negotiations, routing protocols, and\nDHCP.",
				 "enum": [
					"learned"
				],
				 "type": "string"
			},
			 "default": {
				 "title": "default",
				 "description": "Denotes configuration that does not have a configured or\nlearned value but has a default value in use.  Covers both\nvalues defined in a 'default' statement and values defined\nvia an explanation in a 'description' statement.",
				 "enum": [
					"default"
				],
				 "type": "string"
			},
			 "unknown": {
				 "title": "unknown",
				 "description": "Denotes configuration for which the system cannot identify the\norigin.",
				 "enum": [
					"unknown"
				],
				 "type": "string"
			},
			 "public-key-alg-base1": {
				 "title": "public-key-alg-base",
				 "description": "Base identity used to identify public key algorithms.",
				 "enum": [
					"public-key-alg-base",
					"ecdsa-sha2-nistp384",
					"x509v3-rsa2048-sha256",
					"x509v3-ecdsa-sha2-nistp384",
					"x509v3-ssh-rsa",
					"x509v3-ecdsa-sha2-nistp256",
					"ssh-dss",
					"ecdsa-sha2-nistp521",
					"ssh-rsa",
					"ecdsa-sha2-nistp256",
					"x509v3-ecdsa-sha2-nistp521"
				],
				 "type": "string"
			},
			 "ssh-dss": {
				 "title": "ssh-dss",
				 "description": "Digital Signature Algorithm using SHA-1 as the\nhashing algorithm.",
				 "enum": [
					"ssh-dss"
				],
				 "type": "string"
			},
			 "ssh-rsa": {
				 "title": "ssh-rsa",
				 "description": "RSASSA-PKCS1-v1_5 signature scheme using SHA-1 as the\nhashing algorithm.",
				 "enum": [
					"ssh-rsa"
				],
				 "type": "string"
			},
			 "ecdsa-sha2-nistp256": {
				 "title": "ecdsa-sha2-nistp256",
				 "description": "Elliptic Curve Digital Signature Algorithm (ECDSA) using the\nnistp256 curve and the SHA2 family of hashing algorithms.",
				 "enum": [
					"ecdsa-sha2-nistp256"
				],
				 "type": "string"
			},
			 "ecdsa-sha2-nistp384": {
				 "title": "ecdsa-sha2-nistp384",
				 "description": "Elliptic Curve Digital Signature Algorithm (ECDSA) using the\nnistp384 curve and the SHA2 family of hashing algorithms.",
				 "enum": [
					"ecdsa-sha2-nistp384"
				],
				 "type": "string"
			},
			 "ecdsa-sha2-nistp521": {
				 "title": "ecdsa-sha2-nistp521",
				 "description": "Elliptic Curve Digital Signature Algorithm (ECDSA) using the\nnistp521 curve and the SHA2 family of hashing algorithms.",
				 "enum": [
					"ecdsa-sha2-nistp521"
				],
				 "type": "string"
			},
			 "x509v3-ssh-rsa": {
				 "title": "x509v3-ssh-rsa",
				 "description": "RSASSA-PKCS1-v1_5 signature scheme using a public key stored\nin an X.509v3 certificate and using SHA-1 as the hashing\nalgorithm.",
				 "enum": [
					"x509v3-ssh-rsa"
				],
				 "type": "string"
			},
			 "x509v3-rsa2048-sha256": {
				 "title": "x509v3-rsa2048-sha256",
				 "description": "RSASSA-PKCS1-v1_5 signature scheme using a public key stored\nin an X.509v3 certificate and using SHA-256 as the hashing\nalgorithm.  RSA keys conveyed using this format MUST have a\nmodulus of at least 2048 bits.",
				 "enum": [
					"x509v3-rsa2048-sha256"
				],
				 "type": "string"
			},
			 "x509v3-ecdsa-sha2-nistp256": {
				 "title": "x509v3-ecdsa-sha2-nistp256",
				 "description": "Elliptic Curve Digital Signature Algorithm (ECDSA)\nusing the nistp256 curve with a public key stored in\nan X.509v3 certificate and using the SHA2 family of\nhashing algorithms.",
				 "enum": [
					"x509v3-ecdsa-sha2-nistp256"
				],
				 "type": "string"
			},
			 "x509v3-ecdsa-sha2-nistp384": {
				 "title": "x509v3-ecdsa-sha2-nistp384",
				 "description": "Elliptic Curve Digital Signature Algorithm (ECDSA)\nusing the nistp384 curve with a public key stored in\nan X.509v3 certificate and using the SHA2 family of\nhashing algorithms.",
				 "enum": [
					"x509v3-ecdsa-sha2-nistp384"
				],
				 "type": "string"
			},
			 "x509v3-ecdsa-sha2-nistp521": {
				 "title": "x509v3-ecdsa-sha2-nistp521",
				 "description": "Elliptic Curve Digital Signature Algorithm (ECDSA)\nusing the nistp521 curve with a public key stored in\nan X.509v3 certificate and using the SHA2 family of\nhashing algorithms.",
				 "enum": [
					"x509v3-ecdsa-sha2-nistp521"
				],
				 "type": "string"
			},
			 "key-exchange-alg-base1": {
				 "title": "key-exchange-alg-base",
				 "description": "Base identity used to identify key exchange algorithms.",
				 "enum": [
					"key-exchange-alg-base",
					"diffie-hellman-group-exchange-sha256",
					"diffie-hellman-group14-sha1",
					"ecdh-sha2-nistp384",
					"ecdh-sha2-nistp521",
					"ecdh-sha2-nistp256",
					"diffie-hellman-group-exchange-sha1"
				],
				 "type": "string"
			},
			 "diffie-hellman-group14-sha1": {
				 "title": "diffie-hellman-group14-sha1",
				 "description": "Diffie-Hellman key exchange with SHA-1 as HASH and\nOakley Group 14 (2048-bit MODP Group).",
				 "enum": [
					"diffie-hellman-group14-sha1"
				],
				 "type": "string"
			},
			 "diffie-hellman-group-exchange-sha1": {
				 "title": "diffie-hellman-group-exchange-sha1",
				 "description": "Diffie-Hellman Group and Key Exchange with SHA-1 as HASH.",
				 "enum": [
					"diffie-hellman-group-exchange-sha1"
				],
				 "type": "string"
			},
			 "diffie-hellman-group-exchange-sha256": {
				 "title": "diffie-hellman-group-exchange-sha256",
				 "description": "Diffie-Hellman Group and Key Exchange with SHA-256 as HASH.",
				 "enum": [
					"diffie-hellman-group-exchange-sha256"
				],
				 "type": "string"
			},
			 "ecdh-sha2-nistp256": {
				 "title": "ecdh-sha2-nistp256",
				 "description": "Elliptic Curve Diffie-Hellman (ECDH) key exchange using the\nnistp256 curve and the SHA2 family of hashing algorithms.",
				 "enum": [
					"ecdh-sha2-nistp256"
				],
				 "type": "string"
			},
			 "ecdh-sha2-nistp384": {
				 "title": "ecdh-sha2-nistp384",
				 "description": "Elliptic Curve Diffie-Hellman (ECDH) key exchange using the\nnistp384 curve and the SHA2 family of hashing algorithms.",
				 "enum": [
					"ecdh-sha2-nistp384"
				],
				 "type": "string"
			},
			 "ecdh-sha2-nistp521": {
				 "title": "ecdh-sha2-nistp521",
				 "description": "Elliptic Curve Diffie-Hellman (ECDH) key exchange using the\nnistp521 curve and the SHA2 family of hashing algorithms.",
				 "enum": [
					"ecdh-sha2-nistp521"
				],
				 "type": "string"
			},
			 "encryption-alg-base1": {
				 "title": "encryption-alg-base",
				 "description": "Base identity used to identify encryption algorithms.",
				 "enum": [
					"encryption-alg-base",
					"aes192-cbc",
					"aes256-ctr",
					"aes128-cbc",
					"triple-des-cbc",
					"aes256-cbc",
					"aes128-ctr",
					"aes192-ctr"
				],
				 "type": "string"
			},
			 "triple-des-cbc": {
				 "title": "triple-des-cbc",
				 "description": "Three-key 3DES in CBC mode.",
				 "enum": [
					"triple-des-cbc"
				],
				 "type": "string"
			},
			 "aes128-cbc": {
				 "title": "aes128-cbc",
				 "description": "AES in CBC mode, with a 128-bit key.",
				 "enum": [
					"aes128-cbc"
				],
				 "type": "string"
			},
			 "aes192-cbc": {
				 "title": "aes192-cbc",
				 "description": "AES in CBC mode, with a 192-bit key.",
				 "enum": [
					"aes192-cbc"
				],
				 "type": "string"
			},
			 "aes256-cbc": {
				 "title": "aes256-cbc",
				 "description": "AES in CBC mode, with a 256-bit key.",
				 "enum": [
					"aes256-cbc"
				],
				 "type": "string"
			},
			 "aes128-ctr": {
				 "title": "aes128-ctr",
				 "description": "AES in SDCTR mode, with 128-bit key.",
				 "enum": [
					"aes128-ctr"
				],
				 "type": "string"
			},
			 "aes192-ctr": {
				 "title": "aes192-ctr",
				 "description": "AES in SDCTR mode, with 192-bit key.",
				 "enum": [
					"aes192-ctr"
				],
				 "type": "string"
			},
			 "aes256-ctr": {
				 "title": "aes256-ctr",
				 "description": "AES in SDCTR mode, with 256-bit key.",
				 "enum": [
					"aes256-ctr"
				],
				 "type": "string"
			},
			 "mac-alg-base1": {
				 "title": "mac-alg-base",
				 "description": "Base identity used to identify message authentication\ncode (MAC) algorithms.",
				 "enum": [
					"mac-alg-base",
					"hmac-sha1",
					"hmac-sha2-512",
					"hmac-sha2-256"
				],
				 "type": "string"
			},
			 "hmac-sha1": {
				 "title": "hmac-sha1",
				 "description": "HMAC-SHA1",
				 "enum": [
					"hmac-sha1"
				],
				 "type": "string"
			},
			 "hmac-sha2-256": {
				 "title": "hmac-sha2-256",
				 "description": "HMAC-SHA2-256",
				 "enum": [
					"hmac-sha2-256"
				],
				 "type": "string"
			},
			 "hmac-sha2-512": {
				 "title": "hmac-sha2-512",
				 "description": "HMAC-SHA2-512",
				 "enum": [
					"hmac-sha2-512"
				],
				 "type": "string"
			},
			 "authentication-method": {
				 "title": "authentication-method",
				 "description": "Base identity for user authentication methods.",
				 "enum": [
					"authentication-method",
					"local-users",
					"radius"
				],
				 "type": "string"
			},
			 "radius": {
				 "title": "radius",
				 "description": "Indicates user authentication using RADIUS.",
				 "enum": [
					"radius"
				],
				 "type": "string"
			},
			 "local-users": {
				 "title": "local-users",
				 "description": "Indicates password-based authentication of locally\nconfigured users.",
				 "enum": [
					"local-users"
				],
				 "type": "string"
			},
			 "radius-authentication-type": {
				 "title": "radius-authentication-type",
				 "description": "Base identity for RADIUS authentication types.",
				 "enum": [
					"radius-authentication-type",
					"radius-pap",
					"radius-chap"
				],
				 "type": "string"
			},
			 "radius-pap": {
				 "title": "radius-pap",
				 "description": "The device requests Password Authentication Protocol (PAP)\nauthentication from the RADIUS server.",
				 "enum": [
					"radius-pap"
				],
				 "type": "string"
			},
			 "radius-chap": {
				 "title": "radius-chap",
				 "description": "The device requests Challenge Handshake Authentication\nProtocol (CHAP) authentication from the RADIUS server.",
				 "enum": [
					"radius-chap"
				],
				 "type": "string"
			},
			 "ietf-system_system_config_clock_post": {
				 "type": "object",
				 "properties": {
					 "timezone-name": {
						 "description": "The TZ database name to use for the system, such\nas 'Europe/Stockholm'.",
						 "default": "Some timezone-name",
						 "type": "string",
						 "xml": {
							 "name": "timezone-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "timezone-utc-offset": {
						 "description": "The number of minutes to add to UTC time to\nidentify the time zone for this system.  For example,\n'UTC - 8:00 hours' would be represented as '-480'.\nNote that automatic daylight saving time adjustment\nis not provided if this object is used.",
						 "format": "int32",
						 "default": -1500,
						 "type": "integer",
						 "xml": {
							 "name": "timezone-utc-offset",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "title": "ietf-system_system_config_clock_post",
				 "description": "Configuration of the system date and time properties.",
				 "xml": {
					 "name": "clock",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_clock_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_config_clock_post"
			},
			 "ietf-system_system_config_clock": {
				 "properties": {
					 "timezone-name": {
						 "description": "The TZ database name to use for the system, such\nas 'Europe/Stockholm'.",
						 "default": "Some timezone-name",
						 "type": "string",
						 "xml": {
							 "name": "timezone-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "timezone-utc-offset": {
						 "description": "The number of minutes to add to UTC time to\nidentify the time zone for this system.  For example,\n'UTC - 8:00 hours' would be represented as '-480'.\nNote that automatic daylight saving time adjustment\nis not provided if this object is used.",
						 "format": "int32",
						 "default": -1500,
						 "type": "integer",
						 "xml": {
							 "name": "timezone-utc-offset",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_config_clock",
				 "description": "Configuration of the system date and time properties.",
				 "xml": {
					 "name": "clock",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_clock_TOP": {
				 "type": "object",
				 "properties": {
					 "clock": {
						 "$ref": "#/components/schemas/ietf-system_system_config_clock"
					}
				},
				 "title": "ietf-system_system_config_clock_TOP"
			},
			 "ietf-system_system_ntp_server_config_udp_post": {
				 "type": "object",
				 "properties": {
					 "address": {
						 "description": "The address of the NTP server.",
						 "type": "string",
						 "xml": {
							 "name": "address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "port": {
						 "description": "The port number of the NTP server.",
						 "format": "int32",
						 "default": 123,
						 "type": "integer",
						 "xml": {
							 "name": "port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "title": "ietf-system_system_ntp_server_config_udp_post",
				 "description": "Contains UDP-specific configuration parameters\nfor NTP.",
				 "xml": {
					 "name": "udp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_ntp_server_config_udp_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_ntp_server_config_udp_post"
			},
			 "ietf-system_system_ntp_server_config_udp": {
				 "properties": {
					 "address": {
						 "description": "The address of the NTP server.",
						 "type": "string",
						 "xml": {
							 "name": "address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "port": {
						 "description": "The port number of the NTP server.",
						 "format": "int32",
						 "default": 123,
						 "type": "integer",
						 "xml": {
							 "name": "port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "required": [
					"address"
				],
				 "type": "object",
				 "title": "ietf-system_system_ntp_server_config_udp",
				 "description": "Contains UDP-specific configuration parameters\nfor NTP.",
				 "xml": {
					 "name": "udp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_ntp_server_config_udp_TOP": {
				 "type": "object",
				 "properties": {
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_ntp_server_config_udp"
					}
				},
				 "title": "ietf-system_system_ntp_server_config_udp_TOP"
			},
			 "ietf-system_system_ntp_config_server_post": {
				 "type": "object",
				 "properties": {
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_ntp_server_config_udp"
					},
					 "association-type": {
						 "description": "The desired association type for this NTP server.",
						 "enum": [
							"server",
							"peer",
							"pool"
						],
						 "default": "server",
						 "type": "string",
						 "xml": {
							 "name": "association-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "iburst": {
						 "description": "Indicates whether this server should enable burst\nsynchronization or not.",
						 "default": false,
						 "type": "boolean",
						 "xml": {
							 "name": "iburst",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "prefer": {
						 "description": "Indicates whether this server should be preferred\nor not.",
						 "default": false,
						 "type": "boolean",
						 "xml": {
							 "name": "prefer",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "title": "ietf-system_system_ntp_config_server_post",
				 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers.",
				 "xml": {
					 "name": "server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_ntp_config_server_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_ntp_config_server_post"
			},
			 "ietf-system_system_ntp_config_server": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the NTP server.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_ntp_server_config_udp"
					},
					 "association-type": {
						 "description": "The desired association type for this NTP server.",
						 "enum": [
							"server",
							"peer",
							"pool"
						],
						 "default": "server",
						 "type": "string",
						 "xml": {
							 "name": "association-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "iburst": {
						 "description": "Indicates whether this server should enable burst\nsynchronization or not.",
						 "default": false,
						 "type": "boolean",
						 "xml": {
							 "name": "iburst",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "prefer": {
						 "description": "Indicates whether this server should be preferred\nor not.",
						 "default": false,
						 "type": "boolean",
						 "xml": {
							 "name": "prefer",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_ntp_config_server",
				 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers.",
				 "xml": {
					 "name": "server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_ntp_config_server_TOP": {
				 "type": "object",
				 "properties": {
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_ntp_config_server"
						},
						 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers."
					}
				},
				 "title": "ietf-system_system_ntp_config_server_TOP"
			},
			 "ietf-system_system_config_ntp_post": {
				 "type": "object",
				 "properties": {
					 "enabled": {
						 "description": "Indicates that the system should attempt to\nsynchronize the system clock with an NTP server\nfrom the 'ntp/server' list.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "enabled",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_ntp_config_server"
						},
						 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers."
					}
				},
				 "title": "ietf-system_system_config_ntp_post",
				 "description": "Configuration of the NTP client.",
				 "xml": {
					 "name": "ntp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_ntp_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_config_ntp_post"
			},
			 "ietf-system_system_config_ntp": {
				 "properties": {
					 "enabled": {
						 "description": "Indicates that the system should attempt to\nsynchronize the system clock with an NTP server\nfrom the 'ntp/server' list.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "enabled",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_ntp_config_server"
						},
						 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers."
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_config_ntp",
				 "description": "Configuration of the NTP client.",
				 "xml": {
					 "name": "ntp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_ntp_TOP": {
				 "type": "object",
				 "properties": {
					 "ntp": {
						 "$ref": "#/components/schemas/ietf-system_system_config_ntp"
					}
				},
				 "title": "ietf-system_system_config_ntp_TOP"
			},
			 "ietf-system_system_dns-resolver_server_config_udp-and-tcp_post": {
				 "type": "object",
				 "properties": {
					 "address": {
						 "description": "The address of the DNS server.",
						 "type": "string",
						 "xml": {
							 "name": "address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "port": {
						 "description": "The UDP and TCP port number of the DNS server.",
						 "format": "int32",
						 "default": 53,
						 "type": "integer",
						 "xml": {
							 "name": "port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "title": "ietf-system_system_dns-resolver_server_config_udp-and-tcp_post",
				 "description": "Contains UDP- and TCP-specific configuration\nparameters for DNS.",
				 "xml": {
					 "name": "udp-and-tcp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_server_config_udp-and-tcp_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server_config_udp-and-tcp_post"
			},
			 "ietf-system_system_dns-resolver_server_config_udp-and-tcp": {
				 "properties": {
					 "address": {
						 "description": "The address of the DNS server.",
						 "type": "string",
						 "xml": {
							 "name": "address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "port": {
						 "description": "The UDP and TCP port number of the DNS server.",
						 "format": "int32",
						 "default": 53,
						 "type": "integer",
						 "xml": {
							 "name": "port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "required": [
					"address"
				],
				 "type": "object",
				 "title": "ietf-system_system_dns-resolver_server_config_udp-and-tcp",
				 "description": "Contains UDP- and TCP-specific configuration\nparameters for DNS.",
				 "xml": {
					 "name": "udp-and-tcp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_server_config_udp-and-tcp_TOP": {
				 "type": "object",
				 "properties": {
					 "udp-and-tcp": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server_config_udp-and-tcp"
					}
				},
				 "title": "ietf-system_system_dns-resolver_server_config_udp-and-tcp_TOP"
			},
			 "ietf-system_system_dns-resolver_config_server_post": {
				 "type": "object",
				 "properties": {
					 "udp-and-tcp": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server_config_udp-and-tcp"
					}
				},
				 "title": "ietf-system_system_dns-resolver_config_server_post",
				 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist.",
				 "xml": {
					 "name": "server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_config_server_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_server_post"
			},
			 "ietf-system_system_dns-resolver_config_server": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the DNS server.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "udp-and-tcp": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server_config_udp-and-tcp"
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_dns-resolver_config_server",
				 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist.",
				 "xml": {
					 "name": "server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_config_server_TOP": {
				 "type": "object",
				 "properties": {
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_server"
						},
						 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist."
					}
				},
				 "title": "ietf-system_system_dns-resolver_config_server_TOP"
			},
			 "ietf-system_system_dns-resolver_config_options_post": {
				 "type": "object",
				 "properties": {
					 "timeout": {
						 "description": "The amount of time the resolver will wait for a\nresponse from each remote name server before\nretrying the query via a different name server.",
						 "format": "int32",
						 "default": 5,
						 "type": "integer",
						 "xml": {
							 "name": "timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "attempts": {
						 "description": "The number of times the resolver will send a query to\nall of its name servers before giving up and returning\nan error to the calling application.",
						 "format": "int32",
						 "default": 2,
						 "type": "integer",
						 "xml": {
							 "name": "attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "title": "ietf-system_system_dns-resolver_config_options_post",
				 "description": "Resolver options.  The set of available options has been\nlimited to those that are generally available across\ndifferent resolver implementations and generally useful.",
				 "xml": {
					 "name": "options",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_config_options_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_options_post"
			},
			 "ietf-system_system_dns-resolver_config_options": {
				 "properties": {
					 "timeout": {
						 "description": "The amount of time the resolver will wait for a\nresponse from each remote name server before\nretrying the query via a different name server.",
						 "format": "int32",
						 "default": 5,
						 "type": "integer",
						 "xml": {
							 "name": "timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "attempts": {
						 "description": "The number of times the resolver will send a query to\nall of its name servers before giving up and returning\nan error to the calling application.",
						 "format": "int32",
						 "default": 2,
						 "type": "integer",
						 "xml": {
							 "name": "attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_dns-resolver_config_options",
				 "description": "Resolver options.  The set of available options has been\nlimited to those that are generally available across\ndifferent resolver implementations and generally useful.",
				 "xml": {
					 "name": "options",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_config_options_TOP": {
				 "type": "object",
				 "properties": {
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_options"
					}
				},
				 "title": "ietf-system_system_dns-resolver_config_options_TOP"
			},
			 "ietf-system_system_config_dns-resolver_post": {
				 "type": "object",
				 "properties": {
					 "search": {
						 "type": "array",
						 "items": {
							 "minLength": 1,
							 "maxLength": 253,
							 "default": ".",
							 "type": "string"
						},
						 "description": "An ordered list of domains to search when resolving\na host name."
					},
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_server"
						},
						 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist."
					},
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_options"
					}
				},
				 "title": "ietf-system_system_config_dns-resolver_post",
				 "description": "Configuration of the DNS resolver.",
				 "xml": {
					 "name": "dns-resolver",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_dns-resolver_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_config_dns-resolver_post"
			},
			 "ietf-system_system_config_dns-resolver": {
				 "properties": {
					 "search": {
						 "type": "array",
						 "items": {
							 "minLength": 1,
							 "maxLength": 253,
							 "default": ".",
							 "type": "string"
						},
						 "description": "An ordered list of domains to search when resolving\na host name."
					},
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_server"
						},
						 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist."
					},
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_config_options"
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_config_dns-resolver",
				 "description": "Configuration of the DNS resolver.",
				 "xml": {
					 "name": "dns-resolver",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_dns-resolver_TOP": {
				 "type": "object",
				 "properties": {
					 "dns-resolver": {
						 "$ref": "#/components/schemas/ietf-system_system_config_dns-resolver"
					}
				},
				 "title": "ietf-system_system_config_dns-resolver_TOP"
			},
			 "ietf-system_system_radius_server_config_udp_post": {
				 "type": "object",
				 "properties": {
					 "address": {
						 "description": "The address of the RADIUS server.",
						 "type": "string",
						 "xml": {
							 "name": "address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "authentication-port": {
						 "description": "The port number of the RADIUS server.",
						 "format": "int32",
						 "default": 1812,
						 "type": "integer",
						 "xml": {
							 "name": "authentication-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "shared-secret": {
						 "description": "The shared secret, which is known to both the\nRADIUS client and server.",
						 "default": "Some shared-secret",
						 "type": "string",
						 "xml": {
							 "name": "shared-secret",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "title": "ietf-system_system_radius_server_config_udp_post",
				 "description": "Contains UDP-specific configuration parameters\nfor RADIUS.",
				 "xml": {
					 "name": "udp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_server_config_udp_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_radius_server_config_udp_post"
			},
			 "ietf-system_system_radius_server_config_udp": {
				 "properties": {
					 "address": {
						 "description": "The address of the RADIUS server.",
						 "type": "string",
						 "xml": {
							 "name": "address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "authentication-port": {
						 "description": "The port number of the RADIUS server.",
						 "format": "int32",
						 "default": 1812,
						 "type": "integer",
						 "xml": {
							 "name": "authentication-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "shared-secret": {
						 "description": "The shared secret, which is known to both the\nRADIUS client and server.",
						 "default": "Some shared-secret",
						 "type": "string",
						 "xml": {
							 "name": "shared-secret",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "required": [
					"address",
					"shared-secret"
				],
				 "type": "object",
				 "title": "ietf-system_system_radius_server_config_udp",
				 "description": "Contains UDP-specific configuration parameters\nfor RADIUS.",
				 "xml": {
					 "name": "udp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_server_config_udp_TOP": {
				 "type": "object",
				 "properties": {
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_server_config_udp"
					}
				},
				 "title": "ietf-system_system_radius_server_config_udp_TOP"
			},
			 "ietf-system_system_radius_config_server_post": {
				 "type": "object",
				 "properties": {
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_server_config_udp"
					},
					 "authentication-type": {
						 "$ref": "#/components/schemas/radius-authentication-type",
						 "xml": {
							 "name": "authentication-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "title": "ietf-system_system_radius_config_server_post",
				 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application.",
				 "xml": {
					 "name": "server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_config_server_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_radius_config_server_post"
			},
			 "ietf-system_system_radius_config_server": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the RADIUS server.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_server_config_udp"
					},
					 "authentication-type": {
						 "$ref": "#/components/schemas/radius-authentication-type",
						 "xml": {
							 "name": "authentication-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_radius_config_server",
				 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application.",
				 "xml": {
					 "name": "server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_config_server_TOP": {
				 "type": "object",
				 "properties": {
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_radius_config_server"
						},
						 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application."
					}
				},
				 "title": "ietf-system_system_radius_config_server_TOP"
			},
			 "ietf-system_system_radius_config_options_post": {
				 "type": "object",
				 "properties": {
					 "timeout": {
						 "description": "The number of seconds the device will wait for a\nresponse from each RADIUS server before trying with a\ndifferent server.",
						 "format": "int32",
						 "default": 5,
						 "type": "integer",
						 "xml": {
							 "name": "timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "attempts": {
						 "description": "The number of times the device will send a query to\nall of its RADIUS servers before giving up.",
						 "format": "int32",
						 "default": 2,
						 "type": "integer",
						 "xml": {
							 "name": "attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "title": "ietf-system_system_radius_config_options_post",
				 "description": "RADIUS client options.",
				 "xml": {
					 "name": "options",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_config_options_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_radius_config_options_post"
			},
			 "ietf-system_system_radius_config_options": {
				 "properties": {
					 "timeout": {
						 "description": "The number of seconds the device will wait for a\nresponse from each RADIUS server before trying with a\ndifferent server.",
						 "format": "int32",
						 "default": 5,
						 "type": "integer",
						 "xml": {
							 "name": "timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "attempts": {
						 "description": "The number of times the device will send a query to\nall of its RADIUS servers before giving up.",
						 "format": "int32",
						 "default": 2,
						 "type": "integer",
						 "xml": {
							 "name": "attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_radius_config_options",
				 "description": "RADIUS client options.",
				 "xml": {
					 "name": "options",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_config_options_TOP": {
				 "type": "object",
				 "properties": {
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_config_options"
					}
				},
				 "title": "ietf-system_system_radius_config_options_TOP"
			},
			 "ietf-system_system_config_radius_post": {
				 "type": "object",
				 "properties": {
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_radius_config_server"
						},
						 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application."
					},
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_config_options"
					}
				},
				 "title": "ietf-system_system_config_radius_post",
				 "description": "Configuration of the RADIUS client.",
				 "xml": {
					 "name": "radius",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_radius_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_config_radius_post"
			},
			 "ietf-system_system_config_radius": {
				 "properties": {
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_radius_config_server"
						},
						 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application."
					},
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_config_options"
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_config_radius",
				 "description": "Configuration of the RADIUS client.",
				 "xml": {
					 "name": "radius",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_radius_TOP": {
				 "type": "object",
				 "properties": {
					 "radius": {
						 "$ref": "#/components/schemas/ietf-system_system_config_radius"
					}
				},
				 "title": "ietf-system_system_config_radius_TOP"
			},
			 "ietf-system_system_authentication_user_config_authorized-key_post": {
				 "type": "object",
				 "properties": {
					 "algorithm": {
						 "description": "The public key algorithm name for this SSH key.\n\nValid values are the values in the IANA 'Secure Shell\n(SSH) Protocol Parameters' registry, Public Key\nAlgorithm Names.",
						 "default": "Some algorithm",
						 "type": "string",
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "key-data": {
						 "description": "The binary public key data for this SSH key, as\nspecified by RFC 4253, Section 6.6, i.e.:\n\n  string    certificate or public key format\n            identifier\n  byte[n]   key/certificate data.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key-data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "title": "ietf-system_system_authentication_user_config_authorized-key_post",
				 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253.",
				 "xml": {
					 "name": "authorized-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_authentication_user_config_authorized-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_authentication_user_config_authorized-key_post"
			},
			 "ietf-system_system_authentication_user_config_authorized-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the SSH key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "algorithm": {
						 "description": "The public key algorithm name for this SSH key.\n\nValid values are the values in the IANA 'Secure Shell\n(SSH) Protocol Parameters' registry, Public Key\nAlgorithm Names.",
						 "default": "Some algorithm",
						 "type": "string",
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "key-data": {
						 "description": "The binary public key data for this SSH key, as\nspecified by RFC 4253, Section 6.6, i.e.:\n\n  string    certificate or public key format\n            identifier\n  byte[n]   key/certificate data.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key-data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "required": [
					"algorithm",
					"key-data"
				],
				 "type": "object",
				 "title": "ietf-system_system_authentication_user_config_authorized-key",
				 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253.",
				 "xml": {
					 "name": "authorized-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_authentication_user_config_authorized-key_TOP": {
				 "type": "object",
				 "properties": {
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_user_config_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253."
					}
				},
				 "title": "ietf-system_system_authentication_user_config_authorized-key_TOP"
			},
			 "ietf-system_system_authentication_config_user_post": {
				 "type": "object",
				 "properties": {
					 "password": {
						 "description": "The password for this entry.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "$5$XvKq$JMAh2.TFJ.eTAq4GVG/WOw3VT4Zyxq0y6i05Owmol.h",
						 "type": "string",
						 "xml": {
							 "name": "password",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_user_config_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253."
					}
				},
				 "title": "ietf-system_system_authentication_config_user_post",
				 "description": "The list of local users configured on this device.",
				 "xml": {
					 "name": "user",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_authentication_config_user_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_authentication_config_user_post"
			},
			 "ietf-system_system_authentication_config_user": {
				 "properties": {
					 "name": {
						 "description": "The user name string identifying this entry.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "password": {
						 "description": "The password for this entry.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "$5$XvKq$JMAh2.TFJ.eTAq4GVG/WOw3VT4Zyxq0y6i05Owmol.h",
						 "type": "string",
						 "xml": {
							 "name": "password",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_user_config_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_authentication_config_user",
				 "description": "The list of local users configured on this device.",
				 "xml": {
					 "name": "user",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_authentication_config_user_TOP": {
				 "type": "object",
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_config_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "title": "ietf-system_system_authentication_config_user_TOP"
			},
			 "ietf-system_system_config_authentication_post": {
				 "type": "object",
				 "properties": {
					 "user-authentication-order": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/authentication-method"
						},
						 "description": "When the device authenticates a user with a password,\nit tries the authentication methods in this leaf-list in\norder.  If authentication with one method fails, the next\nmethod is used.  If no method succeeds, the user is\ndenied access.\n\nAn empty user-authentication-order leaf-list still allows\nauthentication of users using mechanisms that do not\ninvolve a password.\n\nIf the 'radius-authentication' feature is advertised by\nthe NETCONF server, the 'radius' identity can be added to\nthis list.\n\nIf the 'local-users' feature is advertised by the\nNETCONF server, the 'local-users' identity can be\nadded to this list."
					},
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_config_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "title": "ietf-system_system_config_authentication_post",
				 "description": "The authentication configuration subtree.",
				 "xml": {
					 "name": "authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_authentication_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_system_config_authentication_post"
			},
			 "ietf-system_system_config_authentication": {
				 "properties": {
					 "user-authentication-order": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/authentication-method"
						},
						 "description": "When the device authenticates a user with a password,\nit tries the authentication methods in this leaf-list in\norder.  If authentication with one method fails, the next\nmethod is used.  If no method succeeds, the user is\ndenied access.\n\nAn empty user-authentication-order leaf-list still allows\nauthentication of users using mechanisms that do not\ninvolve a password.\n\nIf the 'radius-authentication' feature is advertised by\nthe NETCONF server, the 'radius' identity can be added to\nthis list.\n\nIf the 'local-users' feature is advertised by the\nNETCONF server, the 'local-users' identity can be\nadded to this list."
					},
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_config_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_config_authentication",
				 "description": "The authentication configuration subtree.",
				 "xml": {
					 "name": "authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_config_authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "authentication": {
						 "$ref": "#/components/schemas/ietf-system_system_config_authentication"
					}
				},
				 "title": "ietf-system_system_config_authentication_TOP"
			},
			 "ietf-system_config_system_post": {
				 "type": "object",
				 "properties": {
					 "contact": {
						 "description": "The administrator contact information for the system.\n\nA server implementation MAY map this leaf to the sysContact\nMIB object.  Such an implementation needs to use some\nmechanism to handle the differences in size and characters\nallowed between this leaf and sysContact.  The definition of\nsuch a mechanism is outside the scope of this document.",
						 "default": "Some contact",
						 "type": "string",
						 "xml": {
							 "name": "contact",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "hostname": {
						 "description": "The name of the host.  This name can be a single domain\nlabel or the fully qualified domain name of the host.",
						 "minLength": 1,
						 "maxLength": 253,
						 "default": ".",
						 "type": "string",
						 "xml": {
							 "name": "hostname",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "location": {
						 "description": "The system location.\n\nA server implementation MAY map this leaf to the sysLocation\nMIB object.  Such an implementation needs to use some\nmechanism to handle the differences in size and characters\nallowed between this leaf and sysLocation.  The definition\nof such a mechanism is outside the scope of this document.",
						 "default": "Some location",
						 "type": "string",
						 "xml": {
							 "name": "location",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "clock": {
						 "$ref": "#/components/schemas/ietf-system_system_config_clock"
					},
					 "ntp": {
						 "$ref": "#/components/schemas/ietf-system_system_config_ntp"
					},
					 "dns-resolver": {
						 "$ref": "#/components/schemas/ietf-system_system_config_dns-resolver"
					},
					 "radius": {
						 "$ref": "#/components/schemas/ietf-system_system_config_radius"
					},
					 "authentication": {
						 "$ref": "#/components/schemas/ietf-system_system_config_authentication"
					},
					 "name": {
						 "description": "The name of the system.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:onap:system"
						}
					},
					 "web-ui": {
						 "description": "The URI of the system Web UI.",
						 "default": "Some web-ui",
						 "type": "string",
						 "xml": {
							 "name": "web-ui",
							 "namespace": "urn:onap:system"
						}
					}
				},
				 "title": "ietf-system_config_system_post",
				 "description": "System group configuration.",
				 "xml": {
					 "name": "system",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_config_system_post_xml": {
				 "$ref": "#/components/schemas/ietf-system_config_system_post"
			},
			 "ietf-system_config_system": {
				 "properties": {
					 "contact": {
						 "description": "The administrator contact information for the system.\n\nA server implementation MAY map this leaf to the sysContact\nMIB object.  Such an implementation needs to use some\nmechanism to handle the differences in size and characters\nallowed between this leaf and sysContact.  The definition of\nsuch a mechanism is outside the scope of this document.",
						 "default": "Some contact",
						 "type": "string",
						 "xml": {
							 "name": "contact",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "hostname": {
						 "description": "The name of the host.  This name can be a single domain\nlabel or the fully qualified domain name of the host.",
						 "minLength": 1,
						 "maxLength": 253,
						 "default": ".",
						 "type": "string",
						 "xml": {
							 "name": "hostname",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "location": {
						 "description": "The system location.\n\nA server implementation MAY map this leaf to the sysLocation\nMIB object.  Such an implementation needs to use some\nmechanism to handle the differences in size and characters\nallowed between this leaf and sysLocation.  The definition\nof such a mechanism is outside the scope of this document.",
						 "default": "Some location",
						 "type": "string",
						 "xml": {
							 "name": "location",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "clock": {
						 "$ref": "#/components/schemas/ietf-system_system_config_clock"
					},
					 "ntp": {
						 "$ref": "#/components/schemas/ietf-system_system_config_ntp"
					},
					 "dns-resolver": {
						 "$ref": "#/components/schemas/ietf-system_system_config_dns-resolver"
					},
					 "radius": {
						 "$ref": "#/components/schemas/ietf-system_system_config_radius"
					},
					 "authentication": {
						 "$ref": "#/components/schemas/ietf-system_system_config_authentication"
					},
					 "name": {
						 "description": "The name of the system.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:onap:system"
						}
					},
					 "web-ui": {
						 "description": "The URI of the system Web UI.",
						 "default": "Some web-ui",
						 "type": "string",
						 "xml": {
							 "name": "web-ui",
							 "namespace": "urn:onap:system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_config_system",
				 "description": "System group configuration.",
				 "xml": {
					 "name": "system",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_config_system_TOP": {
				 "type": "object",
				 "properties": {
					 "system": {
						 "$ref": "#/components/schemas/ietf-system_config_system"
					}
				},
				 "title": "ietf-system_config_system_TOP"
			},
			 "ietf-system_system_clock": {
				 "properties": {
					 "timezone-name": {
						 "description": "The TZ database name to use for the system, such\nas 'Europe/Stockholm'.",
						 "default": "Some timezone-name",
						 "type": "string",
						 "xml": {
							 "name": "timezone-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "timezone-utc-offset": {
						 "description": "The number of minutes to add to UTC time to\nidentify the time zone for this system.  For example,\n'UTC - 8:00 hours' would be represented as '-480'.\nNote that automatic daylight saving time adjustment\nis not provided if this object is used.",
						 "format": "int32",
						 "default": -1500,
						 "type": "integer",
						 "xml": {
							 "name": "timezone-utc-offset",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_clock",
				 "description": "Configuration of the system date and time properties.",
				 "xml": {
					 "name": "clock",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_clock_TOP": {
				 "type": "object",
				 "properties": {
					 "clock": {
						 "$ref": "#/components/schemas/ietf-system_system_clock"
					}
				},
				 "title": "ietf-system_system_clock_TOP"
			},
			 "ietf-system_system_ntp_server_udp": {
				 "properties": {
					 "address": {
						 "description": "The address of the NTP server.",
						 "type": "string",
						 "xml": {
							 "name": "address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "port": {
						 "description": "The port number of the NTP server.",
						 "format": "int32",
						 "default": 123,
						 "type": "integer",
						 "xml": {
							 "name": "port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "required": [
					"address"
				],
				 "type": "object",
				 "title": "ietf-system_system_ntp_server_udp",
				 "description": "Contains UDP-specific configuration parameters\nfor NTP.",
				 "xml": {
					 "name": "udp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_ntp_server_udp_TOP": {
				 "type": "object",
				 "properties": {
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_ntp_server_udp"
					}
				},
				 "title": "ietf-system_system_ntp_server_udp_TOP"
			},
			 "ietf-system_system_ntp_server": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the NTP server.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_ntp_server_udp"
					},
					 "association-type": {
						 "description": "The desired association type for this NTP server.",
						 "enum": [
							"server",
							"peer",
							"pool"
						],
						 "default": "server",
						 "type": "string",
						 "xml": {
							 "name": "association-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "iburst": {
						 "description": "Indicates whether this server should enable burst\nsynchronization or not.",
						 "default": false,
						 "type": "boolean",
						 "xml": {
							 "name": "iburst",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "prefer": {
						 "description": "Indicates whether this server should be preferred\nor not.",
						 "default": false,
						 "type": "boolean",
						 "xml": {
							 "name": "prefer",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_ntp_server",
				 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers.",
				 "xml": {
					 "name": "server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_ntp_server_TOP": {
				 "type": "object",
				 "properties": {
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_ntp_server"
						},
						 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers."
					}
				},
				 "title": "ietf-system_system_ntp_server_TOP"
			},
			 "ietf-system_system_ntp": {
				 "properties": {
					 "enabled": {
						 "description": "Indicates that the system should attempt to\nsynchronize the system clock with an NTP server\nfrom the 'ntp/server' list.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "enabled",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_ntp_server"
						},
						 "description": "List of NTP servers to use for system clock\nsynchronization.  If '/system/ntp/enabled'\nis 'true', then the system will attempt to\ncontact and utilize the specified NTP servers."
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_ntp",
				 "description": "Configuration of the NTP client.",
				 "xml": {
					 "name": "ntp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_ntp_TOP": {
				 "type": "object",
				 "properties": {
					 "ntp": {
						 "$ref": "#/components/schemas/ietf-system_system_ntp"
					}
				},
				 "title": "ietf-system_system_ntp_TOP"
			},
			 "ietf-system_system_dns-resolver_server_udp-and-tcp": {
				 "properties": {
					 "address": {
						 "description": "The address of the DNS server.",
						 "type": "string",
						 "xml": {
							 "name": "address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "port": {
						 "description": "The UDP and TCP port number of the DNS server.",
						 "format": "int32",
						 "default": 53,
						 "type": "integer",
						 "xml": {
							 "name": "port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "required": [
					"address"
				],
				 "type": "object",
				 "title": "ietf-system_system_dns-resolver_server_udp-and-tcp",
				 "description": "Contains UDP- and TCP-specific configuration\nparameters for DNS.",
				 "xml": {
					 "name": "udp-and-tcp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_server_udp-and-tcp_TOP": {
				 "type": "object",
				 "properties": {
					 "udp-and-tcp": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server_udp-and-tcp"
					}
				},
				 "title": "ietf-system_system_dns-resolver_server_udp-and-tcp_TOP"
			},
			 "ietf-system_system_dns-resolver_server": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the DNS server.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "udp-and-tcp": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server_udp-and-tcp"
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_dns-resolver_server",
				 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist.",
				 "xml": {
					 "name": "server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_server_TOP": {
				 "type": "object",
				 "properties": {
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server"
						},
						 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist."
					}
				},
				 "title": "ietf-system_system_dns-resolver_server_TOP"
			},
			 "ietf-system_system_dns-resolver_options": {
				 "properties": {
					 "timeout": {
						 "description": "The amount of time the resolver will wait for a\nresponse from each remote name server before\nretrying the query via a different name server.",
						 "format": "int32",
						 "default": 5,
						 "type": "integer",
						 "xml": {
							 "name": "timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "attempts": {
						 "description": "The number of times the resolver will send a query to\nall of its name servers before giving up and returning\nan error to the calling application.",
						 "format": "int32",
						 "default": 2,
						 "type": "integer",
						 "xml": {
							 "name": "attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_dns-resolver_options",
				 "description": "Resolver options.  The set of available options has been\nlimited to those that are generally available across\ndifferent resolver implementations and generally useful.",
				 "xml": {
					 "name": "options",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_options_TOP": {
				 "type": "object",
				 "properties": {
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_options"
					}
				},
				 "title": "ietf-system_system_dns-resolver_options_TOP"
			},
			 "ietf-system_system_dns-resolver": {
				 "properties": {
					 "search": {
						 "type": "array",
						 "items": {
							 "minLength": 1,
							 "maxLength": 253,
							 "default": ".",
							 "type": "string"
						},
						 "description": "An ordered list of domains to search when resolving\na host name."
					},
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_server"
						},
						 "description": "List of the DNS servers that the resolver should query.\n\nWhen the resolver is invoked by a calling application, it\nsends the query to the first name server in this list.  If\nno response has been received within 'timeout' seconds,\nthe resolver continues with the next server in the list.\nIf no response is received from any server, the resolver\ncontinues with the first server again.  When the resolver\nhas traversed the list 'attempts' times without receiving\nany response, it gives up and returns an error to the\ncalling application.\n\nImplementations MAY limit the number of entries in this\nlist."
					},
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver_options"
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_dns-resolver",
				 "description": "Configuration of the DNS resolver.",
				 "xml": {
					 "name": "dns-resolver",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_dns-resolver_TOP": {
				 "type": "object",
				 "properties": {
					 "dns-resolver": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver"
					}
				},
				 "title": "ietf-system_system_dns-resolver_TOP"
			},
			 "ietf-system_system_radius_server_udp": {
				 "properties": {
					 "address": {
						 "description": "The address of the RADIUS server.",
						 "type": "string",
						 "xml": {
							 "name": "address",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "authentication-port": {
						 "description": "The port number of the RADIUS server.",
						 "format": "int32",
						 "default": 1812,
						 "type": "integer",
						 "xml": {
							 "name": "authentication-port",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "shared-secret": {
						 "description": "The shared secret, which is known to both the\nRADIUS client and server.",
						 "default": "Some shared-secret",
						 "type": "string",
						 "xml": {
							 "name": "shared-secret",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "required": [
					"address",
					"shared-secret"
				],
				 "type": "object",
				 "title": "ietf-system_system_radius_server_udp",
				 "description": "Contains UDP-specific configuration parameters\nfor RADIUS.",
				 "xml": {
					 "name": "udp",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_server_udp_TOP": {
				 "type": "object",
				 "properties": {
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_server_udp"
					}
				},
				 "title": "ietf-system_system_radius_server_udp_TOP"
			},
			 "ietf-system_system_radius_server": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the RADIUS server.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "udp": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_server_udp"
					},
					 "authentication-type": {
						 "$ref": "#/components/schemas/radius-authentication-type",
						 "xml": {
							 "name": "authentication-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_radius_server",
				 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application.",
				 "xml": {
					 "name": "server",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_server_TOP": {
				 "type": "object",
				 "properties": {
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_radius_server"
						},
						 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application."
					}
				},
				 "title": "ietf-system_system_radius_server_TOP"
			},
			 "ietf-system_system_radius_options": {
				 "properties": {
					 "timeout": {
						 "description": "The number of seconds the device will wait for a\nresponse from each RADIUS server before trying with a\ndifferent server.",
						 "format": "int32",
						 "default": 5,
						 "type": "integer",
						 "xml": {
							 "name": "timeout",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "attempts": {
						 "description": "The number of times the device will send a query to\nall of its RADIUS servers before giving up.",
						 "format": "int32",
						 "default": 2,
						 "type": "integer",
						 "xml": {
							 "name": "attempts",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_radius_options",
				 "description": "RADIUS client options.",
				 "xml": {
					 "name": "options",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_options_TOP": {
				 "type": "object",
				 "properties": {
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_options"
					}
				},
				 "title": "ietf-system_system_radius_options_TOP"
			},
			 "ietf-system_system_radius": {
				 "properties": {
					 "server": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_radius_server"
						},
						 "description": "List of RADIUS servers used by the device.\n\nWhen the RADIUS client is invoked by a calling\napplication, it sends the query to the first server in\nthis list.  If no response has been received within\n'timeout' seconds, the client continues with the next\nserver in the list.  If no response is received from any\nserver, the client continues with the first server again.\nWhen the client has traversed the list 'attempts' times\nwithout receiving any response, it gives up and returns an\nerror to the calling application."
					},
					 "options": {
						 "$ref": "#/components/schemas/ietf-system_system_radius_options"
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_radius",
				 "description": "Configuration of the RADIUS client.",
				 "xml": {
					 "name": "radius",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_radius_TOP": {
				 "type": "object",
				 "properties": {
					 "radius": {
						 "$ref": "#/components/schemas/ietf-system_system_radius"
					}
				},
				 "title": "ietf-system_system_radius_TOP"
			},
			 "ietf-system_system_authentication_user_authorized-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for the SSH key.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "algorithm": {
						 "description": "The public key algorithm name for this SSH key.\n\nValid values are the values in the IANA 'Secure Shell\n(SSH) Protocol Parameters' registry, Public Key\nAlgorithm Names.",
						 "default": "Some algorithm",
						 "type": "string",
						 "xml": {
							 "name": "algorithm",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "key-data": {
						 "description": "The binary public key data for this SSH key, as\nspecified by RFC 4253, Section 6.6, i.e.:\n\n  string    certificate or public key format\n            identifier\n  byte[n]   key/certificate data.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "key-data",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "required": [
					"algorithm",
					"key-data"
				],
				 "type": "object",
				 "title": "ietf-system_system_authentication_user_authorized-key",
				 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253.",
				 "xml": {
					 "name": "authorized-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_authentication_user_authorized-key_TOP": {
				 "type": "object",
				 "properties": {
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_user_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253."
					}
				},
				 "title": "ietf-system_system_authentication_user_authorized-key_TOP"
			},
			 "ietf-system_system_authentication_user": {
				 "properties": {
					 "name": {
						 "description": "The user name string identifying this entry.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "password": {
						 "description": "The password for this entry.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "$5$rsEU77$E6.7z71UgxdJZ2LbGXy5VQFWKImQIen7m4oj51.nY8T",
						 "type": "string",
						 "xml": {
							 "name": "password",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "authorized-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_user_authorized-key"
						},
						 "description": "A list of public SSH keys for this user.  These keys\nare allowed for SSH authentication, as described in\nRFC 4253."
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_authentication_user",
				 "description": "The list of local users configured on this device.",
				 "xml": {
					 "name": "user",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_authentication_user_TOP": {
				 "type": "object",
				 "properties": {
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "title": "ietf-system_system_authentication_user_TOP"
			},
			 "ietf-system_system_authentication": {
				 "properties": {
					 "user-authentication-order": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/authentication-method"
						},
						 "description": "When the device authenticates a user with a password,\nit tries the authentication methods in this leaf-list in\norder.  If authentication with one method fails, the next\nmethod is used.  If no method succeeds, the user is\ndenied access.\n\nAn empty user-authentication-order leaf-list still allows\nauthentication of users using mechanisms that do not\ninvolve a password.\n\nIf the 'radius-authentication' feature is advertised by\nthe NETCONF server, the 'radius' identity can be added to\nthis list.\n\nIf the 'local-users' feature is advertised by the\nNETCONF server, the 'local-users' identity can be\nadded to this list."
					},
					 "user": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-system_system_authentication_user"
						},
						 "description": "The list of local users configured on this device."
					}
				},
				 "type": "object",
				 "title": "ietf-system_system_authentication",
				 "description": "The authentication configuration subtree.",
				 "xml": {
					 "name": "authentication",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_authentication_TOP": {
				 "type": "object",
				 "properties": {
					 "authentication": {
						 "$ref": "#/components/schemas/ietf-system_system_authentication"
					}
				},
				 "title": "ietf-system_system_authentication_TOP"
			},
			 "ietf-system_system": {
				 "properties": {
					 "contact": {
						 "description": "The administrator contact information for the system.\n\nA server implementation MAY map this leaf to the sysContact\nMIB object.  Such an implementation needs to use some\nmechanism to handle the differences in size and characters\nallowed between this leaf and sysContact.  The definition of\nsuch a mechanism is outside the scope of this document.",
						 "default": "Some contact",
						 "type": "string",
						 "xml": {
							 "name": "contact",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "hostname": {
						 "description": "The name of the host.  This name can be a single domain\nlabel or the fully qualified domain name of the host.",
						 "minLength": 1,
						 "maxLength": 253,
						 "default": ".",
						 "type": "string",
						 "xml": {
							 "name": "hostname",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "location": {
						 "description": "The system location.\n\nA server implementation MAY map this leaf to the sysLocation\nMIB object.  Such an implementation needs to use some\nmechanism to handle the differences in size and characters\nallowed between this leaf and sysLocation.  The definition\nof such a mechanism is outside the scope of this document.",
						 "default": "Some location",
						 "type": "string",
						 "xml": {
							 "name": "location",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "clock": {
						 "$ref": "#/components/schemas/ietf-system_system_clock"
					},
					 "ntp": {
						 "$ref": "#/components/schemas/ietf-system_system_ntp"
					},
					 "dns-resolver": {
						 "$ref": "#/components/schemas/ietf-system_system_dns-resolver"
					},
					 "radius": {
						 "$ref": "#/components/schemas/ietf-system_system_radius"
					},
					 "authentication": {
						 "$ref": "#/components/schemas/ietf-system_system_authentication"
					},
					 "name": {
						 "description": "The name of the system.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:onap:system"
						}
					},
					 "web-ui": {
						 "description": "The URI of the system Web UI.",
						 "default": "Some web-ui",
						 "type": "string",
						 "xml": {
							 "name": "web-ui",
							 "namespace": "urn:onap:system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system",
				 "description": "System group configuration.",
				 "xml": {
					 "name": "system",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system_TOP": {
				 "type": "object",
				 "properties": {
					 "system": {
						 "$ref": "#/components/schemas/ietf-system_system"
					}
				},
				 "title": "ietf-system_system_TOP"
			},
			 "ietf-system_system-state_platform": {
				 "properties": {
					 "os-name": {
						 "description": "The name of the operating system in use -\nfor example, 'Linux'.",
						 "default": "Some os-name",
						 "type": "string",
						 "xml": {
							 "name": "os-name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "os-release": {
						 "description": "The current release level of the operating\nsystem in use.  This string MAY indicate\nthe OS source code revision.",
						 "default": "Some os-release",
						 "type": "string",
						 "xml": {
							 "name": "os-release",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "os-version": {
						 "description": "The current version level of the operating\nsystem in use.  This string MAY indicate\nthe specific OS build date and target variant\ninformation.",
						 "default": "Some os-version",
						 "type": "string",
						 "xml": {
							 "name": "os-version",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "machine": {
						 "description": "A vendor-specific identifier string representing\nthe hardware in use.",
						 "default": "Some machine",
						 "type": "string",
						 "xml": {
							 "name": "machine",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system-state_platform",
				 "description": "Contains vendor-specific information for\nidentifying the system platform and operating system.",
				 "xml": {
					 "name": "platform",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system-state_platform_TOP": {
				 "type": "object",
				 "properties": {
					 "platform": {
						 "$ref": "#/components/schemas/ietf-system_system-state_platform"
					}
				},
				 "title": "ietf-system_system-state_platform_TOP"
			},
			 "ietf-system_system-state_clock": {
				 "properties": {
					 "current-datetime": {
						 "description": "The current system date and time.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:5619-65-38T23:23:54.5+58:72",
						 "type": "string",
						 "xml": {
							 "name": "current-datetime",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					},
					 "boot-datetime": {
						 "description": "The system date and time when the system last restarted.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:9212-66-61T73:44:83.0Z",
						 "type": "string",
						 "xml": {
							 "name": "boot-datetime",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-system_system-state_clock",
				 "description": "Monitoring of the system date and time properties.",
				 "xml": {
					 "name": "clock",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system-state_clock_TOP": {
				 "type": "object",
				 "properties": {
					 "clock": {
						 "$ref": "#/components/schemas/ietf-system_system-state_clock"
					}
				},
				 "title": "ietf-system_system-state_clock_TOP"
			},
			 "ietf-system_system-state": {
				 "properties": {
					 "platform": {
						 "$ref": "#/components/schemas/ietf-system_system-state_platform"
					},
					 "clock": {
						 "$ref": "#/components/schemas/ietf-system_system-state_clock"
					}
				},
				 "type": "object",
				 "title": "ietf-system_system-state",
				 "description": "System group operational state.",
				 "xml": {
					 "name": "system-state",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
				}
			},
			 "ietf-system_system-state_TOP": {
				 "type": "object",
				 "properties": {
					 "system-state": {
						 "$ref": "#/components/schemas/ietf-system_system-state"
					}
				},
				 "title": "ietf-system_system-state_TOP"
			},
			 "ietf-system_set-current-datetime_input": {
				 "properties": {
					 "current-datetime": {
						 "description": "The current system date and time.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:0471-54-68T30:05:43+31:60",
						 "type": "string",
						 "xml": {
							 "name": "current-datetime",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-system"
						}
					}
				},
				 "required": [
					"current-datetime"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "ietf-system_set-current-datetime_input"
			},
			 "ietf-system_set-current-datetime_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/ietf-system_set-current-datetime_input"
					}
				},
				 "title": "ietf-system_set-current-datetime_input_TOP"
			},
			 "tls-version-base1": {
				 "title": "tls-version-base",
				 "description": "Base identity used to identify TLS protocol versions.",
				 "enum": [
					"tls-version-base",
					"tls-1.0",
					"tls-1.1",
					"tls-1.2"
				],
				 "type": "string"
			},
			 "tls-1.0": {
				 "title": "tls-1.0",
				 "description": "TLS Protocol Version 1.0.",
				 "enum": [
					"tls-1.0"
				],
				 "type": "string"
			},
			 "tls-1.1": {
				 "title": "tls-1.1",
				 "description": "TLS Protocol Version 1.1.",
				 "enum": [
					"tls-1.1"
				],
				 "type": "string"
			},
			 "tls-1.2": {
				 "title": "tls-1.2",
				 "description": "TLS Protocol Version 1.2.",
				 "enum": [
					"tls-1.2"
				],
				 "type": "string"
			},
			 "cipher-suite-base1": {
				 "title": "cipher-suite-base",
				 "description": "Base identity used to identify TLS cipher suites.",
				 "enum": [
					"cipher-suite-base",
					"ecdhe-rsa-with-3des-ede-cbc-sha",
					"dhe-rsa-with-aes-128-cbc-sha256",
					"ecdhe-rsa-with-aes-128-cbc-sha",
					"rsa-with-aes-256-cbc-sha",
					"dhe-rsa-with-aes-256-cbc-sha256",
					"ecdhe-rsa-with-aes-256-gcm-sha384",
					"rsa-with-aes-128-cbc-sha256",
					"ecdhe-rsa-with-aes-128-gcm-sha256",
					"rsa-with-aes-256-cbc-sha256",
					"ecdhe-rsa-with-aes-256-cbc-sha",
					"ecdhe-rsa-with-aes-128-cbc-sha256",
					"rsa-with-aes-128-cbc-sha",
					"ecdhe-ecdsa-with-aes-256-gcm-sha384",
					"dhe-rsa-with-aes-256-cbc-sha",
					"dhe-rsa-with-aes-128-cbc-sha",
					"ecdhe-ecdsa-with-aes-256-cbc-sha384",
					"ecdhe-rsa-with-aes-256-cbc-sha384",
					"ecdhe-ecdsa-with-aes-128-cbc-sha256",
					"ecdhe-ecdsa-with-aes-128-gcm-sha256",
					"rsa-with-3des-ede-cbc-sha"
				],
				 "type": "string"
			},
			 "rsa-with-aes-128-cbc-sha": {
				 "title": "rsa-with-aes-128-cbc-sha",
				 "description": "Cipher suite TLS_RSA_WITH_AES_128_CBC_SHA.",
				 "enum": [
					"rsa-with-aes-128-cbc-sha"
				],
				 "type": "string"
			},
			 "rsa-with-aes-256-cbc-sha": {
				 "title": "rsa-with-aes-256-cbc-sha",
				 "description": "Cipher suite TLS_RSA_WITH_AES_256_CBC_SHA.",
				 "enum": [
					"rsa-with-aes-256-cbc-sha"
				],
				 "type": "string"
			},
			 "rsa-with-aes-128-cbc-sha256": {
				 "title": "rsa-with-aes-128-cbc-sha256",
				 "description": "Cipher suite TLS_RSA_WITH_AES_128_CBC_SHA256.",
				 "enum": [
					"rsa-with-aes-128-cbc-sha256"
				],
				 "type": "string"
			},
			 "rsa-with-aes-256-cbc-sha256": {
				 "title": "rsa-with-aes-256-cbc-sha256",
				 "description": "Cipher suite TLS_RSA_WITH_AES_256_CBC_SHA256.",
				 "enum": [
					"rsa-with-aes-256-cbc-sha256"
				],
				 "type": "string"
			},
			 "dhe-rsa-with-aes-128-cbc-sha": {
				 "title": "dhe-rsa-with-aes-128-cbc-sha",
				 "description": "Cipher suite TLS_DHE_RSA_WITH_AES_128_CBC_SHA.",
				 "enum": [
					"dhe-rsa-with-aes-128-cbc-sha"
				],
				 "type": "string"
			},
			 "dhe-rsa-with-aes-256-cbc-sha": {
				 "title": "dhe-rsa-with-aes-256-cbc-sha",
				 "description": "Cipher suite TLS_DHE_RSA_WITH_AES_256_CBC_SHA.",
				 "enum": [
					"dhe-rsa-with-aes-256-cbc-sha"
				],
				 "type": "string"
			},
			 "dhe-rsa-with-aes-128-cbc-sha256": {
				 "title": "dhe-rsa-with-aes-128-cbc-sha256",
				 "description": "Cipher suite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256.",
				 "enum": [
					"dhe-rsa-with-aes-128-cbc-sha256"
				],
				 "type": "string"
			},
			 "dhe-rsa-with-aes-256-cbc-sha256": {
				 "title": "dhe-rsa-with-aes-256-cbc-sha256",
				 "description": "Cipher suite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256.",
				 "enum": [
					"dhe-rsa-with-aes-256-cbc-sha256"
				],
				 "type": "string"
			},
			 "ecdhe-ecdsa-with-aes-128-cbc-sha256": {
				 "title": "ecdhe-ecdsa-with-aes-128-cbc-sha256",
				 "description": "Cipher suite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256.",
				 "enum": [
					"ecdhe-ecdsa-with-aes-128-cbc-sha256"
				],
				 "type": "string"
			},
			 "ecdhe-ecdsa-with-aes-256-cbc-sha384": {
				 "title": "ecdhe-ecdsa-with-aes-256-cbc-sha384",
				 "description": "Cipher suite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384.",
				 "enum": [
					"ecdhe-ecdsa-with-aes-256-cbc-sha384"
				],
				 "type": "string"
			},
			 "ecdhe-rsa-with-aes-128-cbc-sha256": {
				 "title": "ecdhe-rsa-with-aes-128-cbc-sha256",
				 "description": "Cipher suite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256.",
				 "enum": [
					"ecdhe-rsa-with-aes-128-cbc-sha256"
				],
				 "type": "string"
			},
			 "ecdhe-rsa-with-aes-256-cbc-sha384": {
				 "title": "ecdhe-rsa-with-aes-256-cbc-sha384",
				 "description": "Cipher suite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384.",
				 "enum": [
					"ecdhe-rsa-with-aes-256-cbc-sha384"
				],
				 "type": "string"
			},
			 "ecdhe-ecdsa-with-aes-128-gcm-sha256": {
				 "title": "ecdhe-ecdsa-with-aes-128-gcm-sha256",
				 "description": "Cipher suite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256.",
				 "enum": [
					"ecdhe-ecdsa-with-aes-128-gcm-sha256"
				],
				 "type": "string"
			},
			 "ecdhe-ecdsa-with-aes-256-gcm-sha384": {
				 "title": "ecdhe-ecdsa-with-aes-256-gcm-sha384",
				 "description": "Cipher suite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384.",
				 "enum": [
					"ecdhe-ecdsa-with-aes-256-gcm-sha384"
				],
				 "type": "string"
			},
			 "ecdhe-rsa-with-aes-128-gcm-sha256": {
				 "title": "ecdhe-rsa-with-aes-128-gcm-sha256",
				 "description": "Cipher suite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256.",
				 "enum": [
					"ecdhe-rsa-with-aes-128-gcm-sha256"
				],
				 "type": "string"
			},
			 "ecdhe-rsa-with-aes-256-gcm-sha384": {
				 "title": "ecdhe-rsa-with-aes-256-gcm-sha384",
				 "description": "Cipher suite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384.",
				 "enum": [
					"ecdhe-rsa-with-aes-256-gcm-sha384"
				],
				 "type": "string"
			},
			 "rsa-with-3des-ede-cbc-sha": {
				 "title": "rsa-with-3des-ede-cbc-sha",
				 "description": "Cipher suite TLS_RSA_WITH_3DES_EDE_CBC_SHA.",
				 "enum": [
					"rsa-with-3des-ede-cbc-sha"
				],
				 "type": "string"
			},
			 "ecdhe-rsa-with-3des-ede-cbc-sha": {
				 "title": "ecdhe-rsa-with-3des-ede-cbc-sha",
				 "description": "Cipher suite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA.",
				 "enum": [
					"ecdhe-rsa-with-3des-ede-cbc-sha"
				],
				 "type": "string"
			},
			 "ecdhe-rsa-with-aes-128-cbc-sha": {
				 "title": "ecdhe-rsa-with-aes-128-cbc-sha",
				 "description": "Cipher suite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA.",
				 "enum": [
					"ecdhe-rsa-with-aes-128-cbc-sha"
				],
				 "type": "string"
			},
			 "ecdhe-rsa-with-aes-256-cbc-sha": {
				 "title": "ecdhe-rsa-with-aes-256-cbc-sha",
				 "description": "Cipher suite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA.",
				 "enum": [
					"ecdhe-rsa-with-aes-256-cbc-sha"
				],
				 "type": "string"
			},
			 "ietf-truststore_truststore_certificates_config_certificate_post": {
				 "type": "object",
				 "properties": {
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					}
				},
				 "title": "ietf-truststore_truststore_certificates_config_certificate_post",
				 "description": "A certificate.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_certificates_config_certificate_post_xml": {
				 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_config_certificate_post"
			},
			 "ietf-truststore_truststore_certificates_config_certificate": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this certificate. The\nname must be unique across all lists of\ncertificates (not just this list) so that leafrefs\nfrom another module can resolve to unique values.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					}
				},
				 "required": [
					"cert"
				],
				 "type": "object",
				 "title": "ietf-truststore_truststore_certificates_config_certificate",
				 "description": "A certificate.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_certificates_config_certificate_TOP": {
				 "type": "object",
				 "properties": {
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_config_certificate"
						},
						 "description": "A certificate."
					}
				},
				 "title": "ietf-truststore_truststore_certificates_config_certificate_TOP"
			},
			 "ietf-truststore_truststore_config_certificates_post": {
				 "type": "object",
				 "properties": {
					 "description": {
						 "description": "An arbitrary description for this list of\ncertificates.",
						 "default": "Some description",
						 "type": "string",
						 "xml": {
							 "name": "description",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_config_certificate"
						},
						 "description": "A certificate."
					}
				},
				 "title": "ietf-truststore_truststore_config_certificates_post",
				 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections.",
				 "xml": {
					 "name": "certificates",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_config_certificates_post_xml": {
				 "$ref": "#/components/schemas/ietf-truststore_truststore_config_certificates_post"
			},
			 "ietf-truststore_truststore_config_certificates": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this list of certificates.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "description": {
						 "description": "An arbitrary description for this list of\ncertificates.",
						 "default": "Some description",
						 "type": "string",
						 "xml": {
							 "name": "description",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_config_certificate"
						},
						 "description": "A certificate."
					}
				},
				 "type": "object",
				 "title": "ietf-truststore_truststore_config_certificates",
				 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections.",
				 "xml": {
					 "name": "certificates",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_config_certificates_TOP": {
				 "type": "object",
				 "properties": {
					 "certificates": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_config_certificates"
						},
						 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections."
					}
				},
				 "title": "ietf-truststore_truststore_config_certificates_TOP"
			},
			 "ietf-truststore_truststore_host-keys_config_host-key_post": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "description": "The binary public key data for this host key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "host-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					}
				},
				 "title": "ietf-truststore_truststore_host-keys_config_host-key_post",
				 "description": "A host key.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_host-keys_config_host-key_post_xml": {
				 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_config_host-key_post"
			},
			 "ietf-truststore_truststore_host-keys_config_host-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this host-key. Must be\nunique across all lists of host-keys (not just\nthis list) so that a leafref to it from another module\ncan resolve to unique values.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "host-key": {
						 "description": "The binary public key data for this host key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "host-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					}
				},
				 "required": [
					"host-key"
				],
				 "type": "object",
				 "title": "ietf-truststore_truststore_host-keys_config_host-key",
				 "description": "A host key.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_host-keys_config_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_config_host-key"
						},
						 "description": "A host key."
					}
				},
				 "title": "ietf-truststore_truststore_host-keys_config_host-key_TOP"
			},
			 "ietf-truststore_truststore_config_host-keys_post": {
				 "type": "object",
				 "properties": {
					 "description": {
						 "description": "An arbitrary description for this list of SSH\nhost keys.",
						 "default": "Some description",
						 "type": "string",
						 "xml": {
							 "name": "description",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_config_host-key"
						},
						 "description": "A host key."
					}
				},
				 "title": "ietf-truststore_truststore_config_host-keys_post",
				 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers.",
				 "xml": {
					 "name": "host-keys",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_config_host-keys_post_xml": {
				 "$ref": "#/components/schemas/ietf-truststore_truststore_config_host-keys_post"
			},
			 "ietf-truststore_truststore_config_host-keys": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "description": {
						 "description": "An arbitrary description for this list of SSH\nhost keys.",
						 "default": "Some description",
						 "type": "string",
						 "xml": {
							 "name": "description",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_config_host-key"
						},
						 "description": "A host key."
					}
				},
				 "type": "object",
				 "title": "ietf-truststore_truststore_config_host-keys",
				 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers.",
				 "xml": {
					 "name": "host-keys",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_config_host-keys_TOP": {
				 "type": "object",
				 "properties": {
					 "host-keys": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_config_host-keys"
						},
						 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers."
					}
				},
				 "title": "ietf-truststore_truststore_config_host-keys_TOP"
			},
			 "ietf-truststore_config_truststore_post": {
				 "type": "object",
				 "properties": {
					 "certificates": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_config_certificates"
						},
						 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections."
					},
					 "host-keys": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_config_host-keys"
						},
						 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers."
					}
				},
				 "title": "ietf-truststore_config_truststore_post",
				 "description": "The truststore contains sets of X.509 certificates and\nSSH host keys.",
				 "xml": {
					 "name": "truststore",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_config_truststore_post_xml": {
				 "$ref": "#/components/schemas/ietf-truststore_config_truststore_post"
			},
			 "ietf-truststore_config_truststore": {
				 "properties": {
					 "certificates": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_config_certificates"
						},
						 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections."
					},
					 "host-keys": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_config_host-keys"
						},
						 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers."
					}
				},
				 "type": "object",
				 "title": "ietf-truststore_config_truststore",
				 "description": "The truststore contains sets of X.509 certificates and\nSSH host keys.",
				 "xml": {
					 "name": "truststore",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_config_truststore_TOP": {
				 "type": "object",
				 "properties": {
					 "truststore": {
						 "$ref": "#/components/schemas/ietf-truststore_config_truststore"
					}
				},
				 "title": "ietf-truststore_config_truststore_TOP"
			},
			 "ietf-truststore_truststore_certificates_certificate": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this certificate. The\nname must be unique across all lists of\ncertificates (not just this list) so that leafrefs\nfrom another module can resolve to unique values.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "cert": {
						 "description": "The binary certificate data for this certificate.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "cert",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					}
				},
				 "required": [
					"cert"
				],
				 "type": "object",
				 "title": "ietf-truststore_truststore_certificates_certificate",
				 "description": "A certificate.",
				 "xml": {
					 "name": "certificate",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_certificates_certificate_TOP": {
				 "type": "object",
				 "properties": {
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_certificate"
						},
						 "description": "A certificate."
					}
				},
				 "title": "ietf-truststore_truststore_certificates_certificate_TOP"
			},
			 "ietf-truststore_truststore_certificates": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this list of certificates.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "description": {
						 "description": "An arbitrary description for this list of\ncertificates.",
						 "default": "Some description",
						 "type": "string",
						 "xml": {
							 "name": "description",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "certificate": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates_certificate"
						},
						 "description": "A certificate."
					}
				},
				 "type": "object",
				 "title": "ietf-truststore_truststore_certificates",
				 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections.",
				 "xml": {
					 "name": "certificates",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_certificates_TOP": {
				 "type": "object",
				 "properties": {
					 "certificates": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates"
						},
						 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections."
					}
				},
				 "title": "ietf-truststore_truststore_certificates_TOP"
			},
			 "ietf-truststore_truststore_host-keys_host-key": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this host-key. Must be\nunique across all lists of host-keys (not just\nthis list) so that a leafref to it from another module\ncan resolve to unique values.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "host-key": {
						 "description": "The binary public key data for this host key.",
						 "format": "byte",
						 "type": "string",
						 "xml": {
							 "name": "host-key",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					}
				},
				 "required": [
					"host-key"
				],
				 "type": "object",
				 "title": "ietf-truststore_truststore_host-keys_host-key",
				 "description": "A host key.",
				 "xml": {
					 "name": "host-key",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_host-keys_host-key_TOP": {
				 "type": "object",
				 "properties": {
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_host-key"
						},
						 "description": "A host key."
					}
				},
				 "title": "ietf-truststore_truststore_host-keys_host-key_TOP"
			},
			 "ietf-truststore_truststore_host-keys": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name for this list of SSH\nhost keys.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "description": {
						 "description": "An arbitrary description for this list of SSH\nhost keys.",
						 "default": "Some description",
						 "type": "string",
						 "xml": {
							 "name": "description",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
						}
					},
					 "host-key": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys_host-key"
						},
						 "description": "A host key."
					}
				},
				 "type": "object",
				 "title": "ietf-truststore_truststore_host-keys",
				 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers.",
				 "xml": {
					 "name": "host-keys",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_host-keys_TOP": {
				 "type": "object",
				 "properties": {
					 "host-keys": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys"
						},
						 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers."
					}
				},
				 "title": "ietf-truststore_truststore_host-keys_TOP"
			},
			 "ietf-truststore_truststore": {
				 "properties": {
					 "certificates": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_certificates"
						},
						 "description": "A list of certificates.  These certificates can be\nused by a server to authenticate clients, or by a client\nto authenticate servers.  Each list of certificates\nSHOULD be specific to a purpose, as the list as a whole\nmay be referenced by other modules.  For instance, a\nRESTCONF server's configuration might use a specific list\nof certificates for when authenticating RESTCONF\nclient connections."
					},
					 "host-keys": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-truststore_truststore_host-keys"
						},
						 "description": "A list of host keys.  These host-keys can\nbe used by clients to authenticate SSH servers.  Each\nlist of host keys SHOULD be specific to a purpose,\nso the list as a whole may be referenced by other modules.\nFor instance, a NETCONF client's configuration might\npoint to a specific list of host keys for when\nauthenticating specific SSH servers."
					}
				},
				 "type": "object",
				 "title": "ietf-truststore_truststore",
				 "description": "The truststore contains sets of X.509 certificates and\nSSH host keys.",
				 "xml": {
					 "name": "truststore",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-truststore"
				}
			},
			 "ietf-truststore_truststore_TOP": {
				 "type": "object",
				 "properties": {
					 "truststore": {
						 "$ref": "#/components/schemas/ietf-truststore_truststore"
					}
				},
				 "title": "ietf-truststore_truststore_TOP"
			},
			 "cert-to-name1": {
				 "title": "cert-to-name",
				 "description": "Base identity for algorithms to derive a name from a\ncertificate.",
				 "enum": [
					"cert-to-name",
					"specified",
					"san-ip-address",
					"san-any",
					"san-rfc822-name",
					"common-name",
					"san-dns-name"
				],
				 "type": "string"
			},
			 "specified": {
				 "title": "specified",
				 "description": "Directly specifies the name to be used for the certificate.\nThe value of the leaf 'name' in the cert-to-name list is\nused.",
				 "enum": [
					"specified"
				],
				 "type": "string"
			},
			 "san-rfc822-name": {
				 "title": "san-rfc822-name",
				 "description": "Maps a subjectAltName's rfc822Name to a name.  The local part\nof the rfc822Name is passed unaltered, but the host-part of\nthe name must be passed in lowercase.  For example, the\nrfc822Name field FooBar@Example.COM is mapped to name\nFooBar@example.com.",
				 "enum": [
					"san-rfc822-name"
				],
				 "type": "string"
			},
			 "san-dns-name": {
				 "title": "san-dns-name",
				 "description": "Maps a subjectAltName's dNSName to a name after first\nconverting it to all lowercase (RFC 5280 does not specify\nconverting to lowercase, so this involves an extra step).\nThis mapping results in a 1:1 correspondence between\nsubjectAltName dNSName values and the name values.",
				 "enum": [
					"san-dns-name"
				],
				 "type": "string"
			},
			 "san-ip-address": {
				 "title": "san-ip-address",
				 "description": "Maps a subjectAltName's iPAddress to a name by\ntransforming the binary-encoded address as follows:\n\n  1) for IPv4, the value is converted into a\n     decimal-dotted quad address (e.g., '192.0.2.1').\n\n  2) for IPv6 addresses, the value is converted into a\n     32-character, all-lowercase hexadecimal string\n     without any colon separators.\n\nThis mapping results in a 1:1 correspondence between\nsubjectAltName iPAddress values and the name values.",
				 "enum": [
					"san-ip-address"
				],
				 "type": "string"
			},
			 "san-any": {
				 "title": "san-any",
				 "description": "Maps any of the following fields using the corresponding\nmapping algorithms:\n\n  +------------+-----------------+\n  | Type       | Algorithm       |\n  |------------+-----------------|\n  | rfc822Name | san-rfc822-name |\n  | dNSName    | san-dns-name    |\n  | iPAddress  | san-ip-address  |\n  +------------+-----------------+\n\nThe first matching subjectAltName value found in the\ncertificate of the above types MUST be used when deriving\nthe name.  The mapping algorithm specified in the\n'Algorithm' column MUST be used to derive the name.\n\nThis mapping results in a 1:1 correspondence between\nsubjectAltName values and name values.  The three sub-mapping\nalgorithms produced by this combined algorithm cannot produce\nconflicting results between themselves.",
				 "enum": [
					"san-any"
				],
				 "type": "string"
			},
			 "common-name": {
				 "title": "common-name",
				 "description": "Maps a certificate's CommonName to a name after converting\nit to a UTF-8 encoding.  The usage of CommonNames is\ndeprecated, and users are encouraged to use subjectAltName\nmapping methods instead.  This mapping results in a 1:1\ncorrespondence between certificate CommonName values and name\nvalues.",
				 "enum": [
					"common-name"
				],
				 "type": "string"
			},
			 "ietf-yang-library_yang-library_module-set_module_submodule": {
				 "properties": {
					 "location": {
						 "type": "array",
						 "items": {
							 "default": "Some location",
							 "type": "string"
						},
						 "description": "Contains a URL that represents the YANG schema\nresource for this module or submodule.\n\nThis leaf will only be present if there is a URL\navailable for retrieval of the schema for this entry."
					},
					 "name": {
						 "description": "The YANG module or submodule name.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "?:y_",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "revision": {
						 "description": "The YANG module or submodule revision date.  If no revision\nstatement is present in the YANG module or submodule, this\nleaf is not instantiated.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:3700-69-56",
						 "type": "string",
						 "xml": {
							 "name": "revision",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					}
				},
				 "required": [
					"name"
				],
				 "type": "object",
				 "title": "ietf-yang-library_yang-library_module-set_module_submodule",
				 "description": "Each entry represents one submodule within the\nparent module.",
				 "xml": {
					 "name": "submodule",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_yang-library_module-set_module_submodule_TOP": {
				 "type": "object",
				 "properties": {
					 "submodule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_module_submodule"
						},
						 "description": "Each entry represents one submodule within the\nparent module."
					}
				},
				 "title": "ietf-yang-library_yang-library_module-set_module_submodule_TOP"
			},
			 "ietf-yang-library_yang-library_module-set_module": {
				 "properties": {
					 "namespace": {
						 "description": "The XML namespace identifier for this module.",
						 "default": "Some namespace",
						 "type": "string",
						 "xml": {
							 "name": "namespace",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "submodule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_module_submodule"
						},
						 "description": "Each entry represents one submodule within the\nparent module."
					},
					 "location": {
						 "type": "array",
						 "items": {
							 "default": "Some location",
							 "type": "string"
						},
						 "description": "Contains a URL that represents the YANG schema\nresource for this module or submodule.\n\nThis leaf will only be present if there is a URL\navailable for retrieval of the schema for this entry."
					},
					 "feature": {
						 "type": "array",
						 "items": {
							 "minLength": 1,
							 "maxLength": 2147483647,
							 "default": "?:_f",
							 "type": "string"
						},
						 "description": "List of all YANG feature names from this module that are\nsupported by the server, regardless whether they are defined\nin the module or any included submodule."
					},
					 "deviation": {
						 "type": "array",
						 "items": {
							 "default": "Some deviation",
							 "type": "string"
						},
						 "description": "List of all YANG deviation modules used by this server to\nmodify the conformance of the module associated with this\nentry.  Note that the same module can be used for deviations\nfor multiple modules, so the same entry MAY appear within\nmultiple 'module' entries.\n\nThis reference MUST NOT (directly or indirectly)\nrefer to the module being deviated.\n\nRobust clients may want to make sure that they handle a\nsituation where a module deviates itself (directly or\nindirectly) gracefully."
					},
					 "name": {
						 "description": "The YANG module or submodule name.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "?:I",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "revision": {
						 "description": "The YANG module or submodule revision date.  If no revision\nstatement is present in the YANG module or submodule, this\nleaf is not instantiated.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:4049-22-66",
						 "type": "string",
						 "xml": {
							 "name": "revision",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					}
				},
				 "required": [
					"namespace",
					"name"
				],
				 "type": "object",
				 "title": "ietf-yang-library_yang-library_module-set_module",
				 "description": "An entry in this list represents a module implemented by the\nserver, as per Section 5.6.5 of RFC 7950, with a particular\nset of supported features and deviations.",
				 "xml": {
					 "name": "module",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_yang-library_module-set_module_TOP": {
				 "type": "object",
				 "properties": {
					 "module": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_module"
						},
						 "description": "An entry in this list represents a module implemented by the\nserver, as per Section 5.6.5 of RFC 7950, with a particular\nset of supported features and deviations."
					}
				},
				 "title": "ietf-yang-library_yang-library_module-set_module_TOP"
			},
			 "ietf-yang-library_yang-library_module-set_import-only-module_submodule": {
				 "properties": {
					 "location": {
						 "type": "array",
						 "items": {
							 "default": "Some location",
							 "type": "string"
						},
						 "description": "Contains a URL that represents the YANG schema\nresource for this module or submodule.\n\nThis leaf will only be present if there is a URL\navailable for retrieval of the schema for this entry."
					},
					 "name": {
						 "description": "The YANG module or submodule name.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "?:_-_",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "revision": {
						 "description": "The YANG module or submodule revision date.  If no revision\nstatement is present in the YANG module or submodule, this\nleaf is not instantiated.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:3742-40-21",
						 "type": "string",
						 "xml": {
							 "name": "revision",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					}
				},
				 "required": [
					"name"
				],
				 "type": "object",
				 "title": "ietf-yang-library_yang-library_module-set_import-only-module_submodule",
				 "description": "Each entry represents one submodule within the\nparent module.",
				 "xml": {
					 "name": "submodule",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_yang-library_module-set_import-only-module_submodule_TOP": {
				 "type": "object",
				 "properties": {
					 "submodule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_import-only-module_submodule"
						},
						 "description": "Each entry represents one submodule within the\nparent module."
					}
				},
				 "title": "ietf-yang-library_yang-library_module-set_import-only-module_submodule_TOP"
			},
			 "ietf-yang-library_yang-library_module-set_import-only-module": {
				 "properties": {
					 "name": {
						 "description": "The YANG module name.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "?:_z",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "revision": {
						 "description": "The YANG module revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module.",
						 "type": "string",
						 "xml": {
							 "name": "revision",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "namespace": {
						 "description": "The XML namespace identifier for this module.",
						 "default": "Some namespace",
						 "type": "string",
						 "xml": {
							 "name": "namespace",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "submodule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_import-only-module_submodule"
						},
						 "description": "Each entry represents one submodule within the\nparent module."
					},
					 "location": {
						 "type": "array",
						 "items": {
							 "default": "Some location",
							 "type": "string"
						},
						 "description": "Contains a URL that represents the YANG schema\nresource for this module or submodule.\n\nThis leaf will only be present if there is a URL\navailable for retrieval of the schema for this entry."
					}
				},
				 "required": [
					"namespace"
				],
				 "type": "object",
				 "title": "ietf-yang-library_yang-library_module-set_import-only-module",
				 "description": "An entry in this list indicates that the server imports\nreusable definitions from the specified revision of the\nmodule but does not implement any protocol-accessible\nobjects from this revision.\n\nMultiple entries for the same module name MAY exist.  This\ncan occur if multiple modules import the same module but\nspecify different revision dates in the import statements.",
				 "xml": {
					 "name": "import-only-module",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_yang-library_module-set_import-only-module_TOP": {
				 "type": "object",
				 "properties": {
					 "import-only-module": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_import-only-module"
						},
						 "description": "An entry in this list indicates that the server imports\nreusable definitions from the specified revision of the\nmodule but does not implement any protocol-accessible\nobjects from this revision.\n\nMultiple entries for the same module name MAY exist.  This\ncan occur if multiple modules import the same module but\nspecify different revision dates in the import statements."
					}
				},
				 "title": "ietf-yang-library_yang-library_module-set_import-only-module_TOP"
			},
			 "ietf-yang-library_yang-library_module-set": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name of the module set.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "module": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_module"
						},
						 "description": "An entry in this list represents a module implemented by the\nserver, as per Section 5.6.5 of RFC 7950, with a particular\nset of supported features and deviations."
					},
					 "import-only-module": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set_import-only-module"
						},
						 "description": "An entry in this list indicates that the server imports\nreusable definitions from the specified revision of the\nmodule but does not implement any protocol-accessible\nobjects from this revision.\n\nMultiple entries for the same module name MAY exist.  This\ncan occur if multiple modules import the same module but\nspecify different revision dates in the import statements."
					}
				},
				 "type": "object",
				 "title": "ietf-yang-library_yang-library_module-set",
				 "description": "A set of modules that may be used by one or more schemas.\n\nA module set does not have to be referentially complete,\ni.e., it may define modules that contain import statements\nfor other modules not included in the module set.",
				 "xml": {
					 "name": "module-set",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_yang-library_module-set_TOP": {
				 "type": "object",
				 "properties": {
					 "module-set": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set"
						},
						 "description": "A set of modules that may be used by one or more schemas.\n\nA module set does not have to be referentially complete,\ni.e., it may define modules that contain import statements\nfor other modules not included in the module set."
					}
				},
				 "title": "ietf-yang-library_yang-library_module-set_TOP"
			},
			 "ietf-yang-library_yang-library_schema": {
				 "properties": {
					 "name": {
						 "description": "An arbitrary name of the schema.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "module-set": {
						 "type": "array",
						 "items": {
							 "default": "Some module-set",
							 "type": "string"
						},
						 "description": "A set of module-sets that are included in this schema.\nIf a non-import-only module appears in multiple module\nsets, then the module revision and the associated features\nand deviations must be identical."
					}
				},
				 "type": "object",
				 "title": "ietf-yang-library_yang-library_schema",
				 "description": "A datastore schema that may be used by one or more\ndatastores.\n\nThe schema must be valid and referentially complete, i.e.,\nit must contain modules to satisfy all used import\nstatements for all modules specified in the schema.",
				 "xml": {
					 "name": "schema",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_yang-library_schema_TOP": {
				 "type": "object",
				 "properties": {
					 "schema": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_schema"
						},
						 "description": "A datastore schema that may be used by one or more\ndatastores.\n\nThe schema must be valid and referentially complete, i.e.,\nit must contain modules to satisfy all used import\nstatements for all modules specified in the schema."
					}
				},
				 "title": "ietf-yang-library_yang-library_schema_TOP"
			},
			 "ietf-yang-library_yang-library_datastore": {
				 "properties": {
					 "name": {
						 "$ref": "#/components/schemas/datastore",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "schema": {
						 "description": "A reference to the schema supported by this datastore.\nAll non-import-only modules of the schema are implemented\nwith their associated features and deviations.",
						 "default": "Some schema",
						 "type": "string",
						 "xml": {
							 "name": "schema",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					}
				},
				 "required": [
					"schema"
				],
				 "type": "object",
				 "title": "ietf-yang-library_yang-library_datastore",
				 "description": "A datastore supported by this server.\n\nEach datastore indicates which schema it supports.\n\nThe server MUST instantiate one entry in this list per\nspecific datastore it supports.\nEach datastore entry with the same datastore schema SHOULD\nreference the same schema.",
				 "xml": {
					 "name": "datastore",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_yang-library_datastore_TOP": {
				 "type": "object",
				 "properties": {
					 "datastore": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_datastore"
						},
						 "description": "A datastore supported by this server.\n\nEach datastore indicates which schema it supports.\n\nThe server MUST instantiate one entry in this list per\nspecific datastore it supports.\nEach datastore entry with the same datastore schema SHOULD\nreference the same schema."
					}
				},
				 "title": "ietf-yang-library_yang-library_datastore_TOP"
			},
			 "ietf-yang-library_yang-library": {
				 "properties": {
					 "module-set": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_module-set"
						},
						 "description": "A set of modules that may be used by one or more schemas.\n\nA module set does not have to be referentially complete,\ni.e., it may define modules that contain import statements\nfor other modules not included in the module set."
					},
					 "schema": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_schema"
						},
						 "description": "A datastore schema that may be used by one or more\ndatastores.\n\nThe schema must be valid and referentially complete, i.e.,\nit must contain modules to satisfy all used import\nstatements for all modules specified in the schema."
					},
					 "datastore": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_yang-library_datastore"
						},
						 "description": "A datastore supported by this server.\n\nEach datastore indicates which schema it supports.\n\nThe server MUST instantiate one entry in this list per\nspecific datastore it supports.\nEach datastore entry with the same datastore schema SHOULD\nreference the same schema."
					},
					 "content-id": {
						 "description": "A server-generated identifier of the contents of the\n'/yang-library' tree.  The server MUST change the value of\nthis leaf if the information represented by the\n'/yang-library' tree, except '/yang-library/content-id', has\nchanged.",
						 "default": "Some content-id",
						 "type": "string",
						 "xml": {
							 "name": "content-id",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					}
				},
				 "required": [
					"content-id"
				],
				 "type": "object",
				 "title": "ietf-yang-library_yang-library",
				 "description": "Container holding the entire YANG library of this server.",
				 "xml": {
					 "name": "yang-library",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_yang-library_TOP": {
				 "type": "object",
				 "properties": {
					 "yang-library": {
						 "$ref": "#/components/schemas/ietf-yang-library_yang-library"
					}
				},
				 "title": "ietf-yang-library_yang-library_TOP"
			},
			 "ietf-yang-library_modules-state_module_deviation": {
				 "properties": {
					 "name": {
						 "description": "The YANG module or submodule name.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "?:D",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "revision": {
						 "description": "The YANG module or submodule revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module or submodule.",
						 "type": "string",
						 "xml": {
							 "name": "revision",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-yang-library_modules-state_module_deviation",
				 "description": "List of YANG deviation module names and revisions\nused by this server to modify the conformance of\nthe module associated with this entry.  Note that\nthe same module can be used for deviations for\nmultiple modules, so the same entry MAY appear\nwithin multiple 'module' entries.\n\nThe deviation module MUST be present in the 'module'\nlist, with the same name and revision values.\nThe 'conformance-type' value will be 'implement' for\nthe deviation module.",
				 "xml": {
					 "name": "deviation",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_modules-state_module_deviation_TOP": {
				 "type": "object",
				 "properties": {
					 "deviation": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_deviation"
						},
						 "description": "List of YANG deviation module names and revisions\nused by this server to modify the conformance of\nthe module associated with this entry.  Note that\nthe same module can be used for deviations for\nmultiple modules, so the same entry MAY appear\nwithin multiple 'module' entries.\n\nThe deviation module MUST be present in the 'module'\nlist, with the same name and revision values.\nThe 'conformance-type' value will be 'implement' for\nthe deviation module."
					}
				},
				 "title": "ietf-yang-library_modules-state_module_deviation_TOP"
			},
			 "ietf-yang-library_modules-state_module_submodule": {
				 "properties": {
					 "name": {
						 "description": "The YANG module or submodule name.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "?:_6-z_",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "revision": {
						 "description": "The YANG module or submodule revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module or submodule.",
						 "type": "string",
						 "xml": {
							 "name": "revision",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "schema": {
						 "description": "Contains a URL that represents the YANG schema\nresource for this module or submodule.\n\nThis leaf will only be present if there is a URL\navailable for retrieval of the schema for this entry.",
						 "default": "Some schema",
						 "type": "string",
						 "xml": {
							 "name": "schema",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					}
				},
				 "type": "object",
				 "title": "ietf-yang-library_modules-state_module_submodule",
				 "description": "Each entry represents one submodule within the\nparent module.",
				 "xml": {
					 "name": "submodule",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_modules-state_module_submodule_TOP": {
				 "type": "object",
				 "properties": {
					 "submodule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_submodule"
						},
						 "description": "Each entry represents one submodule within the\nparent module."
					}
				},
				 "title": "ietf-yang-library_modules-state_module_submodule_TOP"
			},
			 "ietf-yang-library_modules-state_module": {
				 "properties": {
					 "namespace": {
						 "description": "The XML namespace identifier for this module.",
						 "default": "Some namespace",
						 "type": "string",
						 "xml": {
							 "name": "namespace",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "feature": {
						 "type": "array",
						 "items": {
							 "minLength": 1,
							 "maxLength": 2147483647,
							 "default": "?:g",
							 "type": "string"
						},
						 "description": "List of YANG feature names from this module that are\nsupported by the server, regardless of whether they are\ndefined in the module or any included submodule."
					},
					 "deviation": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_deviation"
						},
						 "description": "List of YANG deviation module names and revisions\nused by this server to modify the conformance of\nthe module associated with this entry.  Note that\nthe same module can be used for deviations for\nmultiple modules, so the same entry MAY appear\nwithin multiple 'module' entries.\n\nThe deviation module MUST be present in the 'module'\nlist, with the same name and revision values.\nThe 'conformance-type' value will be 'implement' for\nthe deviation module."
					},
					 "conformance-type": {
						 "description": "Indicates the type of conformance the server is claiming\nfor the YANG module identified by this entry.",
						 "enum": [
							"implement",
							"import"
						],
						 "default": "implement",
						 "type": "string",
						 "xml": {
							 "name": "conformance-type",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "submodule": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module_submodule"
						},
						 "description": "Each entry represents one submodule within the\nparent module."
					},
					 "name": {
						 "description": "The YANG module or submodule name.",
						 "minLength": 1,
						 "maxLength": 2147483647,
						 "default": "?:_",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "revision": {
						 "description": "The YANG module or submodule revision date.\nA zero-length string is used if no revision statement\nis present in the YANG module or submodule.",
						 "type": "string",
						 "xml": {
							 "name": "revision",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "schema": {
						 "description": "Contains a URL that represents the YANG schema\nresource for this module or submodule.\n\nThis leaf will only be present if there is a URL\navailable for retrieval of the schema for this entry.",
						 "default": "Some schema",
						 "type": "string",
						 "xml": {
							 "name": "schema",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					}
				},
				 "required": [
					"namespace",
					"conformance-type"
				],
				 "type": "object",
				 "title": "ietf-yang-library_modules-state_module",
				 "description": "Each entry represents one revision of one module\ncurrently supported by the server.",
				 "xml": {
					 "name": "module",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_modules-state_module_TOP": {
				 "type": "object",
				 "properties": {
					 "module": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module"
						},
						 "description": "Each entry represents one revision of one module\ncurrently supported by the server."
					}
				},
				 "title": "ietf-yang-library_modules-state_module_TOP"
			},
			 "ietf-yang-library_modules-state": {
				 "properties": {
					 "module-set-id": {
						 "description": "Contains a server-specific identifier representing\nthe current set of modules and submodules.  The\nserver MUST change the value of this leaf if the\ninformation represented by the 'module' list instances\nhas changed.",
						 "default": "Some module-set-id",
						 "type": "string",
						 "xml": {
							 "name": "module-set-id",
							 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
						}
					},
					 "module": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/ietf-yang-library_modules-state_module"
						},
						 "description": "Each entry represents one revision of one module\ncurrently supported by the server."
					}
				},
				 "required": [
					"module-set-id"
				],
				 "type": "object",
				 "title": "ietf-yang-library_modules-state",
				 "description": "Contains YANG module monitoring information.",
				 "xml": {
					 "name": "modules-state",
					 "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-library"
				}
			},
			 "ietf-yang-library_modules-state_TOP": {
				 "type": "object",
				 "properties": {
					 "modules-state": {
						 "$ref": "#/components/schemas/ietf-yang-library_modules-state"
					}
				},
				 "title": "ietf-yang-library_modules-state_TOP"
			},
			 "nc-notifications_netconf_streams_stream": {
				 "properties": {
					 "name": {
						 "description": "The name of the event stream. If this is the default\nNETCONF stream, this must have the value 'NETCONF'.",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:ietf:params:xml:ns:netmod:notification"
						}
					},
					 "description": {
						 "description": "A description of the event stream, including such\ninformation as the type of events that are sent over\nthis stream.",
						 "default": "Some description",
						 "type": "string",
						 "xml": {
							 "name": "description",
							 "namespace": "urn:ietf:params:xml:ns:netmod:notification"
						}
					},
					 "replaySupport": {
						 "description": "A description of the event stream, including such\ninformation as the type of events that are sent over\nthis stream.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "replaySupport",
							 "namespace": "urn:ietf:params:xml:ns:netmod:notification"
						}
					},
					 "replayLogCreationTime": {
						 "description": "The timestamp of the creation of the log used to support\nthe replay function on this stream. Note that this might\nbe earlier then the earliest available notification in\nthe log. This object is updated if the log resets for\nsome reason.  This object MUST be present if replay is\nsupported.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:6456-20-74T34:36:00-62:84",
						 "type": "string",
						 "xml": {
							 "name": "replayLogCreationTime",
							 "namespace": "urn:ietf:params:xml:ns:netmod:notification"
						}
					}
				},
				 "required": [
					"description",
					"replaySupport"
				],
				 "type": "object",
				 "title": "nc-notifications_netconf_streams_stream",
				 "description": "Stream name, description and other information.",
				 "xml": {
					 "name": "stream",
					 "namespace": "urn:ietf:params:xml:ns:netmod:notification"
				}
			},
			 "nc-notifications_netconf_streams_stream_TOP": {
				 "type": "object",
				 "properties": {
					 "stream": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/nc-notifications_netconf_streams_stream"
						},
						 "description": "Stream name, description and other information."
					}
				},
				 "title": "nc-notifications_netconf_streams_stream_TOP"
			},
			 "nc-notifications_netconf_streams": {
				 "properties": {
					 "stream": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/nc-notifications_netconf_streams_stream"
						},
						 "description": "Stream name, description and other information."
					}
				},
				 "type": "object",
				 "title": "nc-notifications_netconf_streams",
				 "description": "The list of event streams supported by the system. When\na query is issued, the returned set of streams is\ndetermined based on user privileges.",
				 "xml": {
					 "name": "streams",
					 "namespace": "urn:ietf:params:xml:ns:netmod:notification"
				}
			},
			 "nc-notifications_netconf_streams_TOP": {
				 "type": "object",
				 "properties": {
					 "streams": {
						 "$ref": "#/components/schemas/nc-notifications_netconf_streams"
					}
				},
				 "title": "nc-notifications_netconf_streams_TOP"
			},
			 "nc-notifications_netconf": {
				 "properties": {
					 "streams": {
						 "$ref": "#/components/schemas/nc-notifications_netconf_streams"
					}
				},
				 "type": "object",
				 "title": "nc-notifications_netconf",
				 "description": "Top-level element in the notification namespace",
				 "xml": {
					 "name": "netconf",
					 "namespace": "urn:ietf:params:xml:ns:netmod:notification"
				}
			},
			 "nc-notifications_netconf_TOP": {
				 "type": "object",
				 "properties": {
					 "netconf": {
						 "$ref": "#/components/schemas/nc-notifications_netconf"
					}
				},
				 "title": "nc-notifications_netconf_TOP"
			},
			 "notifications_create-subscription_input": {
				 "properties": {
					 "stream": {
						 "description": "An optional parameter that indicates which stream of events\nis of interest. If not present, then events in the default\nNETCONF stream will be sent.",
						 "default": "NETCONF",
						 "type": "string",
						 "xml": {
							 "name": "stream",
							 "namespace": "urn:ietf:params:xml:ns:netconf:notification:1.0"
						}
					},
					 "filter": {
						 "description": "An optional parameter that indicates which subset of all\npossible events is of interest. The format of this\nparameter is the same as that of the filter parameter\nin the NETCONF protocol operations. If not present,\nall events not precluded by other parameters will\nbe sent.",
						 "default": "<filter> ... </filter>",
						 "type": "string",
						 "xml": {
							 "name": "filter",
							 "namespace": "urn:ietf:params:xml:ns:netconf:notification:1.0"
						}
					},
					 "startTime": {
						 "description": "A parameter used to trigger the replay feature and\nindicates that the replay should start at the time\nspecified. If start time is not present, this is not a\nreplay subscription.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:8898-18-38T90:70:55.90Z",
						 "type": "string",
						 "xml": {
							 "name": "startTime",
							 "namespace": "urn:ietf:params:xml:ns:netconf:notification:1.0"
						}
					},
					 "stopTime": {
						 "description": "An optional parameter used with the optional replay\nfeature to indicate the newest notifications of\ninterest. If stop time is not present, the notifications\nwill continue until the subscription is terminated.\nMust be used with startTime.",
						 "minLength": 0,
						 "maxLength": 2147483647,
						 "default": "?:4082-70-09T73:02:47+12:43",
						 "type": "string",
						 "xml": {
							 "name": "stopTime",
							 "namespace": "urn:ietf:params:xml:ns:netconf:notification:1.0"
						}
					}
				},
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "notifications_create-subscription_input"
			},
			 "notifications_create-subscription_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/notifications_create-subscription_input"
					}
				},
				 "title": "notifications_create-subscription_input_TOP"
			},
			 "NTS_FUNCTION_TYPE_BASE": {
				 "title": "NTS_FUNCTION_TYPE_BASE",
				 "description": "The reference of each identity represents the name of the associated docker image.",
				 "enum": [
					"NTS_FUNCTION_TYPE_BASE"
				],
				 "type": "string"
			},
			 "nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list_post": {
				 "type": "object",
				 "properties": {
					 "delay-period": {
						 "description": "The amount of seconds before the next event.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "delay-period",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "title": "nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list_post",
				 "description": "The list defining the pattern for generating events.",
				 "xml": {
					 "name": "fault-delay-list",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list_post_xml": {
				 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list_post"
			},
			 "nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list": {
				 "properties": {
					 "index": {
						 "description": "The index of the list.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "index",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "delay-period": {
						 "description": "The amount of seconds before the next event.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "delay-period",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list",
				 "description": "The list defining the pattern for generating events.",
				 "xml": {
					 "name": "fault-delay-list",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list_TOP": {
				 "type": "object",
				 "properties": {
					 "fault-delay-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list"
						},
						 "description": "The list defining the pattern for generating events."
					}
				},
				 "title": "nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list_TOP"
			},
			 "nts-network-function_simulation_network-function_config_fault-generation_post": {
				 "type": "object",
				 "properties": {
					 "fault-delay-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list"
						},
						 "description": "The list defining the pattern for generating events."
					}
				},
				 "title": "nts-network-function_simulation_network-function_config_fault-generation_post",
				 "description": "Groups the fault generation configuration and status.",
				 "xml": {
					 "name": "fault-generation",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_config_fault-generation_post_xml": {
				 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_fault-generation_post"
			},
			 "nts-network-function_simulation_network-function_config_fault-generation": {
				 "properties": {
					 "fault-delay-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_config_fault-delay-list"
						},
						 "description": "The list defining the pattern for generating events."
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function_config_fault-generation",
				 "description": "Groups the fault generation configuration and status.",
				 "xml": {
					 "name": "fault-generation",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_config_fault-generation_TOP": {
				 "type": "object",
				 "properties": {
					 "fault-generation": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_fault-generation"
					}
				},
				 "title": "nts-network-function_simulation_network-function_config_fault-generation_TOP"
			},
			 "nts-network-function_simulation_network-function_config_netconf_post": {
				 "type": "object",
				 "properties": {
					 "call-home": {
						 "description": "For enabling the NETCONF Call Home feature. If set to 'true', each simulated device, when booting up, will try to Call Home to the SDN Controller.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "call-home",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "faults-enabled": {
						 "description": "For enabling the fault generation.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "faults-enabled",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "title": "nts-network-function_simulation_network-function_config_netconf_post",
				 "description": "Container for describing the NETCONF details.",
				 "xml": {
					 "name": "netconf",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_config_netconf_post_xml": {
				 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_netconf_post"
			},
			 "nts-network-function_simulation_network-function_config_netconf": {
				 "properties": {
					 "call-home": {
						 "description": "For enabling the NETCONF Call Home feature. If set to 'true', each simulated device, when booting up, will try to Call Home to the SDN Controller.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "call-home",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "faults-enabled": {
						 "description": "For enabling the fault generation.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "faults-enabled",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function_config_netconf",
				 "description": "Container for describing the NETCONF details.",
				 "xml": {
					 "name": "netconf",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_config_netconf_TOP": {
				 "type": "object",
				 "properties": {
					 "netconf": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_netconf"
					}
				},
				 "title": "nts-network-function_simulation_network-function_config_netconf_TOP"
			},
			 "nts-network-function_simulation_network-function_config_ves_post": {
				 "type": "object",
				 "properties": {
					 "pnf-registration": {
						 "description": "For enabling the PNF Registration messages. If set to 'true', each simulated device, when booting up, will send a PNF Registration message to the VES Collector.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "pnf-registration",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "heartbeat-period": {
						 "description": "The number of seconds between VES heartbeat messages.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "heartbeat-period",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "faults-enabled": {
						 "description": "For enabling the fault generation.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "faults-enabled",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "title": "nts-network-function_simulation_network-function_config_ves_post",
				 "description": "Container for describing the VES details.",
				 "xml": {
					 "name": "ves",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_config_ves_post_xml": {
				 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_ves_post"
			},
			 "nts-network-function_simulation_network-function_config_ves": {
				 "properties": {
					 "pnf-registration": {
						 "description": "For enabling the PNF Registration messages. If set to 'true', each simulated device, when booting up, will send a PNF Registration message to the VES Collector.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "pnf-registration",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "heartbeat-period": {
						 "description": "The number of seconds between VES heartbeat messages.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "heartbeat-period",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "faults-enabled": {
						 "description": "For enabling the fault generation.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "faults-enabled",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function_config_ves",
				 "description": "Container for describing the VES details.",
				 "xml": {
					 "name": "ves",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_config_ves_TOP": {
				 "type": "object",
				 "properties": {
					 "ves": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_ves"
					}
				},
				 "title": "nts-network-function_simulation_network-function_config_ves_TOP"
			},
			 "nts-network-function_simulation_config_network-function_post": {
				 "type": "object",
				 "properties": {
					 "function-type": {
						 "description": "Type of network function that is simulated.",
						 "default": "Some function-type",
						 "type": "string",
						 "xml": {
							 "name": "function-type",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "mount-point-addressing-method": {
						 "description": "Specifies how to address the simulated network function: via the host machine or via docker.",
						 "enum": [
							"host-mapping",
							"docker-mapping"
						],
						 "default": "docker-mapping",
						 "type": "string",
						 "xml": {
							 "name": "mount-point-addressing-method",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "fault-generation": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_fault-generation"
					},
					 "netconf": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_netconf"
					},
					 "ves": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_ves"
					}
				},
				 "title": "nts-network-function_simulation_config_network-function_post",
				 "description": "Container which encompasses the details of the network function.",
				 "xml": {
					 "name": "network-function",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_config_network-function_post_xml": {
				 "$ref": "#/components/schemas/nts-network-function_simulation_config_network-function_post"
			},
			 "nts-network-function_simulation_config_network-function": {
				 "properties": {
					 "function-type": {
						 "description": "Type of network function that is simulated.",
						 "default": "Some function-type",
						 "type": "string",
						 "xml": {
							 "name": "function-type",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "mount-point-addressing-method": {
						 "description": "Specifies how to address the simulated network function: via the host machine or via docker.",
						 "enum": [
							"host-mapping",
							"docker-mapping"
						],
						 "default": "docker-mapping",
						 "type": "string",
						 "xml": {
							 "name": "mount-point-addressing-method",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "fault-generation": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_fault-generation"
					},
					 "netconf": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_netconf"
					},
					 "ves": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_config_ves"
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_config_network-function",
				 "description": "Container which encompasses the details of the network function.",
				 "xml": {
					 "name": "network-function",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_config_network-function_TOP": {
				 "type": "object",
				 "properties": {
					 "network-function": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_config_network-function"
					}
				},
				 "title": "nts-network-function_simulation_config_network-function_TOP"
			},
			 "nts-network-function_simulation_config_sdn-controller_post": {
				 "type": "object",
				 "properties": {
					 "controller-ip": {
						 "description": "The IP address of the SDN Controller.",
						 "type": "string",
						 "xml": {
							 "name": "controller-ip",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-port": {
						 "description": "The port exposed by the SDN Controller.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "controller-port",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-netconf-call-home-port": {
						 "description": "The port exposed by the SDN Controller for NETCONF Call Home.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "controller-netconf-call-home-port",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-username": {
						 "description": "The username for accessing the SDN Controller.",
						 "default": "Some controller-username",
						 "type": "string",
						 "xml": {
							 "name": "controller-username",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-password": {
						 "description": "The password for accessing the SDN Controller.",
						 "default": "Some controller-password",
						 "type": "string",
						 "xml": {
							 "name": "controller-password",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "title": "nts-network-function_simulation_config_sdn-controller_post",
				 "description": "Groups details about the SDN Controller.",
				 "xml": {
					 "name": "sdn-controller",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_config_sdn-controller_post_xml": {
				 "$ref": "#/components/schemas/nts-network-function_simulation_config_sdn-controller_post"
			},
			 "nts-network-function_simulation_config_sdn-controller": {
				 "properties": {
					 "controller-ip": {
						 "description": "The IP address of the SDN Controller.",
						 "type": "string",
						 "xml": {
							 "name": "controller-ip",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-port": {
						 "description": "The port exposed by the SDN Controller.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "controller-port",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-netconf-call-home-port": {
						 "description": "The port exposed by the SDN Controller for NETCONF Call Home.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "controller-netconf-call-home-port",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-username": {
						 "description": "The username for accessing the SDN Controller.",
						 "default": "Some controller-username",
						 "type": "string",
						 "xml": {
							 "name": "controller-username",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-password": {
						 "description": "The password for accessing the SDN Controller.",
						 "default": "Some controller-password",
						 "type": "string",
						 "xml": {
							 "name": "controller-password",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_config_sdn-controller",
				 "description": "Groups details about the SDN Controller.",
				 "xml": {
					 "name": "sdn-controller",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_config_sdn-controller_TOP": {
				 "type": "object",
				 "properties": {
					 "sdn-controller": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_config_sdn-controller"
					}
				},
				 "title": "nts-network-function_simulation_config_sdn-controller_TOP"
			},
			 "nts-network-function_simulation_config_ves-endpoint_post": {
				 "type": "object",
				 "properties": {
					 "ves-endpoint-protocol": {
						 "description": "The protocol (HTTP / HTTPS) to be used to address the VES Collector.",
						 "enum": [
							"http",
							"https"
						],
						 "default": "https",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-protocol",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-ip": {
						 "description": "The IP address of the VES Collector.",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-ip",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-port": {
						 "description": "The port exposed by the VES Collector.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "ves-endpoint-port",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-auth-method": {
						 "description": "The type of the authentication to be used with the VES Collector.",
						 "enum": [
							"no-auth",
							"cert-only",
							"basic-auth",
							"cert-basic-auth"
						],
						 "default": "no-auth",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-auth-method",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-username": {
						 "description": "The username for accessing the VES Collector.",
						 "default": "Some ves-endpoint-username",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-username",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-password": {
						 "description": "The password for accessing the VES Collector.",
						 "default": "Some ves-endpoint-password",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-password",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-certificate": {
						 "description": "The Certificate to be used to authenticate to the VES Collector.",
						 "default": "Some ves-endpoint-certificate",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-certificate",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "title": "nts-network-function_simulation_config_ves-endpoint_post",
				 "description": "Groups details about the VES Collector endpoint.",
				 "xml": {
					 "name": "ves-endpoint",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_config_ves-endpoint_post_xml": {
				 "$ref": "#/components/schemas/nts-network-function_simulation_config_ves-endpoint_post"
			},
			 "nts-network-function_simulation_config_ves-endpoint": {
				 "properties": {
					 "ves-endpoint-protocol": {
						 "description": "The protocol (HTTP / HTTPS) to be used to address the VES Collector.",
						 "enum": [
							"http",
							"https"
						],
						 "default": "https",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-protocol",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-ip": {
						 "description": "The IP address of the VES Collector.",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-ip",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-port": {
						 "description": "The port exposed by the VES Collector.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "ves-endpoint-port",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-auth-method": {
						 "description": "The type of the authentication to be used with the VES Collector.",
						 "enum": [
							"no-auth",
							"cert-only",
							"basic-auth",
							"cert-basic-auth"
						],
						 "default": "no-auth",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-auth-method",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-username": {
						 "description": "The username for accessing the VES Collector.",
						 "default": "Some ves-endpoint-username",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-username",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-password": {
						 "description": "The password for accessing the VES Collector.",
						 "default": "Some ves-endpoint-password",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-password",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-certificate": {
						 "description": "The Certificate to be used to authenticate to the VES Collector.",
						 "default": "Some ves-endpoint-certificate",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-certificate",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_config_ves-endpoint",
				 "description": "Groups details about the VES Collector endpoint.",
				 "xml": {
					 "name": "ves-endpoint",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_config_ves-endpoint_TOP": {
				 "type": "object",
				 "properties": {
					 "ves-endpoint": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_config_ves-endpoint"
					}
				},
				 "title": "nts-network-function_simulation_config_ves-endpoint_TOP"
			},
			 "nts-network-function_config_simulation_post": {
				 "type": "object",
				 "properties": {
					 "network-function": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_config_network-function"
					},
					 "sdn-controller": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_config_sdn-controller"
					},
					 "ves-endpoint": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_config_ves-endpoint"
					}
				},
				 "title": "nts-network-function_config_simulation_post",
				 "description": "Root level container which controls the Network Function.",
				 "xml": {
					 "name": "simulation",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_config_simulation_post_xml": {
				 "$ref": "#/components/schemas/nts-network-function_config_simulation_post"
			},
			 "nts-network-function_config_simulation": {
				 "properties": {
					 "network-function": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_config_network-function"
					},
					 "sdn-controller": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_config_sdn-controller"
					},
					 "ves-endpoint": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_config_ves-endpoint"
					}
				},
				 "type": "object",
				 "title": "nts-network-function_config_simulation",
				 "description": "Root level container which controls the Network Function.",
				 "xml": {
					 "name": "simulation",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_config_simulation_TOP": {
				 "type": "object",
				 "properties": {
					 "simulation": {
						 "$ref": "#/components/schemas/nts-network-function_config_simulation"
					}
				},
				 "title": "nts-network-function_config_simulation_TOP"
			},
			 "nts-network-function_simulation_network-function_fault-generation_fault-delay-list": {
				 "properties": {
					 "index": {
						 "description": "The index of the list.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "index",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "delay-period": {
						 "description": "The amount of seconds before the next event.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "delay-period",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function_fault-generation_fault-delay-list",
				 "description": "The list defining the pattern for generating events.",
				 "xml": {
					 "name": "fault-delay-list",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_fault-generation_fault-delay-list_TOP": {
				 "type": "object",
				 "properties": {
					 "fault-delay-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_fault-delay-list"
						},
						 "description": "The list defining the pattern for generating events."
					}
				},
				 "title": "nts-network-function_simulation_network-function_fault-generation_fault-delay-list_TOP"
			},
			 "nts-network-function_simulation_network-function_fault-generation_fault-count": {
				 "properties": {
					 "normal": {
						 "description": "Number of normal (non-alarmed) events.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "normal",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "warning": {
						 "description": "Number of warning events.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "warning",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "minor": {
						 "description": "Number of minor events.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "minor",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "major": {
						 "description": "Number of major events.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "major",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "critical": {
						 "description": "Number of critical events.",
						 "format": "int64",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "critical",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function_fault-generation_fault-count",
				 "description": "Container which groups the number of fault events, by severity.",
				 "xml": {
					 "name": "fault-count",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_fault-generation_fault-count_TOP": {
				 "type": "object",
				 "properties": {
					 "fault-count": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_fault-count"
					}
				},
				 "title": "nts-network-function_simulation_network-function_fault-generation_fault-count_TOP"
			},
			 "nts-network-function_simulation_network-function_fault-generation": {
				 "properties": {
					 "fault-delay-list": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_fault-delay-list"
						},
						 "description": "The list defining the pattern for generating events."
					},
					 "fault-count": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation_fault-count"
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function_fault-generation",
				 "description": "Groups the fault generation configuration and status.",
				 "xml": {
					 "name": "fault-generation",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_fault-generation_TOP": {
				 "type": "object",
				 "properties": {
					 "fault-generation": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation"
					}
				},
				 "title": "nts-network-function_simulation_network-function_fault-generation_TOP"
			},
			 "nts-network-function_simulation_network-function_netconf": {
				 "properties": {
					 "call-home": {
						 "description": "For enabling the NETCONF Call Home feature. If set to 'true', each simulated device, when booting up, will try to Call Home to the SDN Controller.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "call-home",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "faults-enabled": {
						 "description": "For enabling the fault generation.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "faults-enabled",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function_netconf",
				 "description": "Container for describing the NETCONF details.",
				 "xml": {
					 "name": "netconf",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_netconf_TOP": {
				 "type": "object",
				 "properties": {
					 "netconf": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_netconf"
					}
				},
				 "title": "nts-network-function_simulation_network-function_netconf_TOP"
			},
			 "nts-network-function_simulation_network-function_ves": {
				 "properties": {
					 "pnf-registration": {
						 "description": "For enabling the PNF Registration messages. If set to 'true', each simulated device, when booting up, will send a PNF Registration message to the VES Collector.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "pnf-registration",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "heartbeat-period": {
						 "description": "The number of seconds between VES heartbeat messages.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "heartbeat-period",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "faults-enabled": {
						 "description": "For enabling the fault generation.",
						 "default": true,
						 "type": "boolean",
						 "xml": {
							 "name": "faults-enabled",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function_ves",
				 "description": "Container for describing the VES details.",
				 "xml": {
					 "name": "ves",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_ves_TOP": {
				 "type": "object",
				 "properties": {
					 "ves": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_ves"
					}
				},
				 "title": "nts-network-function_simulation_network-function_ves_TOP"
			},
			 "nts-network-function_simulation_network-function": {
				 "properties": {
					 "function-type": {
						 "description": "Type of network function that is simulated.",
						 "default": "Some function-type",
						 "type": "string",
						 "xml": {
							 "name": "function-type",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "mount-point-addressing-method": {
						 "description": "Specifies how to address the simulated network function: via the host machine or via docker.",
						 "enum": [
							"host-mapping",
							"docker-mapping"
						],
						 "default": "docker-mapping",
						 "type": "string",
						 "xml": {
							 "name": "mount-point-addressing-method",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "fault-generation": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_fault-generation"
					},
					 "netconf": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_netconf"
					},
					 "ves": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function_ves"
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_network-function",
				 "description": "Container which encompasses the details of the network function.",
				 "xml": {
					 "name": "network-function",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_network-function_TOP": {
				 "type": "object",
				 "properties": {
					 "network-function": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function"
					}
				},
				 "title": "nts-network-function_simulation_network-function_TOP"
			},
			 "nts-network-function_simulation_sdn-controller": {
				 "properties": {
					 "controller-ip": {
						 "description": "The IP address of the SDN Controller.",
						 "type": "string",
						 "xml": {
							 "name": "controller-ip",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-port": {
						 "description": "The port exposed by the SDN Controller.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "controller-port",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-netconf-call-home-port": {
						 "description": "The port exposed by the SDN Controller for NETCONF Call Home.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "controller-netconf-call-home-port",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-username": {
						 "description": "The username for accessing the SDN Controller.",
						 "default": "Some controller-username",
						 "type": "string",
						 "xml": {
							 "name": "controller-username",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "controller-password": {
						 "description": "The password for accessing the SDN Controller.",
						 "default": "Some controller-password",
						 "type": "string",
						 "xml": {
							 "name": "controller-password",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_sdn-controller",
				 "description": "Groups details about the SDN Controller.",
				 "xml": {
					 "name": "sdn-controller",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_sdn-controller_TOP": {
				 "type": "object",
				 "properties": {
					 "sdn-controller": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_sdn-controller"
					}
				},
				 "title": "nts-network-function_simulation_sdn-controller_TOP"
			},
			 "nts-network-function_simulation_ves-endpoint": {
				 "properties": {
					 "ves-endpoint-protocol": {
						 "description": "The protocol (HTTP / HTTPS) to be used to address the VES Collector.",
						 "enum": [
							"http",
							"https"
						],
						 "default": "https",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-protocol",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-ip": {
						 "description": "The IP address of the VES Collector.",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-ip",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-port": {
						 "description": "The port exposed by the VES Collector.",
						 "format": "int32",
						 "default": 0,
						 "type": "integer",
						 "xml": {
							 "name": "ves-endpoint-port",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-auth-method": {
						 "description": "The type of the authentication to be used with the VES Collector.",
						 "enum": [
							"no-auth",
							"cert-only",
							"basic-auth",
							"cert-basic-auth"
						],
						 "default": "no-auth",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-auth-method",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-username": {
						 "description": "The username for accessing the VES Collector.",
						 "default": "Some ves-endpoint-username",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-username",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-password": {
						 "description": "The password for accessing the VES Collector.",
						 "default": "Some ves-endpoint-password",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-password",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "ves-endpoint-certificate": {
						 "description": "The Certificate to be used to authenticate to the VES Collector.",
						 "default": "Some ves-endpoint-certificate",
						 "type": "string",
						 "xml": {
							 "name": "ves-endpoint-certificate",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation_ves-endpoint",
				 "description": "Groups details about the VES Collector endpoint.",
				 "xml": {
					 "name": "ves-endpoint",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_ves-endpoint_TOP": {
				 "type": "object",
				 "properties": {
					 "ves-endpoint": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_ves-endpoint"
					}
				},
				 "title": "nts-network-function_simulation_ves-endpoint_TOP"
			},
			 "nts-network-function_simulation": {
				 "properties": {
					 "network-function": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_network-function"
					},
					 "sdn-controller": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_sdn-controller"
					},
					 "ves-endpoint": {
						 "$ref": "#/components/schemas/nts-network-function_simulation_ves-endpoint"
					}
				},
				 "type": "object",
				 "title": "nts-network-function_simulation",
				 "description": "Root level container which controls the Network Function.",
				 "xml": {
					 "name": "simulation",
					 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
				}
			},
			 "nts-network-function_simulation_TOP": {
				 "type": "object",
				 "properties": {
					 "simulation": {
						 "$ref": "#/components/schemas/nts-network-function_simulation"
					}
				},
				 "title": "nts-network-function_simulation_TOP"
			},
			 "nts-network-function_datastore-populate_output": {
				 "properties": {
					 "status": {
						 "description": "The status of the RPC.",
						 "enum": [
							"SUCCESS",
							"ERROR"
						],
						 "default": "SUCCESS",
						 "type": "string",
						 "xml": {
							 "name": "status",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "required": [
					"status"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "nts-network-function_datastore-populate_output"
			},
			 "nts-network-function_datastore-populate_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/nts-network-function_datastore-populate_output"
					}
				},
				 "title": "nts-network-function_datastore-populate_output_TOP"
			},
			 "nts-network-function_feature-control_input": {
				 "properties": {
					 "features": {
						 "description": "A bit-wise list with features to be activated.",
						 "minItems": 0,
						 "uniqueItems": true,
						 "enum": [
							"ves-file-ready",
							"ves-heartbeat",
							"ves-pnf-registration",
							"manual-notification-generation",
							"netconf-call-home",
							"web-cut-through"
						],
						 "default": "ves-file-ready\" \"web-cut-through",
						 "type": "string",
						 "xml": {
							 "name": "features",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "required": [
					"features"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "nts-network-function_feature-control_input"
			},
			 "nts-network-function_feature-control_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/nts-network-function_feature-control_input"
					}
				},
				 "title": "nts-network-function_feature-control_input_TOP"
			},
			 "nts-network-function_feature-control_output": {
				 "properties": {
					 "status": {
						 "description": "The status of the RPC.",
						 "enum": [
							"SUCCESS",
							"ERROR"
						],
						 "default": "SUCCESS",
						 "type": "string",
						 "xml": {
							 "name": "status",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "required": [
					"status"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "nts-network-function_feature-control_output"
			},
			 "nts-network-function_feature-control_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/nts-network-function_feature-control_output"
					}
				},
				 "title": "nts-network-function_feature-control_output_TOP"
			},
			 "nts-network-function_invoke-notification_input": {
				 "properties": {
					 "notification-format": {
						 "description": "The format of the notification string.",
						 "enum": [
							"xml",
							"json"
						],
						 "default": "xml",
						 "type": "string",
						 "xml": {
							 "name": "notification-format",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					},
					 "notification-object": {
						 "description": "A JSON string containing the notification object to be sent by the device.",
						 "default": "Some notification-object",
						 "type": "string",
						 "xml": {
							 "name": "notification-object",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "required": [
					"notification-format",
					"notification-object"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "nts-network-function_invoke-notification_input"
			},
			 "nts-network-function_invoke-notification_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/nts-network-function_invoke-notification_input"
					}
				},
				 "title": "nts-network-function_invoke-notification_input_TOP"
			},
			 "nts-network-function_invoke-notification_output": {
				 "properties": {
					 "status": {
						 "description": "The status of the RPC.",
						 "enum": [
							"SUCCESS",
							"ERROR"
						],
						 "default": "SUCCESS",
						 "type": "string",
						 "xml": {
							 "name": "status",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "required": [
					"status"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "nts-network-function_invoke-notification_output"
			},
			 "nts-network-function_invoke-notification_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/nts-network-function_invoke-notification_output"
					}
				},
				 "title": "nts-network-function_invoke-notification_output_TOP"
			},
			 "nts-network-function_invoke-ves-pm-file-ready_input": {
				 "properties": {
					 "file-location": {
						 "description": "A string containing the location of the file on the server.",
						 "default": "Some file-location",
						 "type": "string",
						 "xml": {
							 "name": "file-location",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "required": [
					"file-location"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "nts-network-function_invoke-ves-pm-file-ready_input"
			},
			 "nts-network-function_invoke-ves-pm-file-ready_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/nts-network-function_invoke-ves-pm-file-ready_input"
					}
				},
				 "title": "nts-network-function_invoke-ves-pm-file-ready_input_TOP"
			},
			 "nts-network-function_invoke-ves-pm-file-ready_output": {
				 "properties": {
					 "status": {
						 "description": "The status of the RPC.",
						 "enum": [
							"SUCCESS",
							"ERROR"
						],
						 "default": "SUCCESS",
						 "type": "string",
						 "xml": {
							 "name": "status",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "required": [
					"status"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "nts-network-function_invoke-ves-pm-file-ready_output"
			},
			 "nts-network-function_invoke-ves-pm-file-ready_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/nts-network-function_invoke-ves-pm-file-ready_output"
					}
				},
				 "title": "nts-network-function_invoke-ves-pm-file-ready_output_TOP"
			},
			 "nts-network-function_clear-fault-counters_output": {
				 "properties": {
					 "status": {
						 "description": "The status of the RPC.",
						 "enum": [
							"SUCCESS",
							"ERROR"
						],
						 "default": "SUCCESS",
						 "type": "string",
						 "xml": {
							 "name": "status",
							 "namespace": "urn:o-ran-sc:params:xml:ns:yang:nts:network:function"
						}
					}
				},
				 "required": [
					"status"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "nts-network-function_clear-fault-counters_output"
			},
			 "nts-network-function_clear-fault-counters_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/nts-network-function_clear-fault-counters_output"
					}
				},
				 "title": "nts-network-function_clear-fault-counters_output_TOP"
			},
			 "o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection_post": {
				 "type": "object",
				 "properties": {
				},
				 "title": "o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection_post",
				 "description": "A list of connection objects to O-RAN-SC radio units.",
				 "xml": {
					 "name": "du-to-ru-connection",
					 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
				}
			},
			 "o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection_post_xml": {
				 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection_post"
			},
			 "o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection": {
				 "properties": {
					 "name": {
						 "description": "It is proposed to use the network unique identifier of the remote\nnetwork function.\nNote: After discussion the string was not restricted by a 'length'\nstatement of a 'pattern' statement. Please avoid leading and ending\nspaces and consecutive spaces and any character outside of UTF-8-",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
						}
					}
				},
				 "type": "object",
				 "title": "o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection",
				 "description": "A list of connection objects to O-RAN-SC radio units.",
				 "xml": {
					 "name": "du-to-ru-connection",
					 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
				}
			},
			 "o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection_TOP": {
				 "type": "object",
				 "properties": {
					 "du-to-ru-connection": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection"
						},
						 "description": "A list of connection objects to O-RAN-SC radio units."
					}
				},
				 "title": "o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection_TOP"
			},
			 "o-ran-sc-du-hello-world_config_network-function_post": {
				 "type": "object",
				 "properties": {
					 "du-to-ru-connection": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection"
						},
						 "description": "A list of connection objects to O-RAN-SC radio units."
					}
				},
				 "title": "o-ran-sc-du-hello-world_config_network-function_post",
				 "description": "The root container for the configuration and operational data.\nThe object implements the 'network-function-grp'",
				 "xml": {
					 "name": "network-function",
					 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
				}
			},
			 "o-ran-sc-du-hello-world_config_network-function_post_xml": {
				 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_config_network-function_post"
			},
			 "o-ran-sc-du-hello-world_config_network-function": {
				 "properties": {
					 "du-to-ru-connection": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_config_du-to-ru-connection"
						},
						 "description": "A list of connection objects to O-RAN-SC radio units."
					}
				},
				 "type": "object",
				 "title": "o-ran-sc-du-hello-world_config_network-function",
				 "description": "The root container for the configuration and operational data.\nThe object implements the 'network-function-grp'",
				 "xml": {
					 "name": "network-function",
					 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
				}
			},
			 "o-ran-sc-du-hello-world_config_network-function_TOP": {
				 "type": "object",
				 "properties": {
					 "network-function": {
						 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_config_network-function"
					}
				},
				 "title": "o-ran-sc-du-hello-world_config_network-function_TOP"
			},
			 "o-ran-sc-du-hello-world_network-function_du-to-ru-connection": {
				 "properties": {
					 "name": {
						 "description": "It is proposed to use the network unique identifier of the remote\nnetwork function.\nNote: After discussion the string was not restricted by a 'length'\nstatement of a 'pattern' statement. Please avoid leading and ending\nspaces and consecutive spaces and any character outside of UTF-8-",
						 "default": "Some name",
						 "type": "string",
						 "xml": {
							 "name": "name",
							 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
						}
					},
					 "status": {
						 "description": "The value represents the connection status. ",
						 "enum": [
							"disconnected",
							"connecting",
							"connected",
							"disconnecting",
							"unable-to-connect"
						],
						 "default": "disconnected",
						 "type": "string",
						 "xml": {
							 "name": "status",
							 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
						}
					}
				},
				 "type": "object",
				 "title": "o-ran-sc-du-hello-world_network-function_du-to-ru-connection",
				 "description": "A list of connection objects to O-RAN-SC radio units.",
				 "xml": {
					 "name": "du-to-ru-connection",
					 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
				}
			},
			 "o-ran-sc-du-hello-world_network-function_du-to-ru-connection_TOP": {
				 "type": "object",
				 "properties": {
					 "du-to-ru-connection": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_du-to-ru-connection"
						},
						 "description": "A list of connection objects to O-RAN-SC radio units."
					}
				},
				 "title": "o-ran-sc-du-hello-world_network-function_du-to-ru-connection_TOP"
			},
			 "o-ran-sc-du-hello-world_network-function": {
				 "properties": {
					 "du-to-ru-connection": {
						 "type": "array",
						 "items": {
							 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function_du-to-ru-connection"
						},
						 "description": "A list of connection objects to O-RAN-SC radio units."
					}
				},
				 "type": "object",
				 "title": "o-ran-sc-du-hello-world_network-function",
				 "description": "The root container for the configuration and operational data.\nThe object implements the 'network-function-grp'",
				 "xml": {
					 "name": "network-function",
					 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
				}
			},
			 "o-ran-sc-du-hello-world_network-function_TOP": {
				 "type": "object",
				 "properties": {
					 "network-function": {
						 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_network-function"
					}
				},
				 "title": "o-ran-sc-du-hello-world_network-function_TOP"
			},
			 "o-ran-sc-du-hello-world_connect_input": {
				 "properties": {
					 "remote-network-function": {
						 "description": "An reference to a remote network function - an O-RU - to which\na connection should be established.",
						 "default": "Some remote-network-function",
						 "type": "string",
						 "xml": {
							 "name": "remote-network-function",
							 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
						}
					}
				},
				 "required": [
					"remote-network-function"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "o-ran-sc-du-hello-world_connect_input"
			},
			 "o-ran-sc-du-hello-world_connect_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_connect_input"
					}
				},
				 "title": "o-ran-sc-du-hello-world_connect_input_TOP"
			},
			 "o-ran-sc-du-hello-world_connect_output": {
				 "properties": {
					 "response-status": {
						 "description": "The response status related to the corresponding request.\nIts values are inspired by HTTP response status codes.",
						 "enum": [
							"ok",
							"accepted",
							"internal-server-error"
						],
						 "default": "ok",
						 "type": "string",
						 "xml": {
							 "name": "response-status",
							 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
						}
					},
					 "message": {
						 "description": "A human readable text complementary to the response status. ",
						 "default": "Some message",
						 "type": "string",
						 "xml": {
							 "name": "message",
							 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
						}
					}
				},
				 "required": [
					"response-status"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "o-ran-sc-du-hello-world_connect_output"
			},
			 "o-ran-sc-du-hello-world_connect_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_connect_output"
					}
				},
				 "title": "o-ran-sc-du-hello-world_connect_output_TOP"
			},
			 "o-ran-sc-du-hello-world_disconnect_input": {
				 "properties": {
					 "remote-network-function": {
						 "description": "An reference to a remote network function - an O-RU - to which\nthe connection should be destroyed.",
						 "default": "Some remote-network-function",
						 "type": "string",
						 "xml": {
							 "name": "remote-network-function",
							 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
						}
					}
				},
				 "required": [
					"remote-network-function"
				],
				 "type": "object",
				 "xml": {
					 "name": "input"
				},
				 "title": "o-ran-sc-du-hello-world_disconnect_input"
			},
			 "o-ran-sc-du-hello-world_disconnect_input_TOP": {
				 "type": "object",
				 "properties": {
					 "input": {
						 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_disconnect_input"
					}
				},
				 "title": "o-ran-sc-du-hello-world_disconnect_input_TOP"
			},
			 "o-ran-sc-du-hello-world_disconnect_output": {
				 "properties": {
					 "response-status": {
						 "description": "The response status related to the corresponding request.\nIts values are inspired by HTTP response status codes.",
						 "enum": [
							"ok",
							"accepted",
							"internal-server-error"
						],
						 "default": "ok",
						 "type": "string",
						 "xml": {
							 "name": "response-status",
							 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
						}
					},
					 "message": {
						 "description": "A human readable text complementary to the response status. ",
						 "default": "Some message",
						 "type": "string",
						 "xml": {
							 "name": "message",
							 "namespace": "urn:o-ran-sc:yang:o-ran-sc-du-hello-world"
						}
					}
				},
				 "required": [
					"response-status"
				],
				 "type": "object",
				 "xml": {
					 "name": "output"
				},
				 "title": "o-ran-sc-du-hello-world_disconnect_output"
			},
			 "o-ran-sc-du-hello-world_disconnect_output_TOP": {
				 "type": "object",
				 "properties": {
					 "output": {
						 "$ref": "#/components/schemas/o-ran-sc-du-hello-world_disconnect_output"
					}
				},
				 "title": "o-ran-sc-du-hello-world_disconnect_output_TOP"
			},
			 "sysrepo-plugind_sysrepo-plugind_config_plugin-order_post": {
				 "type": "object",
				 "properties": {
					 "plugin": {
						 "type": "array",
						 "items": {
							 "default": "Some plugin",
							 "type": "string"
						},
						 "description": "Plugin name."
					}
				},
				 "title": "sysrepo-plugind_sysrepo-plugind_config_plugin-order_post",
				 "description": "The order in which to run plugins from the sysrepo-plugind.",
				 "xml": {
					 "name": "plugin-order",
					 "namespace": "urn:sysrepo:plugind"
				}
			},
			 "sysrepo-plugind_sysrepo-plugind_config_plugin-order_post_xml": {
				 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_config_plugin-order_post"
			},
			 "sysrepo-plugind_sysrepo-plugind_config_plugin-order": {
				 "properties": {
					 "plugin": {
						 "type": "array",
						 "items": {
							 "default": "Some plugin",
							 "type": "string"
						},
						 "description": "Plugin name."
					}
				},
				 "type": "object",
				 "title": "sysrepo-plugind_sysrepo-plugind_config_plugin-order",
				 "description": "The order in which to run plugins from the sysrepo-plugind.",
				 "xml": {
					 "name": "plugin-order",
					 "namespace": "urn:sysrepo:plugind"
				}
			},
			 "sysrepo-plugind_sysrepo-plugind_config_plugin-order_TOP": {
				 "type": "object",
				 "properties": {
					 "plugin-order": {
						 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_config_plugin-order"
					}
				},
				 "title": "sysrepo-plugind_sysrepo-plugind_config_plugin-order_TOP"
			},
			 "sysrepo-plugind_config_sysrepo-plugind_post": {
				 "type": "object",
				 "properties": {
					 "plugin-order": {
						 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_config_plugin-order"
					}
				},
				 "title": "sysrepo-plugind_config_sysrepo-plugind_post",
				 "description": "",
				 "xml": {
					 "name": "sysrepo-plugind",
					 "namespace": "urn:sysrepo:plugind"
				}
			},
			 "sysrepo-plugind_config_sysrepo-plugind_post_xml": {
				 "$ref": "#/components/schemas/sysrepo-plugind_config_sysrepo-plugind_post"
			},
			 "sysrepo-plugind_config_sysrepo-plugind": {
				 "properties": {
					 "plugin-order": {
						 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_config_plugin-order"
					}
				},
				 "type": "object",
				 "title": "sysrepo-plugind_config_sysrepo-plugind",
				 "description": "",
				 "xml": {
					 "name": "sysrepo-plugind",
					 "namespace": "urn:sysrepo:plugind"
				}
			},
			 "sysrepo-plugind_config_sysrepo-plugind_TOP": {
				 "type": "object",
				 "properties": {
					 "sysrepo-plugind": {
						 "$ref": "#/components/schemas/sysrepo-plugind_config_sysrepo-plugind"
					}
				},
				 "title": "sysrepo-plugind_config_sysrepo-plugind_TOP"
			},
			 "sysrepo-plugind_sysrepo-plugind_plugin-order": {
				 "properties": {
					 "plugin": {
						 "type": "array",
						 "items": {
							 "default": "Some plugin",
							 "type": "string"
						},
						 "description": "Plugin name."
					}
				},
				 "type": "object",
				 "title": "sysrepo-plugind_sysrepo-plugind_plugin-order",
				 "description": "The order in which to run plugins from the sysrepo-plugind.",
				 "xml": {
					 "name": "plugin-order",
					 "namespace": "urn:sysrepo:plugind"
				}
			},
			 "sysrepo-plugind_sysrepo-plugind_plugin-order_TOP": {
				 "type": "object",
				 "properties": {
					 "plugin-order": {
						 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_plugin-order"
					}
				},
				 "title": "sysrepo-plugind_sysrepo-plugind_plugin-order_TOP"
			},
			 "sysrepo-plugind_sysrepo-plugind": {
				 "properties": {
					 "plugin-order": {
						 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind_plugin-order"
					}
				},
				 "type": "object",
				 "title": "sysrepo-plugind_sysrepo-plugind",
				 "description": "",
				 "xml": {
					 "name": "sysrepo-plugind",
					 "namespace": "urn:sysrepo:plugind"
				}
			},
			 "sysrepo-plugind_sysrepo-plugind_TOP": {
				 "type": "object",
				 "properties": {
					 "sysrepo-plugind": {
						 "$ref": "#/components/schemas/sysrepo-plugind_sysrepo-plugind"
					}
				},
				 "title": "sysrepo-plugind_sysrepo-plugind_TOP"
			}
		}
	}
}